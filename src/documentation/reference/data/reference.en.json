{
    "description": "Explore the Python language and the features of your micro:bit",
    "language": "en",
    "contents": [
        {
            "slug": {
                "current": "variables",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Keep track of data that changes",
            "image": {
                "_type": "image",
                "asset": {
                    "_type": "reference",
                    "_ref": "image-b80a810d48ec07575359e04f0eb45ab48e458388-144x144-svg"
                }
            },
            "introduction": [
                {
                    "markDefs": [
                        {
                            "slug": {
                                "current": "data-types",
                                "_type": "slug"
                            },
                            "targetType": "toolkitTopic",
                            "reference": {
                                "_type": "reference",
                                "_ref": "38feee7a-be99-48db-a3ce-c0b366bafa43"
                            },
                            "_type": "toolkitInternalLink",
                            "_key": "66b713591c98"
                        }
                    ],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "Variables are used to store data that may change, such as the number of points you have in a game. Variables can have different ",
                            "_key": "d22146858b50"
                        },
                        {
                            "_type": "span",
                            "marks": [
                                "66b713591c98"
                            ],
                            "text": "data types",
                            "_key": "ecf606a7ca74"
                        },
                        {
                            "_type": "span",
                            "marks": [],
                            "text": ".",
                            "_key": "32470a7079e9"
                        }
                    ],
                    "_type": "block",
                    "style": "normal",
                    "_key": "a440995e96c6"
                }
            ],
            "contents": [
                {
                    "slug": {
                        "current": "assigning-number-variables",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "d7d0a5b800f9",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Set variables to their initial values at the start of a program using the ",
                                    "_key": "944363562b540",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "=",
                                    "_key": "a0e0976d60b4"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " sign:",
                                    "_key": "463b62c4826b"
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "count = 0",
                            "_key": "e4c05c8a4fa0"
                        }
                    ],
                    "name": "Assigning number variables"
                },
                {
                    "alternativesLabel": "Select operation:",
                    "alternatives": [
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "increment",
                            "_key": "0f4b02e018ff",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "e58314132a09",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "ebc4366fbb85",
                                            "_type": "span"
                                        },
                                        {
                                            "text": "+=",
                                            "_key": "103cc6483ef8",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to increase, or increment, the value of a variable:",
                                            "_key": "0360a836b8d8"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nscore = 2\nscore += 5\ndisplay.scroll(score)",
                                    "_key": "8a235ae98e9f"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " This increases the value of the variable ",
                                            "_key": "d8aab3f88e6f"
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "score",
                                            "_key": "c39e715d537a",
                                            "_type": "span"
                                        },
                                        {
                                            "text": " by 5, and will show 7. It does the same  as ",
                                            "_key": "54b0f3abf927",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "count = count + 5",
                                            "_key": "2d5c568afb43"
                                        },
                                        {
                                            "marks": [],
                                            "text": " - itâ€™s just shorter and easier to type.",
                                            "_key": "51f8952e7691",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "0b6de4b1b75a"
                                }
                            ],
                            "slug": {
                                "current": "increment",
                                "_type": "slug"
                            }
                        },
                        {
                            "name": "decrement",
                            "_key": "695f4d2d04c6",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "65523efae01a",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "483956261fcd",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Use "
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "-=",
                                            "_key": "fa55454d889c"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to decrease, or decrement, the value of a variable: ",
                                            "_key": "3a92bc9e5e5f"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nscore = 7\nscore -= 5\ndisplay.scroll(score)",
                                    "_key": "b043c589753f"
                                },
                                {
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This decreases the value of the variable ",
                                            "_key": "05756fd6043c",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "score",
                                            "_key": "478c79a24df8"
                                        },
                                        {
                                            "_key": "b19e1f76b915",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " by 5, and will show 2. It does the same as "
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "score = score - 5",
                                            "_key": "aade18ad5a07"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "e0238150d151",
                                    "markDefs": []
                                }
                            ],
                            "slug": {
                                "current": "decrement",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_key": "301e443f3c07",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "73fb0251b725",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "6548acc6b13a0"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "*=",
                                            "_key": "de4dd05c7549"
                                        },
                                        {
                                            "_key": "5199f2bfea28",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to multiply the value of a variable:"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \nscore = 2\nscore *= 5\ndisplay.scroll(score)",
                                    "_key": "95c57cc34ae1"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This example multiplies the value of the variable score by 5, and will show 10. It does the same as ",
                                            "_key": "aa1000f85b580",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "score = score * 5",
                                            "_key": "04bba3e5dbbe"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "76f3a9976015"
                                },
                                {
                                    "style": "normal",
                                    "_key": "b8ab09568c9e",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "",
                                            "_key": "d5266624b48b",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block"
                                }
                            ],
                            "slug": {
                                "current": "multiply",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "multiply"
                        },
                        {
                            "name": "divide",
                            "_key": "c42b25663631",
                            "content": [
                                {
                                    "_key": "e64dd48e839a",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "2d176fbb7ecf0",
                                            "_type": "span"
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "/=",
                                            "_key": "03d9ae55aea1",
                                            "_type": "span"
                                        },
                                        {
                                            "_key": "3b4439173cf1",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to divide the value of a variable:"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "main": "from microbit import *\n\n\nscore = 10\nscore /= 2\ndisplay.scroll(score)",
                                    "_key": "facf4cd5ff61",
                                    "_type": "python"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This example divides the value of the variable score by 2, and will show 5.0. It does the same as ",
                                            "_key": "d8b43586682a0",
                                            "_type": "span"
                                        },
                                        {
                                            "text": "score = score / 2",
                                            "_key": "f54fabe64d09",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "ead5a0d98248"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "divide"
                            },
                            "_type": "toolkitAlternativeContent"
                        }
                    ],
                    "name": "Changing number variables",
                    "slug": {
                        "current": "changing-number-variables",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "822b83c5d761",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can modify number variables by adding, subtracting, multiplying and dividing:",
                                    "_key": "4abdc6700c2f",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Assigning strings",
                    "slug": {
                        "current": "assigning-strings",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "A group of words or symbols is called a string. Put quotation marks around the contents of a string:",
                                    "_key": "4ec0986dcff9"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "7b798d8d291f"
                        },
                        {
                            "_key": "d8c480c12af0",
                            "_type": "python",
                            "main": "from microbit import *\n\n\nname = 'micro:bit'\ndisplay.scroll(name)"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "8414644af314",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can use single ",
                                    "_key": "36907b2f0cee",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "'",
                                    "_key": "220067a1077f",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " or double quotation marks ",
                                    "_key": "2be01f6aa9d9"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "\"",
                                    "_key": "de2bdecbe010"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " around strings, but you should be consistent. We use single quotation marks in examples because they are easier to type and double quotation marks can be confused for two single quotation marks.",
                                    "_key": "6462275d253c"
                                }
                            ]
                        },
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "See ",
                                    "_key": "86041e8d8d8e",
                                    "_type": "span"
                                },
                                {
                                    "text": "String manipulation",
                                    "_key": "ca88ef126c6f",
                                    "_type": "span",
                                    "marks": [
                                        "834048879981"
                                    ]
                                },
                                {
                                    "_key": "0503cae77209",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " for examples of how you can manipulate strings."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "1463118483f4",
                            "markDefs": [
                                {
                                    "slug": {
                                        "current": "string-manipulation",
                                        "_type": "slug"
                                    },
                                    "targetType": "toolkitTopic",
                                    "_key": "834048879981",
                                    "reference": {
                                        "_ref": "307144e2-4972-4b92-862f-b70be6e38aa2",
                                        "_type": "reference"
                                    },
                                    "_type": "toolkitInternalLink"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": " Boolean variables",
                    "slug": {
                        "current": "boolean-variables",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "99940d3b07b8",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Boolean variables only have two values: ",
                                    "_key": "eb0b9c1d7007"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True",
                                    "_key": "273e91dd7604"
                                },
                                {
                                    "_key": "86b3dd9a0145",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " or "
                                },
                                {
                                    "text": "False",
                                    "_key": "788a7f114e10",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ". They can be useful for adding control to your program:",
                                    "_key": "3d96f94e65be"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_key": "242ee73b7381",
                            "_type": "python",
                            "main": "from microbit import *\n\n\nrunning = False\nwhile True:\n    if button_a.was_pressed():\n        running = not running\n    if running:\n        display.show(1)\n    else:\n        display.show(0)"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example uses a Boolean variable ",
                                    "_key": "4f81b65f38d5"
                                },
                                {
                                    "text": "running",
                                    "_key": "afda3996318b",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_key": "2b71d99d4931",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to create a toggle button. The program has two states: 'running' (showing 1 on the display) and 'not running' (showing 0). Pressing button A toggles the state of the "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "running",
                                    "_key": "022b11d942fe"
                                },
                                {
                                    "_key": "a728e2fbcfb0",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " variable between "
                                },
                                {
                                    "text": "False",
                                    "_key": "3bd2407c501a",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "text": " and ",
                                    "_key": "04222a2d30c9",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True",
                                    "_key": "16e8385191bf"
                                },
                                {
                                    "marks": [],
                                    "text": " every time you press it:",
                                    "_key": "f0d154aa0227",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "68e5698e2d36",
                            "markDefs": []
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "ff40af949daa",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "not",
                                    "_key": "65dc0321a631",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " is a logical operator that flips the state of the variable. If its value was ",
                                    "_key": "81695a90530f"
                                },
                                {
                                    "_key": "45e7c8cfcf58",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True"
                                },
                                {
                                    "marks": [],
                                    "text": ", it becomes ",
                                    "_key": "dc8150b36647",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "False",
                                    "_key": "ecf49b1a7a32"
                                },
                                {
                                    "marks": [],
                                    "text": ". If it was ",
                                    "_key": "4de6922c7a52",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "False",
                                    "_key": "fe642d49facc"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", it becomes ",
                                    "_key": "d0dd8e0aedf3"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True",
                                    "_key": "5c0e37c4332c"
                                },
                                {
                                    "text": ".",
                                    "_key": "1520af4bcb1d",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_key": "aed1d6314cb6",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Note that ",
                                    "_key": "989ec569fb5c"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True",
                                    "_key": "bc57ae76bdd4"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " and ",
                                    "_key": "975c91e5c180"
                                },
                                {
                                    "_key": "a9799a2f25d9",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "False"
                                },
                                {
                                    "_key": "36e7a630ac81",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " must start with capital letters."
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ]
                },
                {
                    "name": "Variable names",
                    "slug": {
                        "_type": "slug",
                        "current": "variable-names"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "level": 1,
                            "_type": "block",
                            "style": "normal",
                            "_key": "4384f30d93f1",
                            "listItem": "bullet",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "should describe what they contain so your code is easier to understand",
                                    "_key": "40bbdc2ffa93",
                                    "_type": "span"
                                }
                            ]
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "5eeba32fa111",
                            "listItem": "bullet",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "must start with a letter, not a number",
                                    "_key": "5e9240083a0e0"
                                }
                            ],
                            "level": 1
                        },
                        {
                            "listItem": "bullet",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "cannot contain any spaces",
                                    "_key": "caa730a661be0",
                                    "_type": "span"
                                }
                            ],
                            "level": 1,
                            "_type": "block",
                            "style": "normal",
                            "_key": "153af3272c2a"
                        },
                        {
                            "level": 1,
                            "_type": "block",
                            "style": "normal",
                            "_key": "952f4fa54e9d",
                            "listItem": "bullet",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "canâ€™t be the same as Python keywords like ",
                                    "_key": "1fa3dcb107130",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True",
                                    "_key": "035e1abf862a"
                                },
                                {
                                    "text": ", ",
                                    "_key": "b5c6b706fdc8",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "if",
                                    "_key": "a9e224ab799d"
                                },
                                {
                                    "text": " or ",
                                    "_key": "317e8c87b764",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "while",
                                    "_key": "22c03ba757be",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                }
                            ]
                        },
                        {
                            "listItem": "bullet",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "b196876c15e50",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "are case-sensitive: "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "score",
                                    "_key": "fb301fed6731"
                                },
                                {
                                    "_key": "cab4a9473d54",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " would be a different variable to "
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "Score",
                                    "_key": "1637ddab03b1",
                                    "_type": "span"
                                }
                            ],
                            "level": 1,
                            "_type": "block",
                            "style": "normal",
                            "_key": "1aab9ca74573"
                        }
                    ]
                }
            ],
            "name": "Variables"
        },
        {
            "contents": [
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The micro:bit has lots of built-in images that you can show on the display.",
                                    "_key": "65adada32e4b",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "8eb8640e5ff1"
                        }
                    ],
                    "alternativesLabel": "Select image:",
                    "alternatives": [
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "heart"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "HEART",
                            "_key": "8118b5d9d756",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.HEART)\nsleep(400)",
                                    "_key": "d64032fe5207"
                                }
                            ]
                        },
                        {
                            "_key": "b48b05d1cf97",
                            "content": [
                                {
                                    "_key": "4c9000d56464",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.HEART_SMALL)\nsleep(400)"
                                }
                            ],
                            "slug": {
                                "current": "heartsmall",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "HEART_SMALL"
                        },
                        {
                            "content": [
                                {
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.HAPPY)\nsleep(400)",
                                    "_key": "6e46afc722f2",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "happy",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "HAPPY",
                            "_key": "cdf2e556b4bd"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "SMILE",
                            "_key": "32d9939f5083",
                            "content": [
                                {
                                    "_key": "282aa7c6b082",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.SMILE)\nsleep(400)"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "smile"
                            }
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "SAD",
                            "_key": "303aed5cba72",
                            "content": [
                                {
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.SAD)\nsleep(400)",
                                    "_key": "a7a3c0031b1c",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "sad"
                            }
                        },
                        {
                            "name": "CONFUSED",
                            "_key": "3693f6c6cb31",
                            "content": [
                                {
                                    "_key": "d61a18bd49ae",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.CONFUSED)\nsleep(400)"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "confused"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.ANGRY)\nsleep(400)",
                                    "_key": "06dc9a1ebd67"
                                }
                            ],
                            "slug": {
                                "current": "angry",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "ANGRY",
                            "_key": "171676c0e821"
                        },
                        {
                            "name": "ASLEEP",
                            "_key": "448e95994818",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.ASLEEP)\nsleep(400)",
                                    "_key": "a5dfd9a0be04"
                                }
                            ],
                            "slug": {
                                "current": "asleep",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "SURPRISED",
                            "_key": "358d6e7ca29c",
                            "content": [
                                {
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.SURPRISED)\nsleep(400)",
                                    "_key": "dcae6ac54fa6",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "surprised",
                                "_type": "slug"
                            }
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "SILLY",
                            "_key": "d38021d9509c",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.SILLY)\nsleep(400)",
                                    "_key": "871398392123"
                                }
                            ],
                            "slug": {
                                "current": "silly",
                                "_type": "slug"
                            }
                        },
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.FABULOUS)\nsleep(400)",
                                    "_key": "581086d57663"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "fabulous"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "FABULOUS",
                            "_key": "9d2c8099e05b"
                        },
                        {
                            "_key": "0fe7052b697f",
                            "content": [
                                {
                                    "_key": "ec6c73cb25b8",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.YES)\nsleep(400)"
                                }
                            ],
                            "slug": {
                                "current": "yes",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "YES"
                        },
                        {
                            "name": "NO",
                            "_key": "bea89cbb076c",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.NO)\nsleep(400)",
                                    "_key": "230f05b19b45"
                                }
                            ],
                            "slug": {
                                "current": "no",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "slug": {
                                "current": "meh",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "MEH",
                            "_key": "23fdcb962080",
                            "content": [
                                {
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.MEH)\nsleep(400)",
                                    "_key": "6338401628c3",
                                    "_type": "python"
                                }
                            ]
                        },
                        {
                            "slug": {
                                "current": "duck",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "DUCK",
                            "_key": "51a2aea731672b8b95688d183a0caf8d",
                            "content": [
                                {
                                    "_key": "230f05b19b45",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.DUCK)\nsleep(400)"
                                }
                            ]
                        },
                        {
                            "content": [
                                {
                                    "_key": "1c305b69d604",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.GIRAFFE)\nsleep(400)"
                                }
                            ],
                            "slug": {
                                "current": "giraffe",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "GIRAFFE",
                            "_key": "b31e19788244"
                        },
                        {
                            "name": "PACMAN",
                            "_key": "131e4b83aea1b922a371cd946fb38880",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.PACMAN)\nsleep(400)",
                                    "_key": "230f05b19b45"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "pacman"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "ghost"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "GHOST",
                            "_key": "dd3d0832f6b609c81ea4cb07690b8499",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.GHOST)\nsleep(400)",
                                    "_key": "230f05b19b45"
                                }
                            ]
                        },
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.show(Image.SKULL)\nsleep(400)",
                                    "_key": "02078e8c055f"
                                }
                            ],
                            "slug": {
                                "current": "skull",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "SKULL",
                            "_key": "bf11cca28da3"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "f0c46e0e8815",
                            "markDefs": [
                                {
                                    "_key": "d9a5428fa642",
                                    "_type": "toolkitApiLink",
                                    "name": "microbit.Image"
                                }
                            ],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The API documentation contains a full list of ",
                                    "_key": "b9344af09fd8",
                                    "_type": "span"
                                },
                                {
                                    "text": "the built-in images",
                                    "_key": "d408188fd0c9",
                                    "_type": "span",
                                    "marks": [
                                        "d9a5428fa642"
                                    ]
                                },
                                {
                                    "marks": [],
                                    "text": ".",
                                    "_key": "cfad341c9304",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": "Images: built-in",
                    "slug": {
                        "current": "images-builtin",
                        "_type": "slug"
                    }
                },
                {
                    "content": [
                        {
                            "style": "normal",
                            "_key": "95d3b68acbb9",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can scroll words and numbers on the micro:bitâ€™s LED display:",
                                    "_key": "df74bca0ee28",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.scroll('score')    \ndisplay.scroll(23)    ",
                            "_key": "a93e94475fd6"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "9334fe5290cd",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "69818077d6840",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can add optional extra parameters to control the way scrolling works."
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "7085e52ce296",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The ",
                                    "_key": "f1d74cc2e15c",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "delay",
                                    "_key": "6106d4cfa23b",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " parameter controls the speed of scrolling. A delay less than 150ms will make scrolling faster than normal.",
                                    "_key": "37ece849f89f"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "If the ",
                                    "_key": "7b96e7fd471c0",
                                    "_type": "span"
                                },
                                {
                                    "text": "loop",
                                    "_key": "58b7e32a02cd",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "text": " parameter has a value of ",
                                    "_key": "6cd2d941a9ca",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True",
                                    "_key": "3e34952f2e00"
                                },
                                {
                                    "_key": "cb4ab6785fc0",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", the scrolling will loop continuously. The default value is "
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "False",
                                    "_key": "8264b4880452",
                                    "_type": "span"
                                },
                                {
                                    "marks": [],
                                    "text": " which means there is no looping.",
                                    "_key": "176236299f9a",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "5869cee33103",
                            "markDefs": []
                        },
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The ",
                                    "_key": "ec9e95d483a60",
                                    "_type": "span"
                                },
                                {
                                    "text": "wait",
                                    "_key": "9a52d3ba91c3",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_key": "3da80cb1d809",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " parameter controls whether the program waits for the scrolling to stop before carrying out the next instruction."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "c30596e75e6c",
                            "markDefs": []
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "61ca589d6a2c",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This code will keep scrolling the word 'score' faster than normal in a loop, and play music at the same time:",
                                    "_key": "508856599ea70",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_key": "13fc5945c776",
                            "_type": "python",
                            "main": "from microbit import *\nimport music\n\n\ndisplay.scroll('score', delay=100, loop=True, wait=False) \nmusic.play(music.ODE)"
                        }
                    ],
                    "name": "Scroll",
                    "slug": {
                        "current": "scroll",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "0f8a60f322b1",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can add optional ",
                                    "_key": "8c93d04e2d2a0"
                                },
                                {
                                    "_key": "0bd58893cbee",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "delay"
                                },
                                {
                                    "marks": [],
                                    "text": ", ",
                                    "_key": "4b2164a13197",
                                    "_type": "span"
                                },
                                {
                                    "_key": "6f1db902bc15",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "loop"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " and ",
                                    "_key": "785a118321d7"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "wait",
                                    "_key": "853024522efc"
                                },
                                {
                                    "text": " parameters.",
                                    "_key": "8b6ce42fd624",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_key": "aa24dbe5cf55",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The ",
                                    "_key": "d42c11e964210",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "delay",
                                    "_key": "70904c2dfb5e"
                                },
                                {
                                    "text": " parameter controls the speed at which multiple characters, digits or images are displayed. Any delay below 400ms will be faster than normal, anything above 400ms slower than normal.",
                                    "_key": "15af6798f3ef",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "style": "normal",
                            "_key": "45f339801a38",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "If the ",
                                    "_key": "dd6279a7f8500",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "loop",
                                    "_key": "5a969bfb2fd1"
                                },
                                {
                                    "text": " parameter is set to ",
                                    "_key": "c8cd37e50a5c",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True",
                                    "_key": "17976370cdd7"
                                },
                                {
                                    "text": ", the ",
                                    "_key": "5b79f6effa6b",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "show",
                                    "_key": "5046ede49053",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "text": " function will loop continuously. The default value is ",
                                    "_key": "703c3b2bea72",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_key": "b1ddfea819d9",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "False"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " which means there is no looping.",
                                    "_key": "e1b8455485f8"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "style": "normal",
                            "_key": "a7eacda798e4",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The ",
                                    "_key": "316b06f7abc00",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "wait",
                                    "_key": "273312b95a48"
                                },
                                {
                                    "marks": [],
                                    "text": " parameter controls how long the program waits before the next instruction is executed.",
                                    "_key": "775fd5c19844",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "24ab61839877",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example will keep showing a countdown in a loop with 1 second between each number and will not wait before executing the next instruction:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "d5cc9cc94349"
                        },
                        {
                            "_key": "13fc5945c776",
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.show(9876543210, delay=1000, loop=True, wait=False)\n"
                        }
                    ],
                    "name": "Show",
                    "slug": {
                        "current": "show",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "95d3b68acbb9",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can show words and numbers on the LED display one character at a time:",
                                    "_key": "059d137edbee",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.show('score')\ndisplay.show(23)   ",
                            "_key": "a93e94475fd6"
                        }
                    ]
                },
                {
                    "name": "Images: make your own",
                    "slug": {
                        "current": "images-make-your-own",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "070d2f890a29",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can make your own images. Each LED's brightness is represented as a number between 0 (off) and 9 (brightest):",
                                    "_key": "50964ee11485"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "alt": "diagram showing how numbers between 0 and 9 make LEDs darker and brighter",
                            "_key": "c3acde86c37d",
                            "asset": {
                                "_ref": "image-813bf91ece2f0a458709b5395c58963e83a997b0-1117x566-png",
                                "_type": "reference"
                            },
                            "_type": "simpleImage"
                        },
                        {
                            "_key": "9b264dcd3365",
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.show(Image('00300:'\n                   '03630:'\n                   '36963:'\n                   '03630:'\n                   '00300'))    "
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "082b67ce22a7",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example shows a star that is bright in the middle and gets fainter towards the edges of the LED display."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "9357ac7b6e26"
                        }
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "ea7463f721cf",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Clear the display, turning all the LEDs off:",
                                    "_key": "4197bd896b3b",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.clear()",
                            "_key": "ed5772ff8ce7"
                        }
                    ],
                    "name": "Clear the display",
                    "slug": {
                        "current": "clear-the-display",
                        "_type": "slug"
                    }
                },
                {
                    "slug": {
                        "current": "pixels",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "alt": "diagram of X and Y co-ordinates of micro:bit's LED display, 0 to 4 from left to right in the X axis, and 0 to 4 from top to bottom",
                            "_key": "1f09b0efacaa",
                            "asset": {
                                "_ref": "image-68df93c56b28545fba2ed65e8e75e4e325ed2240-680x550-png",
                                "_type": "reference"
                            },
                            "_type": "simpleImage"
                        },
                        {
                            "style": "normal",
                            "_key": "96692d4be0c1",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "962879ebdc3b0",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "A pixel is an individual dot in an image. Each LED is a pixel in a micro:bit image. Each pixel has an x,y co-ordinate, starting at the top left with 0,0."
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "alternativesLabel": "Select:",
                    "alternatives": [
                        {
                            "slug": {
                                "current": "set-pixels",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "set pixels",
                            "_key": "80a97150164b",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "4d986ab60529",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Use numbers 0 to 9 to select how bright you want each pixel to be, with 9 being the brightest. This will light the top left LED as bright as it can go:",
                                            "_key": "8a72e134a56a"
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\ndisplay.set_pixel(0,0,9)",
                                    "_key": "914f58c441ad"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "",
                                            "_key": "4a4c1ec44ddd",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "3f0dc5c0d7e8"
                                }
                            ]
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "get pixels",
                            "_key": "0b734d878790",
                            "content": [
                                {
                                    "_key": "91ce3ef63e8d",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "dc610c231b6d0",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "You can find out how bright a pixel is. This will read how bright the top left pixel is and store a value between 0 and 9 in a variable called "
                                        },
                                        {
                                            "text": "top_left:",
                                            "_key": "c015ade4727c",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \n \ntop_left = display.get_pixel(0,0)",
                                    "_key": "e61a653a3500"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "",
                                            "_key": "bc6b4ff286e3",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "e09ef4d3c617"
                                }
                            ],
                            "slug": {
                                "current": "get-pixels",
                                "_type": "slug"
                            }
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "This program will fill the LED display one pixel at a time:",
                                    "_key": "868bb242f0b3",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "60c6be5cfea4"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\nfor y in range(5):\n    for x in range(5):\n        display.set_pixel(x,y,9)\n        sleep(50)",
                            "_key": "054237d28459"
                        },
                        {
                            "_key": "4dc4d1478ab6",
                            "markDefs": [
                                {
                                    "targetType": "toolkitTopic",
                                    "_key": "08132652d7c8",
                                    "reference": {
                                        "_ref": "c12b474c-848e-4ddd-9d9b-fa3e9b3bbb99",
                                        "_type": "reference"
                                    },
                                    "_type": "toolkitInternalLink",
                                    "slug": {
                                        "current": "loops",
                                        "_type": "slug"
                                    }
                                }
                            ],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Note that this uses a nested ",
                                    "_key": "0955dc795e55"
                                },
                                {
                                    "marks": [
                                        "08132652d7c8"
                                    ],
                                    "text": "loop",
                                    "_key": "f81aebba2b9e",
                                    "_type": "span"
                                },
                                {
                                    "_key": "09649282503f",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", a loop inside a loop."
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": "Pixels"
                }
            ],
            "name": "Display",
            "slug": {
                "current": "display",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "The micro:bit's LED display output",
            "image": {
                "_type": "image",
                "asset": {
                    "_type": "reference",
                    "_ref": "image-8a752c2b7226e069f7ffca204f48ba22187de80c-144x144-svg"
                }
            }
        },
        {
            "introduction": [
                {
                    "halfWidth": true,
                    "_key": "4af57f17a7da",
                    "asset": {
                        "_ref": "image-09a2e279df571cb7224ac1b677db6aab6f64df33-1012x687-png",
                        "_type": "reference"
                    },
                    "_type": "simpleImage"
                },
                {
                    "style": "normal",
                    "_key": "63f4ac05f012",
                    "markDefs": [],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "The micro:bit has two buttons on the front. Button A and button B can be used as inputs to make things happen in your program when they're pressed.",
                            "_key": "92220c234793"
                        }
                    ],
                    "_type": "block"
                }
            ],
            "contents": [
                {
                    "alternativesLabel": "Choose button:",
                    "alternatives": [
                        {
                            "_key": "0fc99c635e39",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "660728fa968b",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "",
                                            "_key": "c6d8b18fe8ba"
                                        }
                                    ]
                                },
                                {
                                    "_key": "5b3bed9dfde3",
                                    "_type": "python",
                                    "main": "from microbit import *\n\nwhile True:\n    if button_a.was_pressed():\n        display.scroll('A')"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "a"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "A"
                        },
                        {
                            "_key": "f695e790aeda",
                            "content": [
                                {
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "",
                                            "_key": "60425c5af890"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "16f94c6c7845",
                                    "markDefs": []
                                },
                                {
                                    "_key": "41bda56b2763",
                                    "_type": "python",
                                    "main": "from microbit import *\n\nwhile True:\n    if button_b.was_pressed():\n        display.scroll('B')"
                                }
                            ],
                            "slug": {
                                "current": "b",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "B"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "A or B",
                            "_key": "cdec48595ad6e1fdfef7fecae5930733",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "48a5eba19273",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "09f5f5450bb6",
                                            "_type": "span",
                                            "marks": [],
                                            "text": ""
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if button_a.was_pressed() or button_b.was_pressed():\n        display.scroll('A or B')",
                                    "_key": "90825b348507"
                                }
                            ],
                            "slug": {
                                "current": "a-or-b",
                                "_type": "slug"
                            }
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "5e92af69f33c",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Use ",
                                    "_key": "4de1b2f1f4e0",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "was_pressed()",
                                    "_key": "edc4969036c9",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to check if a button ",
                                    "_key": "7f37c5e30d55"
                                },
                                {
                                    "text": "was ",
                                    "_key": "80dcff0d8913",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "pressed since the micro:bit was powered on, or since the last time ",
                                    "_key": "1a571035292b"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "was_pressed()",
                                    "_key": "dacfc77b4a69",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " was used.",
                                    "_key": "6832b421b4af"
                                }
                            ]
                        },
                        {
                            "style": "normal",
                            "_key": "88ae6bf04954",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "c32922d47ead",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "In the example above, text will only scroll on the display once if you hold the button down."
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "children": [
                                {
                                    "_key": "be75647d6969",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ""
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "a322af3df597",
                            "markDefs": []
                        }
                    ],
                    "name": "Button was pressed",
                    "slug": {
                        "current": "button-was-pressed",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "slug": {
                        "current": "button-is-pressed",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "alternativesLabel": "Choose button:",
                    "alternatives": [
                        {
                            "name": "A",
                            "_key": "0fc99c635e39",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "660728fa968b",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "",
                                            "_key": "c6d8b18fe8ba",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ]
                                },
                                {
                                    "_key": "5b3bed9dfde3",
                                    "_type": "python",
                                    "main": "from microbit import *\n\nwhile True:\n    if button_a.is_pressed():\n        display.scroll('A')"
                                }
                            ],
                            "slug": {
                                "current": "a",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "B",
                            "_key": "f695e790aeda",
                            "content": [
                                {
                                    "_key": "16f94c6c7845",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "",
                                            "_key": "60425c5af890"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\nwhile True:\n    if button_b.is_pressed():\n        display.scroll('B')",
                                    "_key": "41bda56b2763"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "b"
                            }
                        },
                        {
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "48a5eba19273",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "09f5f5450bb6",
                                            "_type": "span",
                                            "marks": [],
                                            "text": ""
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "main": "from microbit import *\n\n\nwhile True:\n    if button_a.is_pressed() and button_b.is_pressed():\n        display.scroll('A and B')\n",
                                    "_key": "90825b348507",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "a-and-b"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "A and B",
                            "_key": "f8166348a72d"
                        },
                        {
                            "name": "A or B",
                            "_key": "cdec48595ad6e1fdfef7fecae5930733",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "48a5eba19273",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "",
                                            "_key": "09f5f5450bb6"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "main": "from microbit import *\n\n\nwhile True:\n    if button_a.is_pressed() or button_b.is_pressed():\n        display.scroll('A or B')",
                                    "_key": "90825b348507",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "a-or-b"
                            },
                            "_type": "toolkitAlternativeContent"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "a44cc3a7019d",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use ",
                                    "_key": "8212808a7222"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "is_pressed()",
                                    "_key": "9731fe358909"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to check if a button ",
                                    "_key": "f78d17ca26f0"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "is currently",
                                    "_key": "c84a617a5bc8"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " being pressed. In the example above, the text will keep scrolling if you hold your finger down on the button.",
                                    "_key": "4f3dd9985fc4"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can check which button or buttons are being pressed:",
                                    "_key": "0ac11195e868"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "d4414e604f31"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n \n \nwhile True:\n    if button_a.is_pressed() and button_b.is_pressed():\n        display.scroll('A and B')\n    elif button_a.is_pressed():\n        display.scroll('A')\n    elif button_b.is_pressed():\n        display.scroll('B')\n    sleep(100)\n",
                            "_key": "11c5abfb83f8"
                        },
                        {
                            "children": [
                                {
                                    "_key": "10f9e88e38f00",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You must check if buttons A and B are pressed together "
                                },
                                {
                                    "text": "before",
                                    "_key": "10f9e88e38f01",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ]
                                },
                                {
                                    "text": " a single button press otherwise youâ€™ll never capture both buttons being pressed at the same time.",
                                    "_key": "10f9e88e38f02",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "7745b6dc3fa9",
                            "markDefs": []
                        }
                    ],
                    "name": "Button is pressed"
                },
                {
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "84f0758f35e6",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "In this example, press button A as many times as you can in 3 seconds. The number of presses is shown on the display.",
                                    "_key": "77c8d4f7269b"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "get_presses()",
                                    "_key": "f785c6f2d25a",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " counts the number of times a button was pressed since the micro:bit started or the last time ",
                                    "_key": "e2b1f63eb9d9"
                                },
                                {
                                    "_key": "1368d795328c",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "get_presses()"
                                },
                                {
                                    "_key": "794f4aba5d52",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " was used."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "c821571bdf2e"
                        },
                        {
                            "children": [
                                {
                                    "_key": "347255715fa0",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ""
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "1b427a702f89",
                            "markDefs": []
                        }
                    ],
                    "name": "Count button presses",
                    "slug": {
                        "_type": "slug",
                        "current": "count-button-presses"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Use ",
                                    "_key": "38df8a9943b7",
                                    "_type": "span"
                                },
                                {
                                    "_key": "83773da2da8f",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "get_presses()"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to count how many times a button was pressed:",
                                    "_key": "fcc86d15ddf5"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "4d4cc49ce5ee",
                            "markDefs": []
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\ndisplay.scroll('Press A')\nsleep(3000)\ndisplay.scroll(button_a.get_presses())",
                            "_key": "bacad03618ef"
                        }
                    ]
                }
            ],
            "name": "Buttons",
            "slug": {
                "current": "buttons",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Use button inputs in your code",
            "image": {
                "asset": {
                    "_type": "reference",
                    "_ref": "image-3f4b95ffe1074dd4e391011c2835fc39dfef4a63-144x144-svg"
                },
                "_type": "image"
            }
        },
        {
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Count and repeat sets of instructions",
            "image": {
                "asset": {
                    "_ref": "image-6d99c00b417dd09b9315ec8341c7bcc71943f165-144x144-svg",
                    "_type": "reference"
                },
                "_type": "image"
            },
            "introduction": [
                {
                    "markDefs": [],
                    "children": [
                        {
                            "marks": [],
                            "text": "Loops repeat sections of code. Using loops can also be called â€˜iterationâ€™ or 'repetition.'",
                            "_key": "5c54dea423cb",
                            "_type": "span"
                        }
                    ],
                    "_type": "block",
                    "style": "normal",
                    "_key": "6e4fb6c3f4cf"
                }
            ],
            "contents": [
                {
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example uses a ",
                                    "_key": "21bf14cba889"
                                },
                                {
                                    "_key": "45ca039fca53",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "for loop"
                                },
                                {
                                    "_key": "62ab5f162fce",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to scroll â€˜micro:bitâ€™ on the LED display 3 times."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "87ceda5bc312",
                            "markDefs": []
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "7e8c6774f2ac",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "35793e3d5af6",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The "
                                },
                                {
                                    "_key": "77ca911748b9",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "display.scroll('Python')"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " line is not indented, so itâ€™s not in the loop and it only runs once.",
                                    "_key": "e3b94635468e"
                                }
                            ]
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "64122071bed9",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The micro:bit Python editor will add indentations for you when it thinks you need one, for example when you press â€˜enterâ€™ after typing ",
                                    "_key": "f646f1508d74",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "for i in range(3):",
                                    "_key": "59e782e2dd4b",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                }
                            ]
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "771c3a4974f6",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Indentations are usually 4 spaces or one tab character. You must be consistent, you canâ€™t use 4 spaces on one line and 3 on another. The code highlighting in the editor helps you check that your indentations line up correctly.",
                                    "_key": "5db65e0e4b31",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "49e4c8d852bd",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "13444d387cd7",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can indent any lines you have highlighted by pressing the tab key on your keyboard. You can remove indentations by pressing shift+tab."
                                }
                            ]
                        }
                    ],
                    "name": "Indentations",
                    "slug": {
                        "current": "indentations",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Python uses indentations to show which instructions are inside and outside a loop.",
                                    "_key": "2956d9c33110"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "a6190ff43b3c"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\nfor i in range(3):  \n    display.scroll('micro:bit')\ndisplay.scroll('Python')",
                            "_key": "050ece268825"
                        }
                    ]
                },
                {
                    "name": "While loops: infinite",
                    "slug": {
                        "current": "while-loops-infinite",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "d51962710734",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Infinite, or 'forever', loops keep a program running."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "85a72d1084f3"
                        },
                        {
                            "main": "from microbit import *\n\n\nwhile True:\n    display.scroll('micro:bit')  ",
                            "_key": "1fb4ea7936a7",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_key": "588503487c69",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "In the example above, the word â€˜micro:bitâ€™ will scroll across the LED display forever."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "c83122e415f5",
                            "markDefs": []
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "4920ee3342c4",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Using ",
                                    "_key": "93f447ef330b"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "while True:",
                                    "_key": "e06aa056d4c4"
                                },
                                {
                                    "_key": "dee9630eb06a",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " is a common way to continuously check inputs like sensor readings or if a button has been pressed:"
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\nwhile True:\n    if button_a.was_pressed():\n        display.show('A')",
                            "_key": "26dc48524910"
                        }
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "75663c1edc02",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "85b1ff613630",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "While loops"
                                },
                                {
                                    "text": " keep a block of code running as long as something is true.",
                                    "_key": "710bab754cb9",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "4e25ae438847",
                            "_type": "python",
                            "main": "from microbit import *\n\n\nnumber = 0\nwhile number < 10:\n    display.scroll(number)\n    number = number + 1\ndisplay.scroll('finish')"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "1d09e9bd4ff4",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "In this example, the loop keeps running while the variable ",
                                    "_key": "97558d3b3fe0",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_key": "eccd79d02800",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "number"
                                },
                                {
                                    "marks": [],
                                    "text": " has a value less than 10. When the value reaches 10, the loop ends, so it will count from 0 to 9.",
                                    "_key": "91eb04c374a6",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The line ",
                                    "_key": "8177bd536049",
                                    "_type": "span"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "display.scroll('finish')",
                                    "_key": "1b17b0c49dd5",
                                    "_type": "span"
                                },
                                {
                                    "_key": "c49e6320a802",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " is not indented, so it is outside the loop. The code only shows the word 'finish' once the number variable reaches 10 and the loop ends."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "082bc0f395c4",
                            "markDefs": []
                        }
                    ],
                    "name": "While loops: conditional",
                    "slug": {
                        "_type": "slug",
                        "current": "while-loops-conditional"
                    }
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "69d80317594f",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "â€˜Forâ€™ loops are count-controlled loops. They repeat sections of code a fixed number of times.",
                                    "_key": "3eecb3938a270"
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "alternativesLabel": "Select 'for' loop:",
                    "alternatives": [
                        {
                            "name": "repeat with range",
                            "_key": "31c1273a20e3",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "9d21f397d474",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This will scroll â€˜micro:bitâ€™ on the display 3 times:",
                                            "_key": "2008fbd2594a0",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \n \nfor i in range(3):  \n    display.scroll('hello')",
                                    "_key": "fd6c70218080"
                                }
                            ],
                            "slug": {
                                "current": "repeat-with-range",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "count with range",
                            "_key": "64041648fa62",
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "2f6257f8407f0",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "The "
                                        },
                                        {
                                            "_key": "3d452a392b1a",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "range()"
                                        },
                                        {
                                            "marks": [],
                                            "text": " function starts counting at 0 and stops before the end of the range, so this shows numbers from 0 to 9:",
                                            "_key": "94e843d2f3e1",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "b19cb93385d0"
                                },
                                {
                                    "_key": "a27c4f4acf98",
                                    "_type": "python",
                                    "main": "from microbit import *\n \n \nfor i in range(10):\n    display.scroll(i)"
                                }
                            ],
                            "slug": {
                                "current": "count-with-range",
                                "_type": "slug"
                            }
                        },
                        {
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "a0d1d6fb9949",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "8aca2abc6a410",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "You can specify what number to start counting from:"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_key": "17c95b9e05f6",
                                    "_type": "python",
                                    "main": "from microbit import *\n \n \nfor i in range(1,11):\n    display.scroll(i)"
                                },
                                {
                                    "children": [
                                        {
                                            "text": "This shows numbers from 1 to 10, because ",
                                            "_key": "1844291ccc5b",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "range()",
                                            "_key": "4c551fac94d3"
                                        },
                                        {
                                            "_key": "4c10ebec622d",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " stops before the end number."
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "159551049c3e",
                                    "markDefs": []
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "count-from"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "count from",
                            "_key": "7fc52a6089ef"
                        },
                        {
                            "_key": "c751669db5af",
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This counts from 0 to 10 in steps of 3, showing 0, 3, 6, 9:",
                                            "_key": "e99a99a3ca67",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "87aba5ebe433"
                                },
                                {
                                    "_key": "6b256fc91ad3",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nfor i in range(0,10,3):\n    display.scroll(i)"
                                }
                            ],
                            "slug": {
                                "current": "count-in-steps",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "count in steps"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "count backwards",
                            "_key": "b7d3195b61f6",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "d5b0b113ff36",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This counts down from 9 in steps of minus 1:",
                                            "_key": "1dcd810a98700",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \n \nfor i in range(9,0,-1):\n    display.scroll(i)",
                                    "_key": "b876877204af"
                                },
                                {
                                    "style": "normal",
                                    "_key": "aa37c8a70368",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "It stops counting at 1 because the ",
                                            "_key": "e2ff8b0ac5e6"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "range()",
                                            "_key": "67179a55e359"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " function always stops ",
                                            "_key": "c0c7ee32f519"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": "before",
                                            "_key": "3501055259b8"
                                        },
                                        {
                                            "_key": "d1af3b5483a4",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " the end of the range (0)."
                                        }
                                    ],
                                    "_type": "block"
                                }
                            ],
                            "slug": {
                                "current": "count-backwards",
                                "_type": "slug"
                            }
                        },
                        {
                            "content": [
                                {
                                    "_key": "4534ebadcb29",
                                    "markDefs": [
                                        {
                                            "reference": {
                                                "_ref": "47cd8e43-0c5d-422d-867c-5cb80ee643d3",
                                                "_type": "reference"
                                            },
                                            "_type": "toolkitInternalLink",
                                            "_key": "d629316cf4af"
                                        }
                                    ],
                                    "children": [
                                        {
                                            "_key": "c3f7b0a9fcb80",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "You can use 'for' loops to iterate over items in a "
                                        },
                                        {
                                            "text": "list",
                                            "_key": "3443e81424df",
                                            "_type": "span",
                                            "marks": [
                                                "d629316cf4af"
                                            ]
                                        },
                                        {
                                            "_key": "9cb84a7c7222",
                                            "_type": "span",
                                            "marks": [],
                                            "text": ":"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \n \nfor number in [1, 2, 3]:\n    display.scroll(number)",
                                    "_key": "a0b49dd2b75b"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "0831f246c568",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "In this example "
                                        },
                                        {
                                            "text": "number",
                                            "_key": "fd029757635b",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "_key": "fe33c0d0be90",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " is a variable name. You can use any valid variable name."
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "de71499349d6"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "lists"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "lists",
                            "_key": "d25703bdc62c"
                        },
                        {
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "bb75fc7ea4980",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "'For' loops can iterate over characters in a string:"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "88dcfccdae2c"
                                },
                                {
                                    "_key": "c1e4e27a32c2",
                                    "_type": "python",
                                    "main": "from microbit import *\n \n \nfor letter in 'micro:bit':\n    display.scroll(letter)"
                                },
                                {
                                    "_key": "ac20b4280e8b",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "In this example ",
                                            "_key": "828221ab5f450",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "text": "letter",
                                            "_key": "b833267b48b0",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "_key": "ca37ddfe168d",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " is a variable name. You can use any valid variable name."
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                }
                            ],
                            "slug": {
                                "current": "strings",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "strings",
                            "_key": "bf487b682efb"
                        }
                    ],
                    "name": "For loops",
                    "slug": {
                        "_type": "slug",
                        "current": "for-loops"
                    }
                },
                {
                    "name": "Nested loops",
                    "slug": {
                        "current": "nested-loops",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can put loops inside loops. This is called â€˜nestingâ€™.",
                                    "_key": "9456b32ef66c"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "41931367cb0c"
                        },
                        {
                            "main": "from microbit import *\n\n\nfor y in range(5):\n    for x in range(5):\n        display.set_pixel(x, y, 9)\n        sleep(50)",
                            "_key": "74f106d46dd3",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "dc1771e2d956",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example uses a nested loop to light the LED display one pixel at a time by iterating through the rows (y) and the columns (x) inside each row.",
                                    "_key": "a77fe7980273"
                                }
                            ],
                            "_type": "block"
                        }
                    ]
                },
                {
                    "slug": {
                        "_type": "slug",
                        "current": "breaking-out-of-loops"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "fe8b72d534fa",
                            "markDefs": [
                                {
                                    "_type": "toolkitInternalLink",
                                    "_key": "c4920e4df55e",
                                    "slug": {
                                        "current": "logic",
                                        "_type": "slug"
                                    },
                                    "targetType": "toolkitTopic",
                                    "reference": {
                                        "_ref": "a349ff8d-2c59-439a-9e46-f523e8ae3463",
                                        "_type": "reference"
                                    }
                                }
                            ],
                            "children": [
                                {
                                    "text": "You can break out of a loop using ",
                                    "_key": "756274f86c640",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "marks": [
                                        "c4920e4df55e"
                                    ],
                                    "text": "logic",
                                    "_key": "120d7fe934cf",
                                    "_type": "span"
                                },
                                {
                                    "marks": [],
                                    "text": " and ",
                                    "_key": "5b014da883be",
                                    "_type": "span"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "break",
                                    "_key": "eefe5aa697fb",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ".",
                                    "_key": "4579bffcf7b5"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n \nfor letter in 'micro:bit':\n    if letter == 'b':\n        break\n    display.show(letter)\n    sleep(1000)",
                            "_key": "de3060fce33d"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This example shows â€˜micro:â€™ on the LED display. The program breaks out of the loop when it reaches the letter â€˜bâ€™ in â€˜micro:bit.â€™",
                                    "_key": "490d6bb26c720",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "661a15660fa9"
                        }
                    ],
                    "name": "Breaking out of loops"
                }
            ],
            "name": "Loops",
            "slug": {
                "current": "loops",
                "_type": "slug"
            }
        },
        {
            "introduction": [
                {
                    "style": "normal",
                    "_key": "0e3931d4521a",
                    "markDefs": [],
                    "children": [
                        {
                            "_key": "d3fbcc08b3f9",
                            "_type": "span",
                            "marks": [],
                            "text": "Computers use logic and selection to control what happens in different situations."
                        }
                    ],
                    "_type": "block"
                }
            ],
            "contents": [
                {
                    "alternativesLabel": "Select conditional statment:",
                    "alternatives": [
                        {
                            "name": "if",
                            "_key": "7a43f80cc3c7",
                            "content": [
                                {
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "1a2ad6835da50"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "if",
                                            "_key": "e0b25da0208f"
                                        },
                                        {
                                            "marks": [],
                                            "text": " to test if something is true:",
                                            "_key": "f1277b686567",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "8c8762d14166",
                                    "markDefs": []
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \nscore = 1\n \nif score < 2:\n    display.show(Image.SAD)",
                                    "_key": "64c8791579d6"
                                },
                                {
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This shows a sad face because the score is less than 2.",
                                            "_key": "e2aa4c636c880"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "da3b61343981",
                                    "markDefs": []
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "if"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "elif (else if)",
                            "_key": "c601a2a98416",
                            "content": [
                                {
                                    "_key": "fc005071cc3f",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "elif",
                                            "_key": "b589581f32200"
                                        },
                                        {
                                            "text": " is short for â€˜else if.â€™ Use it to add another test to your ",
                                            "_key": "e25e09c37b51",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "_key": "6413be9d6157",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "if"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " statement:",
                                            "_key": "730aa21fc55f"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \nscore = 5\n \nif score < 2:\n    display.show(Image.SAD)\nelif score < 6:\n    display.show(Image.MEH)",
                                    "_key": "45fdeb4f0ec9"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "793aa8939ce70",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This shows a â€˜mehâ€™ face because the score is less than 6 but more than 1."
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "d2743dec5f60"
                                }
                            ],
                            "slug": {
                                "current": "elif-else-if",
                                "_type": "slug"
                            }
                        },
                        {
                            "_key": "3587cfbb551f",
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Add â€˜elseâ€™ to catch any other possibilities:",
                                            "_key": "486faf7b34c30",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "1c9d785a2fa5"
                                },
                                {
                                    "_key": "fb49c8b150ad",
                                    "_type": "python",
                                    "main": "from microbit import *\n \nscore = 6\n \nif score < 2:\n    display.show(Image.SAD)\nelif score < 6:\n    display.show(Image.MEH)\nelse:\n    display.show(Image.HAPPY)"
                                },
                                {
                                    "_key": "1e40262e5cc3",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This shows a happy face for any score 6 or higher.",
                                            "_key": "ce76e07eb4ca0"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "else"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "else"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "5d3679ad3e05",
                            "markDefs": [
                                {
                                    "reference": {
                                        "_type": "reference",
                                        "_ref": "c12b474c-848e-4ddd-9d9b-fa3e9b3bbb99"
                                    },
                                    "_type": "toolkitInternalLink",
                                    "_key": "25dbc3120e7c",
                                    "slug": {
                                        "current": "loops",
                                        "_type": "slug"
                                    },
                                    "targetType": "toolkitTopic"
                                }
                            ],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Python uses indentations to tell the computer exactly what instructions should be carried out in each case, similar to the way it uses indentations to show which lines of code are in a ",
                                    "_key": "6ba02ba91dd50",
                                    "_type": "span"
                                },
                                {
                                    "marks": [
                                        "25dbc3120e7c"
                                    ],
                                    "text": "loop",
                                    "_key": "3dcd6a8d3c54",
                                    "_type": "span"
                                },
                                {
                                    "_key": "04c670323d20",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "."
                                }
                            ]
                        }
                    ],
                    "name": "if, elif, else",
                    "slug": {
                        "current": "if-elif-else",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "8b414bc06bce",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can compare numbers to make different things happen if they are equal, smaller, larger or not equal to something.",
                                    "_key": "a989930d960a",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        }
                    ],
                    "alternativesLabel": "Select an operator:",
                    "alternatives": [
                        {
                            "_key": "7c5a7c78c5d7",
                            "content": [
                                {
                                    "_key": "2db1938bb232",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nnumber = 5\nif number == 5:\n    display.scroll('Number is 5')"
                                }
                            ],
                            "slug": {
                                "current": "equal-to",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "equal to"
                        },
                        {
                            "slug": {
                                "current": "less-than",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "less than",
                            "_key": "005e88e210a8",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nnumber = 4\nif number < 5:\n    display.scroll('Number is less than 5')",
                                    "_key": "0889f03d6ad0"
                                }
                            ]
                        },
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nnumber = 6\nif number > 5:\n    display.scroll('Number is greater than 5')",
                                    "_key": "600190f32b98"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "greater-than"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "greater than",
                            "_key": "f267052b5cc7"
                        },
                        {
                            "name": "less than or equal to",
                            "_key": "88039eb74804",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nnumber = 5\nif number <= 5:\n    display.scroll('Number is less than or equal to 5')",
                                    "_key": "6fd9e09daeb0"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "less-than-or-equal-to"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "greater than or equal to",
                            "_key": "2093868841a2",
                            "content": [
                                {
                                    "_key": "f26422a0037e",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nnumber = 5\nif number >= 5:\n    display.scroll('Number is greater than or equal to 5')"
                                }
                            ],
                            "slug": {
                                "current": "greater-than-or-equal-to",
                                "_type": "slug"
                            }
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "not equal to",
                            "_key": "bac2002e872d",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nnumber = 23\nif number != 5:\n    display.scroll('Number is not equal to 5')",
                                    "_key": "111f0ba1e8ec"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "not-equal-to"
                            }
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Remember one equals sign is used to ",
                                    "_key": "55efd3765832"
                                },
                                {
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "assign",
                                    "_key": "ec211805fc53",
                                    "_type": "span"
                                },
                                {
                                    "marks": [],
                                    "text": " the value of a variable:",
                                    "_key": "3d1faf23a32a",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "eb2a67751852"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "fdc6899ab5ea",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "number = 5",
                                    "_key": "3a42ada50ecd",
                                    "_type": "span"
                                }
                            ]
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "but when ",
                                    "_key": "3c3154ab749c",
                                    "_type": "span"
                                },
                                {
                                    "text": "testing",
                                    "_key": "038568eb5591",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ]
                                },
                                {
                                    "text": " the value, the â€˜is equals toâ€™ operator uses two equals signs:",
                                    "_key": "a61f3f80ba21",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "7e0f8457d81a"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "879c024b6fc0",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "if number == 5:",
                                    "_key": "6e98993f3d5a",
                                    "_type": "span"
                                }
                            ]
                        }
                    ],
                    "name": "Comparison operators",
                    "slug": {
                        "current": "comparison-operators",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "alternatives": [
                        {
                            "content": [
                                {
                                    "_key": "61e0409d2bfc",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "707bf87fe19f0"
                                        },
                                        {
                                            "text": "and",
                                            "_key": "cdce4cc1fed6",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "marks": [],
                                            "text": " to build conditions which are True if more than one thing is True. In this example, 'A+B' is shown only if button A ",
                                            "_key": "7517bc633fab",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": "and",
                                            "_key": "707bf87fe19f3"
                                        },
                                        {
                                            "text": " button B are pressed at the same time:",
                                            "_key": "707bf87fe19f4",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "main": "from microbit import *\n \n \nwhile True:\n    if button_a.is_pressed() and button_b.is_pressed():\n        display.scroll('A+B')\n",
                                    "_key": "d3946b705b80",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "and",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "and",
                            "_key": "9767806ca253"
                        },
                        {
                            "slug": {
                                "current": "or",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "or",
                            "_key": "676ecc520f0c",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "14dd521ec0c8",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "This conditional will show 'A or B' if ",
                                            "_key": "04d1c45546480",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": "either",
                                            "_key": "04d1c45546481",
                                            "_type": "span"
                                        },
                                        {
                                            "marks": [],
                                            "text": " button A ",
                                            "_key": "04d1c45546482",
                                            "_type": "span"
                                        },
                                        {
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": "or",
                                            "_key": "04d1c45546483",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " button B is pressed:",
                                            "_key": "04d1c45546484"
                                        }
                                    ]
                                },
                                {
                                    "main": "from microbit import *\n \n \nwhile True:\n    if button_a.is_pressed() or button_b.is_pressed():\n        display.scroll('A or B')",
                                    "_key": "b90135d0e8b2",
                                    "_type": "python"
                                }
                            ]
                        },
                        {
                            "slug": {
                                "current": "not",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "not",
                            "_key": "85233890f671",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "5beb6312a6c1",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "ee59013f4a320",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This conditional will show 'A not B' if button A is pressed but "
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": "not",
                                            "_key": "ee59013f4a321"
                                        },
                                        {
                                            "_key": "ee59013f4a322",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " button B:"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "main": "from microbit import *\n \n \nwhile True:\n    if button_a.is_pressed() and not button_b.is_pressed():\n        display.scroll('A not B')\n    sleep(200)",
                                    "_key": "3b7342e8430b",
                                    "_type": "python"
                                }
                            ]
                        }
                    ],
                    "name": "Logical operators",
                    "slug": {
                        "current": "logical-operators",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "2e7bc0c28b11",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "You can build more complex conditions using ",
                                    "_key": "0a36efeee7b1",
                                    "_type": "span"
                                },
                                {
                                    "_key": "b229f6ea5b4c",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "and"
                                },
                                {
                                    "marks": [],
                                    "text": ", ",
                                    "_key": "b8f4d252e360",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "or",
                                    "_key": "7b7e26d2520a"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " and ",
                                    "_key": "3174aa4e7273"
                                },
                                {
                                    "text": "not.",
                                    "_key": "940e595ac2a5",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "alternativesLabel": "Select logical operator:"
                },
                {
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "a77a3f7b4123",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can put ",
                                    "_key": "9337ad300594",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "if",
                                    "_key": "1c593a2d4c8a"
                                },
                                {
                                    "text": " statements inside each other. This is called â€˜nestingâ€™.",
                                    "_key": "bce1f8822d9d",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_key": "e7bff373ab98",
                            "_type": "python",
                            "main": "from microbit import *\n\n\nscore = 10\n \nif score > 5:\n    display.scroll('Well done')\n    if score > 9:\n        display.scroll('Top marks!')"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "aa2f1913f809",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This shows â€˜Well doneâ€™ and then â€˜Top marks!â€™ on the LED display.",
                                    "_key": "4eda1fc109a40",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": "Nested if",
                    "slug": {
                        "current": "nested-if",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "e843c100bdcd",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Boolean variables can only have two values: ",
                                    "_key": "9ea51c9f60c2"
                                },
                                {
                                    "text": "True",
                                    "_key": "2c0533573e5d",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " or ",
                                    "_key": "426447c85bed"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "False",
                                    "_key": "4215f3bb53d2"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ".",
                                    "_key": "43b548786320"
                                }
                            ]
                        },
                        {
                            "style": "normal",
                            "_key": "26dea3242c76",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can use Boolean variables in ",
                                    "_key": "2b2d921911ba",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "if",
                                    "_key": "17490f1b78e6",
                                    "_type": "span"
                                },
                                {
                                    "marks": [],
                                    "text": " statements to write code thatâ€™s easy to read and understand.",
                                    "_key": "03b737eecacf",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "1d2511914c3c",
                            "_type": "python",
                            "main": "from microbit import *\n\n\non = False\nwhile True:\n    if button_a.was_pressed():\n        on = not on\n    if on:\n        display.show(1)\n    else:\n        display.show(0)"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "text": "This example makes a toggle switch. It uses ",
                                    "_key": "844d07cc1dc1",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "not",
                                    "_key": "59bafc330158"
                                },
                                {
                                    "_key": "56dd967ca6c4",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to flip the value of the Boolean variable "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "on",
                                    "_key": "6420c9b6c646"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " every time you press button A.",
                                    "_key": "2b75a8e50049"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "bfcabd3fc5ac",
                            "markDefs": []
                        },
                        {
                            "children": [
                                {
                                    "text": "If its value was ",
                                    "_key": "f1951bd5b61c",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True",
                                    "_key": "45a4d2dcbf59"
                                },
                                {
                                    "marks": [],
                                    "text": ", it becomes ",
                                    "_key": "d7260636f1a8",
                                    "_type": "span"
                                },
                                {
                                    "_key": "bfb5e94712b1",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "False"
                                },
                                {
                                    "_key": "685e910d9407",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ". If its value was "
                                },
                                {
                                    "_key": "489fca1f9875",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "False"
                                },
                                {
                                    "_key": "f3180cb330ef",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", it becomes "
                                },
                                {
                                    "_key": "4546ac10657a",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "fd9d0df4250c",
                            "markDefs": []
                        }
                    ],
                    "name": " Conditional Booleans",
                    "slug": {
                        "current": "conditional-booleans",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "slug": {
                        "_type": "slug",
                        "current": "break-using-logic"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [
                                {
                                    "reference": {
                                        "_type": "reference",
                                        "_ref": "c12b474c-848e-4ddd-9d9b-fa3e9b3bbb99"
                                    },
                                    "_type": "toolkitInternalLink",
                                    "_key": "2df65bdaaa8e",
                                    "slug": {
                                        "current": "loops",
                                        "_type": "slug"
                                    },
                                    "targetType": "toolkitTopic"
                                }
                            ],
                            "children": [
                                {
                                    "_key": "6a62e5078708",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can break out of a "
                                },
                                {
                                    "marks": [
                                        "2df65bdaaa8e"
                                    ],
                                    "text": "loop",
                                    "_key": "f02eeb8d2ac2",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " using conditional statements and ",
                                    "_key": "bf4bdfa2bc59"
                                },
                                {
                                    "_key": "9989942a9332",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "break"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "f6cbd1180f2e"
                        },
                        {
                            "main": "from microbit import *\n\n\nwhile True:\n    if button_a.was_pressed():\n        display.show('A')\n    elif button_b.was_pressed():\n        display.show('B')\n    if accelerometer.was_gesture('shake'):\n        break\ndisplay.scroll('Game over')",
                            "_key": "6799c8d623ed",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "b26f2df39990",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "e2733afb2cea0",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "In this example, if you shake the micro:bit, the program breaks out of a "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "while True",
                                    "_key": "6ec62aedb175"
                                },
                                {
                                    "_key": "bd284a5249af",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " loop and the words â€˜Game overâ€™ scroll on the display."
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": "Break using logic"
                }
            ],
            "name": "Logic",
            "slug": {
                "current": "logic",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Making decisions in code",
            "image": {
                "_type": "image",
                "asset": {
                    "_type": "reference",
                    "_ref": "image-88ab9a4ee0ad6f9bfa3bacf865b034dc15af2dcc-144x144-svg"
                }
            }
        },
        {
            "contents": [
                {
                    "slug": {
                        "current": "gestures",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "fa51de3263fa",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "You can use gestures in your program to detect when your micro:bit is moved in different ways.",
                                    "_key": "f5131554191c",
                                    "_type": "span"
                                }
                            ]
                        }
                    ],
                    "alternativesLabel": "Select gesture:",
                    "alternatives": [
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "shake",
                            "_key": "d1bdde9c653b",
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "ea971488bd90",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Triggered when you shake your micro:bit: "
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "191faa9cc74c"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if accelerometer.was_gesture('shake'):\n        display.show(Image.CONFUSED)",
                                    "_key": "883f49fbf8af"
                                }
                            ],
                            "slug": {
                                "current": "shake",
                                "_type": "slug"
                            }
                        },
                        {
                            "_key": "17b3770935a6",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "15dc6e8c54cf",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "a4340fd4bebf",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Triggered when the micro:bit is upright with the logo at the top: "
                                        }
                                    ]
                                },
                                {
                                    "_key": "8e5759a8596c",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if accelerometer.was_gesture('up'):\n        display.show(Image.ARROW_N)"
                                }
                            ],
                            "slug": {
                                "current": "logo-up",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "logo up"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "logo down",
                            "_key": "e42a5e56010c",
                            "content": [
                                {
                                    "_key": "881442a96c0c",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "80a351cba1c6",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Triggered when the micro:bit is upside down with the logo at the bottom: "
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_key": "0301b3597ad5",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if accelerometer.was_gesture('down'):\n        display.show(Image.ARROW_N)"
                                }
                            ],
                            "slug": {
                                "current": "logo-down",
                                "_type": "slug"
                            }
                        },
                        {
                            "_key": "7ca10cbf3bf3",
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Triggered when the micro:bit is lying flat with the LED display facing up:",
                                            "_key": "11255d5c56b9"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "e1bd04eee7b5"
                                },
                                {
                                    "main": "from microbit import *\n\n\nwhile True:\n    if accelerometer.was_gesture('face up'):\n        display.show(Image.HAPPY)",
                                    "_key": "d16baf1cfb22",
                                    "_type": "python"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "172ef1a0d205",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " "
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "60012a53a7bc"
                                }
                            ],
                            "slug": {
                                "current": "face-up",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "face up"
                        },
                        {
                            "content": [
                                {
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Triggered when your micro:bit is lying flat with its LED display facing down:",
                                            "_key": "4a9532aab637",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "211c941b2746",
                                    "markDefs": []
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if accelerometer.was_gesture('face down'):\n        display.show(Image.ASLEEP)",
                                    "_key": "68b337183abf"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "face-down"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "face down",
                            "_key": "c6edc281788a"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "left",
                            "_key": "14a85ceee958",
                            "content": [
                                {
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Triggered when the micro:bit is tilted left or held upright with the logo on the left:",
                                            "_key": "6f8610791ab8"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "138a94cc0dda",
                                    "markDefs": []
                                },
                                {
                                    "main": "from microbit import *\n\n\nwhile True:\n    if accelerometer.was_gesture('left'):\n        display.show(Image.ARROW_W)",
                                    "_key": "8734e73c33bd",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "left"
                            }
                        },
                        {
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "5c690ad829a0",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "f003dacb9a620",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Triggered when the micro:bit is tilted right or held upright with the logo on the right:"
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if accelerometer.was_gesture('right'):\n        display.show(Image.ARROW_E)",
                                    "_key": "b818f353d58a"
                                }
                            ],
                            "slug": {
                                "current": "right",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "right",
                            "_key": "883754d9805e"
                        },
                        {
                            "name": "freefall",
                            "_key": "c93af2239646",
                            "content": [
                                {
                                    "_key": "38b52a7e8c5a",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Triggered when the accelerometer detects it's falling towards the ground:",
                                            "_key": "1d35cbb0ec62"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if accelerometer.was_gesture('freefall'):\n        display.show(Image.SURPRISED)",
                                    "_key": "aef81586b3ad"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "freefall"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_key": "84277cb6a86b",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "cd9e306b0cc3",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Triggered when the accelerometer detects acceleration of around 3g: ",
                                            "_key": "571b31d48b72"
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if accelerometer.was_gesture('3g'):\n        display.show(3)",
                                    "_key": "39d3eb5ca280"
                                }
                            ],
                            "slug": {
                                "current": "3g",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "3g"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "b20e83432314",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "1g is the equivalent to the pull of gravity. 3g and above are the kinds of acceleration experienced by racing car drivers or astronauts leaving Earth. Itâ€™s hard to generate accelerations above 3g in a classroom.",
                                    "_key": "07184fbf04840",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_key": "bf03e3a4d316",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use ",
                                    "_key": "393c5a664e550"
                                },
                                {
                                    "_key": "f7ed9fb4dd97",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "was_gesture"
                                },
                                {
                                    "text": " to test if a gesture has occurred at any point since the last time you tested it.",
                                    "_key": "3c52fa65748d",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "You can also use ",
                                    "_key": "b886a82775dc0",
                                    "_type": "span"
                                },
                                {
                                    "text": "is_gesture",
                                    "_key": "90be57a06921",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "marks": [],
                                    "text": " to see if a gesture is currently active.",
                                    "_key": "fd34d0f66178",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "1e79ac6b20b4"
                        }
                    ],
                    "name": "Gestures"
                },
                {
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The micro:bit measures acceleration in milli-g units, one thousandths of the Earthâ€™s gravity.",
                                    "_key": "5932e859ec2d",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "69d457ff98f1",
                            "markDefs": []
                        },
                        {
                            "style": "normal",
                            "_key": "7ca8bb413592",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "When the micro:bit is lying flat on a table, you should see that the x and y readings are close to 0, but the z reading will be about -1000. This is because the accelerometer is measuring gravity.",
                                    "_key": "b6b9fe41c30e",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "a2af027b862c",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The minimum and maximum readings you can get from the accelerometer are about -2000 or +2000 milli-g.",
                                    "_key": "42cb272a2f01",
                                    "_type": "span"
                                }
                            ]
                        }
                    ],
                    "name": "Measuring acceleration",
                    "slug": {
                        "_type": "slug",
                        "current": "measuring-acceleration"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "6281ee9bba5f",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The accelerometer can read the strength of acceleration in 3 dimensions: x, y and z.",
                                    "_key": "1895be130915",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "a6751e4f9bb1",
                            "asset": {
                                "_type": "reference",
                                "_ref": "image-27191bef107a45c1fc9848c3222464505ac1d993-847x804-png"
                            },
                            "_type": "simpleImage",
                            "alt": "micro:bit showing X axis going across the front, Y axis going down and up, Z axis going back to front"
                        }
                    ],
                    "alternativesLabel": "Select dimension:",
                    "alternatives": [
                        {
                            "content": [
                                {
                                    "_key": "b05c981a820e",
                                    "_type": "python",
                                    "main": "from microbit import *\n\nx_strength = accelerometer.get_x()\ndisplay.scroll(x_strength)"
                                }
                            ],
                            "slug": {
                                "current": "x",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "x",
                            "_key": "bc8359a91e4f"
                        },
                        {
                            "_key": "d564feb7e22d",
                            "content": [
                                {
                                    "main": "from microbit import *\n\ny_strength = accelerometer.get_y()\ndisplay.scroll(y_strength)",
                                    "_key": "1bf1ba9b868c",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "y",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "y"
                        },
                        {
                            "slug": {
                                "current": "z",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "z",
                            "_key": "269a4c6003c5",
                            "content": [
                                {
                                    "_key": "56613edbc435",
                                    "_type": "python",
                                    "main": "from microbit import *\n\nz_strength = accelerometer.get_z()\ndisplay.scroll(z_strength)"
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "Accelerometer",
            "slug": {
                "_type": "slug",
                "current": "accelerometer"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Detect gestures and movement",
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-547e99629fe641c82c339c2d739cd4f641e4aaa1-144x144-svg",
                    "_type": "reference"
                }
            }
        },
        {
            "name": "Comments",
            "slug": {
                "current": "comments",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Explain your Python code",
            "image": {
                "asset": {
                    "_ref": "image-f903541079813df0bb29b329319a449938319bd4-144x144-svg",
                    "_type": "reference"
                },
                "_type": "image"
            },
            "introduction": [
                {
                    "style": "normal",
                    "_key": "df3fa984e856",
                    "markDefs": [],
                    "children": [
                        {
                            "_key": "e24228e99923",
                            "_type": "span",
                            "marks": [],
                            "text": "Comments help other people understand and modify your code. Theyâ€™re useful if you come back to your code a long time after you wrote it. You can also use the # sign to temporarily stop a line from being run when youâ€™re debugging."
                        }
                    ],
                    "_type": "block"
                }
            ],
            "contents": [
                {
                    "slug": {
                        "current": "add-and-remove-comments",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "73b965eac856",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can add comment by putting a # symbol at the start of a line. (On a Mac, press ",
                                    "_key": "973b68d00a89",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "Option",
                                    "_key": "f29d7c8fd747",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "text": "+",
                                    "_key": "b8c75e7de387",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "3",
                                    "_key": "947c52f4e68b",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_key": "b87d5e62cfcc",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to type a # symbol.)"
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "# function to convert centigrade to Fahrenheit\ndef convertCtoF(c):\n    return c * 1.8 + 32",
                            "_key": "b16806ac0f76"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "72393c067f02",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "1db8fc312307",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can also use a keyboard shortcut "
                                },
                                {
                                    "_key": "12920e946bef",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "Ctrl"
                                },
                                {
                                    "_key": "3360e033fa6b",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "+"
                                },
                                {
                                    "text": "/",
                                    "_key": "98bb3b8b35c1",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " (",
                                    "_key": "0f50602023b8"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "Cmd",
                                    "_key": "fba13659be95"
                                },
                                {
                                    "marks": [],
                                    "text": "+",
                                    "_key": "3ea6a0fd4581",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "/",
                                    "_key": "507a4edf0f90"
                                },
                                {
                                    "_key": "204c3e0967cf",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " on a Mac) to comment any lines you have highlighted. The same shortcut removes comments."
                                }
                            ]
                        },
                        {
                            "style": "normal",
                            "_key": "89224e5331ac",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can also add comments at the end of a line:",
                                    "_key": "1d8c4fcd4d89",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "e38e957ab2e4",
                            "_type": "python",
                            "main": "def convertCtoF(c):\n    return c * 1.8 + 32 # formula to convert centigrade to Fahrenheit"
                        }
                    ],
                    "name": "Add and remove comments"
                }
            ]
        },
        {
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-b6218f0d8d2be6930768fed334f3a7e33ddb977b-144x144-svg",
                    "_type": "reference"
                }
            },
            "contents": [
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "alternativesLabel": "Select operation:",
                    "alternatives": [
                        {
                            "_key": "da9e167ea157",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "a = 22 + 7",
                                    "_key": "a91ae4fe0217"
                                }
                            ],
                            "slug": {
                                "current": "addition",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "addition"
                        },
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "a = 22 - 7",
                                    "_key": "ea56acfb7966"
                                }
                            ],
                            "slug": {
                                "current": "subtraction",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "subtraction",
                            "_key": "0c761358321d"
                        },
                        {
                            "_key": "906af7b145db",
                            "content": [
                                {
                                    "_key": "2e4ef414d4be",
                                    "_type": "python",
                                    "main": "a = 22 * 7"
                                }
                            ],
                            "slug": {
                                "current": "multiplication",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "multiplication"
                        },
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "division"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "division",
                            "_key": "5a4cfe4a2e94",
                            "content": [
                                {
                                    "_key": "b3af8621eb7b",
                                    "_type": "python",
                                    "main": "a = 22 / 7"
                                }
                            ]
                        },
                        {
                            "name": "exponent",
                            "_key": "0e15ceb3921c",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "a = 2 ** 8",
                                    "_key": "cb8dca30cb20"
                                },
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "ca3c755c55c0",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This will raise the base number 2 to the exponent (power) 8. The variable ",
                                            "_key": "be6ffadd2d470",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "a",
                                            "_key": "e62fa3440cf7"
                                        },
                                        {
                                            "text": " will have the value 256.",
                                            "_key": "0a927985d9bd",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ]
                                }
                            ],
                            "slug": {
                                "current": "exponent",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "modulo",
                            "_key": "bcfcbdb1aa53",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "f7acda37a440",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Modular arithmetic shows the remainder of a number when divided.",
                                            "_key": "39b4ab5a7b4d0"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_key": "8ffe50debc79",
                                    "_type": "python",
                                    "main": "from microbit import *\n\nhour = 15 % 12"
                                },
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "22881a9c62d4",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This example uses the modulo operator ",
                                            "_key": "eebbd8446ebf0"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "% ",
                                            "_key": "facf97d03da6"
                                        },
                                        {
                                            "text": "to convert 24 hour clock to 12 hour clock by dividing 15 by 12 and using only the remainder.",
                                            "_key": "dc7cddb5e095",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ]
                                },
                                {
                                    "_key": "de6bb6630123",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "15 divided by 12 is 1 remainder 3. The ",
                                            "_key": "28abb8d9f4030",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "hour",
                                            "_key": "800cebbe537f",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " variable has the value 3.",
                                            "_key": "2873d860b100"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                }
                            ],
                            "slug": {
                                "current": "modulo",
                                "_type": "slug"
                            }
                        },
                        {
                            "slug": {
                                "current": "floor-division",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "floor division",
                            "_key": "a78e9ab0c723",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "9337e42b5f7c",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "The ",
                                            "_key": "4e18a41e63c40"
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "//",
                                            "_key": "7721e57b972c",
                                            "_type": "span"
                                        },
                                        {
                                            "_key": "35c6316f3e60",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " operator divides two numbers and always rounds down the result:"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "main": "from microbit import *\n \n \na = 10 // 6",
                                    "_key": "aff803a71b8c",
                                    "_type": "python"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "10 divided by 6 is 1.6666, but this code will assign the value 1 to the variable ",
                                            "_key": "0633a685cbf40",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "text": "a",
                                            "_key": "e45edbc26e78",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "_key": "249779429d70",
                                            "_type": "span",
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": " "
                                        },
                                        {
                                            "text": "because it rounds down.",
                                            "_key": "0633a685cbf42",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "92a5fb2cebd0"
                                },
                                {
                                    "_key": "fc7c7ddd9bd8",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Floor division relates to modular arithmetic. Whereas the modulo operator ",
                                            "_key": "148648557945"
                                        },
                                        {
                                            "_key": "d5a682d5fbf3",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "%"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " gives the remainder of a number as a whole number (integer) when divided, you can use floor division to give you everything ",
                                            "_key": "c20ee07ce3d8"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": "except",
                                            "_key": "e34c399eb5ab1"
                                        },
                                        {
                                            "text": " the remainder as a whole number - this is the quotient.",
                                            "_key": "e34c399eb5ab2",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                }
                            ]
                        }
                    ],
                    "name": "Mathematical operators",
                    "slug": {
                        "_type": "slug",
                        "current": "mathematical-operators"
                    }
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You must add ",
                                    "_key": "f35e6054bdc4"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "import random",
                                    "_key": "f95a78d04bd3",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " near the start of your program. This will show a random number between 1 and 6:",
                                    "_key": "5ce7a4656da1"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "9e81250b5348"
                        },
                        {
                            "_key": "28dca1743eb7",
                            "_type": "python",
                            "main": "from microbit import *\nimport random\n\n\ndisplay.show(random.randint(1, 6))"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_key": "85a637632f17",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can use "
                                },
                                {
                                    "text": "random.choice()",
                                    "_key": "3713a3732666",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "text": " to pick a random item from a list:",
                                    "_key": "42edcda80e90",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "e022794fe296",
                            "markDefs": []
                        },
                        {
                            "_key": "3e3acc55332c",
                            "_type": "python",
                            "main": "from microbit import *\nimport random\n\n\nhands = ['rock', 'paper', 'scissors']\ndisplay.scroll(random.choice(hands))"
                        },
                        {
                            "style": "normal",
                            "_key": "5d60af186258",
                            "markDefs": [
                                {
                                    "slug": {
                                        "current": "lists-arrays",
                                        "_type": "slug"
                                    },
                                    "targetType": "toolkitTopic",
                                    "_key": "6d5c86d33bd8",
                                    "reference": {
                                        "_ref": "47cd8e43-0c5d-422d-867c-5cb80ee643d3",
                                        "_type": "reference"
                                    },
                                    "_type": "toolkitInternalLink"
                                }
                            ],
                            "children": [
                                {
                                    "_key": "0d52d2243626",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "See "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "6d5c86d33bd8"
                                    ],
                                    "text": "Lists",
                                    "_key": "5e47c7b62ae3"
                                },
                                {
                                    "marks": [],
                                    "text": " to learn more about using lists in Python.",
                                    "_key": "1cbe8011aa9f",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "name": "Random numbers",
                    "slug": {
                        "current": "random-numbers",
                        "_type": "slug"
                    }
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Mathematical operations are not calculated in order from left to right. Some operations take precedence over others. In Python, operations are carried out in this order:",
                                    "_key": "81780ca2708c",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "7851a26a73fb"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Brackets (parentheses) ",
                                    "_key": "c1e588366c8a",
                                    "_type": "span"
                                },
                                {
                                    "text": "()",
                                    "_key": "a91d6a828848",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                }
                            ],
                            "level": 1,
                            "_type": "block",
                            "style": "normal",
                            "_key": "8d0d90b69cd1",
                            "listItem": "bullet"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Exponentials (raise to the power of) ",
                                    "_key": "50a52ec27c2b0",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "**",
                                    "_key": "51f4a2d97619"
                                }
                            ],
                            "level": 1,
                            "_type": "block",
                            "style": "normal",
                            "_key": "9d9c3fe2a1df",
                            "listItem": "bullet"
                        },
                        {
                            "listItem": "bullet",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Multiplication ",
                                    "_key": "434ad2eca9910"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "*",
                                    "_key": "e2926983b019"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", division ",
                                    "_key": "e5f991eaf8f2"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "/",
                                    "_key": "a6fbaf9bca85"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", modulo (remainder) ",
                                    "_key": "6e2d0a50da45"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "%",
                                    "_key": "c1e2b3bf6601"
                                },
                                {
                                    "marks": [],
                                    "text": ", floor division ",
                                    "_key": "e7f81613f89d",
                                    "_type": "span"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "//",
                                    "_key": "c83e20274505",
                                    "_type": "span"
                                }
                            ],
                            "level": 1,
                            "_type": "block",
                            "style": "normal",
                            "_key": "80f702baba97"
                        },
                        {
                            "_key": "c6c18b8ea446",
                            "listItem": "bullet",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Addition ",
                                    "_key": "b5c557e855180"
                                },
                                {
                                    "_key": "b9daac5d6e44",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "+"
                                },
                                {
                                    "_key": "8fa907523d68",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " and subtraction "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "-",
                                    "_key": "79e5bb13bfb2"
                                }
                            ],
                            "level": 1,
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "d6feea5da7ad",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You may know precedence as BODMAS or BIDMAS (brackets, orders or indices, division, multiplication, addition, subtraction)."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "478251807c4f"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\ndisplay.scroll(2 + 3 * 4)\ndisplay.scroll((2 + 3) * 4)",
                            "_key": "3e7381df4ef4"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "8b849bd72b65",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "In this example, the first number shown is 14 because the multiplication happens before the addition: 3 is multiplied by 4 to make 12 and then 2 is added."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "f77679a91b74"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The second number shown is 20. The brackets around ",
                                    "_key": "29207e23f5c0",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "2 + 3",
                                    "_key": "7a8f63b05c0f"
                                },
                                {
                                    "marks": [],
                                    "text": " mean that the addition is done first. 2 + 3 = 5, which is then multiplied by 4 to make 20.",
                                    "_key": "62c81eeed28e",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "74a351967dff"
                        }
                    ],
                    "name": "Precedence",
                    "slug": {
                        "current": "precedence",
                        "_type": "slug"
                    }
                },
                {
                    "content": [
                        {
                            "_key": "53faca737888",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The ",
                                    "_key": "4192621f6489"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "abs()",
                                    "_key": "99dfadae41eb"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " function will turn any number, positive or negative into a positive number.",
                                    "_key": "d3152fdf946d"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "main": "from microbit import *\n\n\ndisplay.scroll(abs(accelerometer.get_y()))\n",
                            "_key": "b088a7ca5d4b",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "8e9bf1149b89",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This is useful if you are only interested in the strength of accelerometer or compass strength readings which can be positive or negative. ",
                                    "_key": "ca1a347c4165",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_key": "f2c7a9645d31",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "fcea68a846e8",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This will show the magnitude of the accelerometer reading in the Y-axis as a positive number, regardless of whether the reading was positive or negative."
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": "Absolute",
                    "slug": {
                        "_type": "slug",
                        "current": "absolute"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "name": " Rounding",
                    "slug": {
                        "_type": "slug",
                        "current": "rounding"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "alternativesLabel": "Select rounding type:",
                    "alternatives": [
                        {
                            "_key": "c5b5bce6bc36",
                            "content": [
                                {
                                    "_key": "8441fb7bbe51",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "6893a164d8830",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "You can use the "
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "int()",
                                            "_key": "7e9b3c36fc98"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " function to turn a decimal (floating point) number into a whole number (integer). It rounds down. This example shows 4 on the display:",
                                            "_key": "2cc9cd24ed5d"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \ndisplay.scroll(int(4.9))",
                                    "_key": "9586df857b39"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "integers"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "integers"
                        },
                        {
                            "name": "decimal places",
                            "_key": "5007a6fdba07",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "e4618574df1d",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "The ",
                                            "_key": "36a7e2d4bd980"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "round()",
                                            "_key": "a095c6d3534d"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " function rounds numbers to a given number of decimal places. If you donâ€™t specify a number of decimal places, it will round to a whole number.",
                                            "_key": "1a4f91b02834"
                                        }
                                    ]
                                },
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "e3aec02c8760",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "fe1fcf35bf030",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This will round 2.317 to two decimal places and show 2.32 on the LED display:"
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "display.scroll(round(2.317,2))",
                                    "_key": "8f0a788742d3"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "decimal-places"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "name": "floor",
                            "_key": "3fc12b09a018",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "6dbd6232ed95",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "ed1b5287bf5f",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Use "
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "floor()",
                                            "_key": "c2886accb374"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to round down. You must import ",
                                            "_key": "536e64b43248"
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "floor",
                                            "_key": "88e57f6a7f86",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " from the math module near the start of your program. This will round 2.9 down to 2:",
                                            "_key": "114c0ce33a7b"
                                        }
                                    ]
                                },
                                {
                                    "main": "from microbit import *\nfrom math import floor \n \ndisplay.scroll(floor(2.9))",
                                    "_key": "2b560e3ee98f",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "floor"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_key": "a6dd6823e596da47c2037baf46e80609",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "6dbd6232ed95",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "ed1b5287bf5f",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "ceil()",
                                            "_key": "c2886accb374"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to round up. You must import ",
                                            "_key": "536e64b43248"
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "ceil",
                                            "_key": "00262f4f8982",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " from the math module near the start of your program. This will round 2.1 up to 3:",
                                            "_key": "99750d41f192"
                                        }
                                    ]
                                },
                                {
                                    "_key": "2b560e3ee98f",
                                    "_type": "python",
                                    "main": "from microbit import *\nfrom math import ceil \n \ndisplay.scroll(ceil(2.1))"
                                }
                            ],
                            "slug": {
                                "current": "ceiling",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "ceiling"
                        }
                    ]
                }
            ],
            "name": "Maths",
            "slug": {
                "current": "maths",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Basic maths in Python"
        },
        {
            "name": "Lists (arrays)",
            "slug": {
                "_type": "slug",
                "current": "lists-arrays"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Organise data in lists",
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-e9f0f86026dae06b3d21aefb282614ccb0320823-144x144-svg",
                    "_type": "reference"
                }
            },
            "introduction": [
                {
                    "children": [
                        {
                            "marks": [],
                            "text": "Lists, or arrays, are collections of data. They can be made up of variables, numbers, strings, or a mixture of different ",
                            "_key": "d4ca82af01a5",
                            "_type": "span"
                        },
                        {
                            "marks": [
                                "a8a5b5617fd8"
                            ],
                            "text": "data types",
                            "_key": "795aaec4fa9e",
                            "_type": "span"
                        },
                        {
                            "_type": "span",
                            "marks": [],
                            "text": ".",
                            "_key": "9b0abc64952f"
                        }
                    ],
                    "_type": "block",
                    "style": "normal",
                    "_key": "3afd3239f1c3",
                    "markDefs": [
                        {
                            "targetType": "toolkitTopic",
                            "_key": "a8a5b5617fd8",
                            "reference": {
                                "_ref": "38feee7a-be99-48db-a3ce-c0b366bafa43",
                                "_type": "reference"
                            },
                            "_type": "toolkitInternalLink",
                            "slug": {
                                "current": "data-types",
                                "_type": "slug"
                            }
                        }
                    ]
                },
                {
                    "_type": "block",
                    "style": "normal",
                    "_key": "d15d95f38118",
                    "markDefs": [],
                    "children": [
                        {
                            "text": "Items in a list are called ",
                            "_key": "ac4a84403482",
                            "_type": "span",
                            "marks": []
                        },
                        {
                            "_type": "span",
                            "marks": [
                                "strong"
                            ],
                            "text": "elements.",
                            "_key": "ee3076ab30341"
                        }
                    ]
                },
                {
                    "_key": "0a70f1336ba0",
                    "markDefs": [],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "The position of an item in a list is its ",
                            "_key": "b9bd1f406355"
                        },
                        {
                            "marks": [
                                "strong"
                            ],
                            "text": "index",
                            "_key": "99dcc4eacee51",
                            "_type": "span"
                        },
                        {
                            "_type": "span",
                            "marks": [],
                            "text": ". Python starts counting from 0, so the first element in a list is at index 0.",
                            "_key": "99dcc4eacee52"
                        }
                    ],
                    "_type": "block",
                    "style": "normal"
                }
            ],
            "contents": [
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "079e8dca5d13",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Like variables, give a list a name when you create it. The elements in a list are put inside square brackets, and each element is separated by a comma:",
                                    "_key": "9c21e5783192",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "main": "numbers = ['zero', 'one', 2]",
                            "_key": "6f662aa07530",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "4b526e53afdf",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Strings must be enclosed in quotation marks.",
                                    "_key": "8408023f5327",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "4c3ee1b7d6d1",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can create an empty list which you can add things to later:",
                                    "_key": "ebaba45a50f4",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_key": "61d23a61b955",
                            "_type": "python",
                            "main": "numbers = []"
                        }
                    ],
                    "name": "Make a list",
                    "slug": {
                        "current": "make-a-list",
                        "_type": "slug"
                    }
                },
                {
                    "slug": {
                        "_type": "slug",
                        "current": "retrieve-list-element"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "alternativesLabel": "Select method:",
                    "alternatives": [
                        {
                            "name": "by index",
                            "_key": "9f06af2ea927",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "fd3339b9ab30",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Elements in lists can be accessed using a numerical index, starting at 0 for the first item. This will scroll â€˜zeroâ€™ on the display:",
                                            "_key": "2ac8a5ab95da0",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "main": "from microbit import *\n \n \nnumbers = ['zero', 'one', 2]\ndisplay.scroll(numbers[0])",
                                    "_key": "59d4e0419a3e",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "by-index",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "name": "iterating",
                            "_key": "06284a00ac0e",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "5727bad1bc92",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "4394934fcad60",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "You can access all the elements of a list in turn, using a â€˜forâ€™ loop:"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \n \nnumbers = ['zero', 'one', 2]\nfor number in numbers:\n    display.scroll(number)",
                                    "_key": "fa5f49d7bbc2"
                                }
                            ],
                            "slug": {
                                "current": "iterating",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "slug": {
                                "current": "random",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "random",
                            "_key": "237602cc8d27",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "6dcd94551670",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "082a19ff13ae0",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Import the "
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "random",
                                            "_key": "5b62027c5b0d"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " module so you can use ",
                                            "_key": "38c15dd5384e"
                                        },
                                        {
                                            "_key": "0fe462b95e16",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "random.choice()"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to retrieve a random element from a list:",
                                            "_key": "bada89d11f53"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\nimport random\n\nhands = ['rock', 'paper', 'scissors']\ndisplay.scroll(random.choice(hands))",
                                    "_key": "9f721f68905c"
                                }
                            ]
                        }
                    ],
                    "name": "Retrieve list element"
                },
                {
                    "name": "Change list element",
                    "slug": {
                        "_type": "slug",
                        "current": "change-list-element"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "22d49559bceb",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "This will replace the item at index 1 (the string 'one') with the integer 1:",
                                    "_key": "b68d9fc29efe",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\nnumbers = ['zero', 'one', 2]\nnumbers[1] = 1",
                            "_key": "3ac2767dfdc0"
                        }
                    ]
                },
                {
                    "name": "Add element to list",
                    "slug": {
                        "current": "add-element-to-list",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "alternativesLabel": "Select method:",
                    "alternatives": [
                        {
                            "name": "append",
                            "_key": "813ab3c94d8c",
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Add, or append, items to the end of a list like this:",
                                            "_key": "cc515f556561"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "9f986982177c"
                                },
                                {
                                    "_key": "b95035791762",
                                    "_type": "python",
                                    "main": "letters = ['a', 'b', 'c']\nletters.append('d')"
                                }
                            ],
                            "slug": {
                                "current": "append",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "insert"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "insert",
                            "_key": "fb86197afe5d",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "31697ff9f0b4",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "Use ",
                                            "_key": "edc8bb6cb3950",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "insert",
                                            "_key": "1ee2aab1d64b",
                                            "_type": "span"
                                        },
                                        {
                                            "text": " to add elements at a given point in a list:",
                                            "_key": "da6ff780295d",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "letters = ['a', 'b', 'd']\nletters.insert(2,'c')",
                                    "_key": "0bde9aba6006"
                                },
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "eeeb9a61064d",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This will insert the letter 'c' at index 2, the third place in the list when you count from 0.",
                                            "_key": "50dc036462f20"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Remove element from list",
                    "slug": {
                        "_type": "slug",
                        "current": "remove-element-from-list"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "alternativesLabel": "Select method:",
                    "alternatives": [
                        {
                            "name": "by index (pop)",
                            "_key": "b9118d9e623b",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "1f5dcbb072e9",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "You can delete items by their position in the list with ",
                                            "_key": "b3fa4ee8e858",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "pop()",
                                            "_key": "442086dbc372"
                                        },
                                        {
                                            "_key": "23cb4e303610",
                                            "_type": "span",
                                            "marks": [],
                                            "text": ":"
                                        }
                                    ]
                                },
                                {
                                    "_key": "d73019096ffb",
                                    "_type": "python",
                                    "main": "letters = ['a', 'b', 'c', 'd']\nletters.pop(1)"
                                },
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "5d3123fb2538",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This removes the item at index 1, the letter â€˜bâ€™, from the list.",
                                            "_key": "23114d89c2b1"
                                        }
                                    ]
                                }
                            ],
                            "slug": {
                                "current": "by-index-pop",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "54e7a105fec20",
                                            "_type": "span"
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "remove()",
                                            "_key": "ec18acb44d8a",
                                            "_type": "span"
                                        },
                                        {
                                            "_key": "4fbdb06698c7",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to delete an element if you know its value but not its position in a list: "
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "0dfc249d72f1"
                                },
                                {
                                    "_key": "c6a6644a67d7",
                                    "_type": "python",
                                    "main": "letters = ['a', 'b', 'c', 'd']\nletters.remove('c')\n"
                                },
                                {
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This will remove â€˜câ€™ from any position the list.",
                                            "_key": "0c24939deb8d",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "b110f6de864f",
                                    "markDefs": []
                                }
                            ],
                            "slug": {
                                "current": "by-value-remove",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "by value (remove)",
                            "_key": "7a4487900565"
                        },
                        {
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "434a9719e74e",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "59b85d48dac5",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Use clear() to delete all elements from a list:"
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "letters = ['a', 'b', 'c', 'd']\nletters.clear()",
                                    "_key": "969aec7a409f"
                                }
                            ],
                            "slug": {
                                "current": "clear-list",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "clear list",
                            "_key": "8d3753028c24"
                        }
                    ]
                },
                {
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "b5cd24a5ca7a",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can reverse lists that are made up of different data types, but you can only sort lists alphanumerically that comprise all the same data type, for example all elements must be strings or all integers.",
                                    "_key": "0df2cc8a48c2"
                                }
                            ]
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "96416b062c09",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "",
                                    "_key": "9e707895d576",
                                    "_type": "span"
                                }
                            ]
                        }
                    ],
                    "name": "Sort list",
                    "slug": {
                        "current": "sort-list",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "alternativesLabel": "Select sort:",
                    "alternatives": [
                        {
                            "_key": "403f15f3357d",
                            "content": [
                                {
                                    "_key": "4c24d3a512f4",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "Use ",
                                            "_key": "d4b84d5cf42a",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "text": "sort()",
                                            "_key": "f3caf7181d58",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "text": " to sort lists alphanumerically:",
                                            "_key": "92c3bbf8758e",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "python",
                                    "main": "letters = ['c', 'd', 'b', 'a']\nletters.sort()",
                                    "_key": "d994995a4520"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This will sort the list into alphabetical order: 'a', 'b', 'c', 'd'.",
                                            "_key": "9cf3516ebb8e"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "d8cc50539e62"
                                }
                            ],
                            "slug": {
                                "current": "alphanumeric",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "alphanumeric"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "reverse",
                            "_key": "40a1e77a2438",
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "Use ",
                                            "_key": "ad7a3915111f0",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "text": "reverse()",
                                            "_key": "4bbc92860224",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "text": " to reverse the order of a list:",
                                            "_key": "3e14223a9855",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "52d00425d183"
                                },
                                {
                                    "main": "letters = ['a', 'b', 'c', 'd']\nletters.reverse()",
                                    "_key": "e6039844aa36",
                                    "_type": "python"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "This will reverse the order of the list to become 'd', 'c', 'b', 'a'.",
                                            "_key": "d1378fff22fd",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "46ec4f550f32"
                                }
                            ],
                            "slug": {
                                "current": "reverse",
                                "_type": "slug"
                            }
                        }
                    ]
                },
                {
                    "slug": {
                        "_type": "slug",
                        "current": "length-of-a-list"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Use ",
                                    "_key": "ce6bcf166c38",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "len()",
                                    "_key": "5bd14f167e8d",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to find out how long a list is:",
                                    "_key": "c7f1fbeaac2a"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "694457c0f329"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\nnumbers = [5, 7, 0, 5]\ndisplay.scroll(len(numbers))",
                            "_key": "d0cd904253b6"
                        },
                        {
                            "style": "normal",
                            "_key": "cfefb9af8442",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This displays 4 because there are 4 elements in the list.",
                                    "_key": "31b2c265b4ca",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "name": "Length of a list"
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "5c77ce2c7099",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Use ",
                                    "_key": "8b671529ec77",
                                    "_type": "span"
                                },
                                {
                                    "_key": "3718b8335b79",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "count()"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to count how many times a particular element occurs in a list:",
                                    "_key": "1d09d6453ed5"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\nnumbers = [5, 7, 0, 5]\ndisplay.scroll(numbers.count(5))",
                            "_key": "df37e1af600b"
                        },
                        {
                            "_key": "390e1d4e5015",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "This displays 2 because 5 occurs twice in the list.",
                                    "_key": "e2032fa13d8a",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": " Count occurrences in lists",
                    "slug": {
                        "_type": "slug",
                        "current": "count-occurrences-in-lists"
                    }
                }
            ]
        },
        {
            "name": "Functions",
            "slug": {
                "current": "functions",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Make your code more efficient",
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-3fbaaa2548c4e172fe450e5a349ba7b7a9b1cbbc-144x144-svg",
                    "_type": "reference"
                }
            },
            "introduction": [
                {
                    "_type": "block",
                    "style": "normal",
                    "_key": "e4e59280d5d5",
                    "markDefs": [],
                    "children": [
                        {
                            "text": "Python has many built-in functions like ",
                            "_key": "60778009a7320",
                            "_type": "span",
                            "marks": []
                        },
                        {
                            "text": "sleep()",
                            "_key": "ae38710aceae",
                            "_type": "span",
                            "marks": [
                                "code"
                            ]
                        },
                        {
                            "marks": [],
                            "text": " and ",
                            "_key": "a1694e1cd9c5",
                            "_type": "span"
                        },
                        {
                            "_type": "span",
                            "marks": [
                                "code"
                            ],
                            "text": "int()",
                            "_key": "eaf9dc7b7d71"
                        },
                        {
                            "_type": "span",
                            "marks": [],
                            "text": ", but you can make your own to re-use sections of code in your programs.",
                            "_key": "2ad065e0bc39"
                        }
                    ]
                },
                {
                    "_key": "cec319049223",
                    "markDefs": [],
                    "children": [
                        {
                            "_key": "c51e8fd6d83a",
                            "_type": "span",
                            "marks": [],
                            "text": "Functions make code easier to read and modify. Define your function near the start of your program, giving it a descriptive name, then call it using its name followed by round brackets."
                        }
                    ],
                    "_type": "block",
                    "style": "normal"
                }
            ],
            "contents": [
                {
                    "slug": {
                        "current": "procedures",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "39b68a27ccf3",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Procedures, also called sub-routines, are functions that carry out a fixed set of instructions.",
                                    "_key": "b97308207153",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "ee087fbacfce",
                            "_type": "python",
                            "main": "from microbit import *\n\ndef heart_wait():\n    display.show(Image.HEART)\n    sleep(1000)\n\nheart_wait()\ndisplay.clear()"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This function called",
                                    "_key": "b96de5f13db1",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": " ",
                                    "_key": "f0d3610877a0"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "heart_wait()",
                                    "_key": "2e751054878a"
                                },
                                {
                                    "text": " shows a heart on the micro:bit's LED display, then waits 1 second.",
                                    "_key": "c1b51eb5041d",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "377d54946ca5"
                        }
                    ],
                    "name": "Procedures"
                },
                {
                    "name": " Functions with parameters",
                    "slug": {
                        "_type": "slug",
                        "current": "functions-with-parameters"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "7df59d367afb",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "ba4598e5c206",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can put data in brackets to pass to a function, which the function can then process."
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\ndef image_wait(myImage):\n    display.show(myImage)\n    sleep(1000)\n\nimage_wait(Image.HEART)\nimage_wait(Image.HEART_SMALL)",
                            "_key": "954e51d915f3"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "text": "In this example, we define a function called ",
                                    "_key": "9657308dc892",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "image_wait()",
                                    "_key": "a0eaf5e4ff83"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ". This will show any image we pass to the function.",
                                    "_key": "9466e5197720"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "4b36ca6e50bd",
                            "markDefs": []
                        },
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Data you pass to a function are called parameters. Parameters make functions more flexible.",
                                    "_key": "62cd74a730ec",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "73e79a575d0e",
                            "markDefs": []
                        },
                        {
                            "style": "normal",
                            "_key": "0a955cc6c035",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can send more than one parameter to a function. This function allows you to specify both the image and how long the function waits. The default delay is 1 second, but you can over-ride it by specifying a new time when you call the function:",
                                    "_key": "1ac7d6d47dfc"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "e58402640cff",
                            "_type": "python",
                            "main": "from microbit import *\n\ndef image_wait(myImage, delay=1000):\n    display.show(myImage)\n    sleep(delay)\n\nimage_wait(Image.HEART)\nimage_wait(Image.HEART_SMALL, delay=3000)\ndisplay.clear()"
                        }
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Functions can process information and ",
                                    "_key": "ef50086038d1",
                                    "_type": "span"
                                },
                                {
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "return",
                                    "_key": "961f14576f0e",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " it.",
                                    "_key": "16ff354a7f12"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "db745643928f"
                        },
                        {
                            "main": "from microbit import *\n\n\ndef convertCtoF(c):\n    return c * 1.8 + 32\n\ndisplay.scroll(convertCtoF(temperature()))",
                            "_key": "ba9f4bd2283b",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "5886383bc883",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This function takes any number you pass to it, modifies it using the formula to convert centigrade to Fahrenheit, and returns it.",
                                    "_key": "d0297df1f247"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "style": "normal",
                            "_key": "b80831c1d827",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The function ",
                                    "_key": "4871e25973e8"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "convertCtoF()",
                                    "_key": "ce8c7e4a7c36",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " is called inside a ",
                                    "_key": "e5f746bafe96"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "display.scroll()",
                                    "_key": "f13e22f5f686"
                                },
                                {
                                    "_key": "114b9682f54c",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " statement. The current temperature in centigrade is passed to the function."
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "children": [
                                {
                                    "_key": "2d0c80254cf7",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "â€˜Function' is a mathematical term describing a relation or expression involving one or more variables, such as F = C x 1.8 + 32."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "6ba567ad3b29",
                            "markDefs": []
                        },
                        {
                            "_key": "0700f73e0d5e",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Functions in computer programs work in a similar way, which is why they are good for performing calculations and conversions.",
                                    "_key": "fe79cfb6f2ac",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": " Functions with return",
                    "slug": {
                        "current": "functions-with-return",
                        "_type": "slug"
                    }
                },
                {
                    "name": "Scope of variables",
                    "slug": {
                        "_type": "slug",
                        "current": "scope-of-variables"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Variables arenâ€™t always available to all parts of your program. Sometimes this is what you want, but it can cause problems. Variables can be ",
                                    "_key": "91f9da9643a4"
                                },
                                {
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "global",
                                    "_key": "c1333d62fac4",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " or ",
                                    "_key": "0e21ec45cbbb"
                                },
                                {
                                    "_key": "cc300f1185cb",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "local"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ".",
                                    "_key": "5a3691f3badd"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "4a225834fb71"
                        },
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Global variables can be accessed by any part of your program. Local variables only work inside a section of your program such as a function.",
                                    "_key": "fa88c4a86f69",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "6ebee507faad",
                            "markDefs": []
                        }
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "d1c116993562",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "If you create a variable outside a function definition, it will be global and can be used by the function.",
                                    "_key": "a8efc4f9e641"
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndef greeting():\n    display.scroll('Hello ' + name)\n\nname = 'Sam'\ngreeting()",
                            "_key": "7d3b9d6ccde8"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "79bbfa382ebb",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "In this example the display shows â€˜Hello Samâ€™.",
                                    "_key": "43b325063b5c0"
                                }
                            ]
                        },
                        {
                            "style": "normal",
                            "_key": "57fe05db7f9d",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Although ",
                                    "_key": "018d213a264d"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "name",
                                    "_key": "71acb10de062"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " is a global variable, it must be defined before the function ",
                                    "_key": "e936f2a94232"
                                },
                                {
                                    "_key": "1e360121af83",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "greeting()"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": " ",
                                    "_key": "43b325063b5c3"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "is called, or you will get an error.",
                                    "_key": "43b325063b5c4"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "If you want to modify the value of a ",
                                    "_key": "d08c27ccd89c",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "global",
                                    "_key": "8d9166286e25"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " variable in a function, you must declare that you want to use the global variable of that name using ",
                                    "_key": "1c4b478d359e"
                                },
                                {
                                    "text": "global",
                                    "_key": "5335c3b0e3c9",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_key": "b8703df8c3be",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "73c83d96cbd4",
                            "markDefs": []
                        },
                        {
                            "style": "normal",
                            "_key": "9eca230ae3e4",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Here we use the global variable count to track how many times the function has been called:",
                                    "_key": "22d7d4942f27",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndef clicker():\n    global count\n    count += 1\n    display.show(count)\n\ncount = 0\nwhile True:\n    if button_a.was_pressed():\n        clicker()",
                            "_key": "1525a1d1b85b"
                        }
                    ],
                    "name": "Scope: global variables",
                    "slug": {
                        "current": "scope-global-variables",
                        "_type": "slug"
                    }
                },
                {
                    "content": [
                        {
                            "style": "normal",
                            "_key": "0904bfb1fb4d",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Variables inside functions are assumed to be ",
                                    "_key": "6f11e775b925",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "local",
                                    "_key": "0e1a9d5d2686",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " unless you state otherwise.",
                                    "_key": "804971e069d1"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "main": "from microbit import *\n\n\ndef count():\n    number = 9\n    display.show(number)\n\nnumber = 5\ncount()\nsleep(1000)\ndisplay.show(number)",
                            "_key": "bb7fe26caf9e",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "5e7a97fbb99c",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Here we have two instances of a variable called ",
                                    "_key": "95c6746534a00",
                                    "_type": "span"
                                },
                                {
                                    "_key": "af75a0e68b60",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "number"
                                },
                                {
                                    "_key": "3205121f1ea9",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ". Inside the "
                                },
                                {
                                    "text": "count()",
                                    "_key": "a66e7028dad5",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " function ",
                                    "_key": "630d6d475fd7"
                                },
                                {
                                    "text": "number",
                                    "_key": "2723667c492d",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "text": " is a local variable with a value of 9.",
                                    "_key": "5fb1559d79a6",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "3ada6a8dccb5",
                            "markDefs": [
                                {
                                    "reference": {
                                        "_ref": "b486a595-6422-4526-92e4-d47fc6be98d2",
                                        "_type": "reference"
                                    },
                                    "slug": {
                                        "current": "scope-global-variables",
                                        "_type": "slug"
                                    },
                                    "targetType": "toolkitTopicEntry",
                                    "_type": "toolkitInternalLink",
                                    "_key": "94be241a7c3a"
                                }
                            ],
                            "children": [
                                {
                                    "_key": "657cde9419470",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Outside the function there is a "
                                },
                                {
                                    "text": "global variable",
                                    "_key": "bd22615fc7cd",
                                    "_type": "span",
                                    "marks": [
                                        "94be241a7c3a"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " also called ",
                                    "_key": "56697eea6c01"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "number",
                                    "_key": "be0bc192b4c3",
                                    "_type": "span"
                                },
                                {
                                    "_key": "5c5d3fbb5c12",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " with a value of 5."
                                }
                            ]
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "15165870915e",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You might expect that calling the function would change the value of "
                                },
                                {
                                    "_key": "527a4536fb69",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "number"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to 9 and show 9 twice. But in fact this will show 9 and then 5 on the display because we have two different variables both called ",
                                    "_key": "5bc44766cbc1"
                                },
                                {
                                    "_key": "08b5a441dd24",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "number"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ". One is local to the function and has the value 9, the other is global and has the value 5.",
                                    "_key": "d69b98aa4b62"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "8b041dc1e071"
                        }
                    ],
                    "name": "Scope: local variables",
                    "slug": {
                        "current": "scope-local-variables",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                }
            ]
        },
        {
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Send messages between micro:bits",
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-9c9c646e17624ab9f91123d44552fc32f2fdbf89-144x144-svg",
                    "_type": "reference"
                }
            },
            "introduction": [
                {
                    "children": [
                        {
                            "marks": [],
                            "text": "You can send messages between micro:bits by radio. You need to import the radio module near the start of your program using ",
                            "_key": "bca82dcb72a9",
                            "_type": "span"
                        },
                        {
                            "_type": "span",
                            "marks": [
                                "code"
                            ],
                            "text": "import radio",
                            "_key": "bada0c29d0ab"
                        }
                    ],
                    "_type": "block",
                    "style": "normal",
                    "_key": "1eb3bf50e960",
                    "markDefs": []
                }
            ],
            "contents": [
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "9d940157da6b",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "2c700b0551bb",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "First set a radio group so you know your message is going to the right micro:bit or set of micro:bits:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "main": "import radio\n\n\nradio.config(group=23)",
                            "_key": "9675fd71eaa8",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "0033c5a49ccd",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Groups work like radio channels. Any micro:bits using the same group number can share radio messages.",
                                    "_key": "777efe26eb08",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "77961eaed826",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can use any group number between 0 and 255."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "8ec9a3482e18"
                        }
                    ],
                    "name": "Groups",
                    "slug": {
                        "_type": "slug",
                        "current": "groups"
                    }
                },
                {
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "613e2f31780c",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Because the radio feature uses more power, you might want to turn it off at certain times to save batteries:",
                                    "_key": "21596c25255b",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "main": "import radio\n\n\nradio.off()",
                            "_key": "447a5e4e3e7a",
                            "_type": "python"
                        }
                    ],
                    "name": "On and off",
                    "slug": {
                        "current": "on-and-off",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "text": "You need to turn the radio on before you use it:",
                                    "_key": "6b8a95a61eff",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "55e44a7a14f0",
                            "markDefs": []
                        },
                        {
                            "_key": "bb6a362a586d",
                            "_type": "python",
                            "main": "import radio\n\n\nradio.on()"
                        }
                    ]
                },
                {
                    "slug": {
                        "current": "send-a-message",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "You can send strings over radio made up of letters, symbols and numbers:",
                                    "_key": "dda5f92f8471",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "61a70fedb301",
                            "markDefs": []
                        },
                        {
                            "_type": "python",
                            "main": "import radio\n\n\nradio.on()\nradio.send('hello')",
                            "_key": "02a28f7c2406"
                        }
                    ],
                    "name": "Send a message"
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "67d43851f08c",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "49ca63b6a58f",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Because you donâ€™t know when a radio message might be sent, itâ€™s a good idea to keep checking for new messages in a loop. This will show new messages when they arrive:"
                                }
                            ]
                        },
                        {
                            "_key": "9b3a6a73f3c4",
                            "_type": "python",
                            "main": "from microbit import *\nimport radio\n\n\nradio.on()\nwhile True:\n    message = radio.receive()\n    if message:\n        display.scroll(message)"
                        }
                    ],
                    "name": "Receive a message",
                    "slug": {
                        "_type": "slug",
                        "current": "receive-a-message"
                    }
                },
                {
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "0 is the lowest power setting, 7 is the highest. Radio signals travel further with higher power, but use more energy.",
                                    "_key": "dbc198c8fc170",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "8081ff837a45"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "You may want to reduce the power to make your batteries last longer, or in a radio treasure hunt game so that you have to get physically close to a micro:bit to pick up its signal.",
                                    "_key": "67dee4064241",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "9e6ad3c9d0ac"
                        }
                    ],
                    "name": "Transmit power",
                    "slug": {
                        "_type": "slug",
                        "current": "transmit-power"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "1eb492c86f76",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can optionally set the radio transmit power in a range from 0 to 7:",
                                    "_key": "c2245290e5c40"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "6a8cdd5f840d",
                            "_type": "python",
                            "main": "import radio\n\n\nradio.config(group=23, power=0)"
                        }
                    ]
                }
            ],
            "name": "Radio",
            "slug": {
                "current": "radio",
                "_type": "slug"
            }
        },
        {
            "slug": {
                "current": "light-level",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Measure light falling on your micro:bit",
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-e27284c6c1598a9b1180a72fbdb3ebf7490144d7-144x144-svg",
                    "_type": "reference"
                }
            },
            "contents": [
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The LEDs on the micro:bit can also act as a light sensor:",
                                    "_key": "9953ab7404b0",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "64a41741063d"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.scroll(display.read_light_level())",
                            "_key": "f376dc42c143"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "db33766018f9",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The strength of light falling on the micro:bit is measured as a number from 0 - 255, with 0 being the darkest and 255 the brightest.",
                                    "_key": "825c82082bcc",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "d50cd4004bbe",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This lights up the LED display with a heart when the light level falls below 50:",
                                    "_key": "2df46524b1cc0",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "main": "from microbit import *\n \n \nwhile True:\n    if display.read_light_level() < 50:\n        display.show(Image.HEART)\n    else:\n        display.clear()\n",
                            "_key": "7f495238c97f",
                            "_type": "python"
                        },
                        {
                            "children": [
                                {
                                    "text": "",
                                    "_key": "cbc3de39a30b",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "9787bca354e8",
                            "markDefs": []
                        },
                        {
                            "style": "normal",
                            "_key": "2b14441ce2af",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "",
                                    "_key": "37320ae2ba4f"
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "name": "Light level",
                    "slug": {
                        "_type": "slug",
                        "current": "light-level"
                    }
                }
            ],
            "name": "Light level"
        },
        {
            "slug": {
                "current": "temperature",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Measure your micro:bitâ€™s temperature",
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-728914eb6be66372df29552a110a88fac1297894-144x144-svg",
                    "_type": "reference"
                }
            },
            "contents": [
                {
                    "detailContent": [
                        {
                            "_key": "df8f0cc62af6",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "545807f86f63",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Because the processor makes a small amount of heat, readings are normally a bit higher than the temperature in the air around the micro:bit, so you may want to compare readings with a real thermometer and adjust them."
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": "Temperature",
                    "slug": {
                        "current": "temperature",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "e53351ceebe8",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The micro:bit has a temperature sensor inside its processor. You can take temperature readings in centigrade like this:",
                                    "_key": "35b4879eb821"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.scroll(temperature())",
                            "_key": "b6c885259f39"
                        }
                    ]
                }
            ],
            "name": "Temperature"
        },
        {
            "slug": {
                "_type": "slug",
                "current": "compass"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Measure direction and strength of magnetic fields",
            "image": {
                "asset": {
                    "_ref": "image-c1f3ae4947a65d2ffc6997d59668031a74a46c77-144x144-svg",
                    "_type": "reference"
                },
                "_type": "image"
            },
            "contents": [
                {
                    "slug": {
                        "current": "heading",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "db885c79e4e7",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The micro:bit has a compass sensor that can measure its heading or bearing from magnetic North in degrees:",
                                    "_key": "237ef7699b87",
                                    "_type": "span"
                                }
                            ]
                        },
                        {
                            "asset": {
                                "_ref": "image-cf06d948b591b9d8822ba0b3fdbb8a7eafeef15e-1273x1017-png",
                                "_type": "reference"
                            },
                            "_type": "simpleImage",
                            "alt": "Diagram of a compass rose and micro:bit showing that bearings are measured from the top of the micro:bit clockwise when held flat",
                            "_key": "71795d8fd9a3"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.scroll(compass.heading())\n",
                            "_key": "8a450c2edf94"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "ad3c0380cff7",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The first time you use the compass you may be asked to calibrate it by playing a little game. â€˜TILT TO FILL SCREENâ€™ scrolls across the display. Tilt the micro:bit until every LED light is lit, and then a happy face appears. This ensures the compass gives accurate readings. You can also make your program calibrate the compass every time it runs:",
                                    "_key": "b82ed3e109bc"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "d0347807b973",
                            "_type": "python",
                            "main": "from microbit import *\n\n\ncompass.calibrate()"
                        }
                    ],
                    "name": "Heading"
                },
                {
                    "content": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can use the compass as a magnetometer, to measure the strength of magnetic fields. It can do this in 3 dimensions, and also measure overall strength of magnetic fields in all dimensions at once.",
                                    "_key": "0d7b463c1c33"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "39fef9d4a0cb",
                            "markDefs": []
                        },
                        {
                            "alt": "micro:bit showing X axis going across the front, Y axis going down and up, Z axis going back to front",
                            "_key": "d0c9bd440a58",
                            "asset": {
                                "_ref": "image-27191bef107a45c1fc9848c3222464505ac1d993-847x804-png",
                                "_type": "reference"
                            },
                            "_type": "simpleImage"
                        }
                    ],
                    "alternativesLabel": "Select dimension:",
                    "alternatives": [
                        {
                            "content": [
                                {
                                    "main": "from microbit import *\n\nmagnet_strength_x = compass.get_x()\ndisplay.scroll(magnet_strength_x)",
                                    "_key": "887a3492097b",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "x",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "x",
                            "_key": "6b9e16d3cf31"
                        },
                        {
                            "name": "y",
                            "_key": "84f817330876",
                            "content": [
                                {
                                    "main": "from microbit import *\n\nmagnet_strength_y = compass.get_y()\ndisplay.scroll(magnet_strength_y)",
                                    "_key": "4b46fcf6a7e2",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "y",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "name": "z",
                            "_key": "eb959117f613",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\nmagnet_strength_z = compass.get_z()\ndisplay.scroll(magnet_strength_z)",
                                    "_key": "c4ed18bbce8b"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "z"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_key": "8470ce7e11a1",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\nmagnet_strength_all = compass.get_field_strength()\ndisplay.scroll(magnet_strength_all)",
                                    "_key": "3a041b7bffb8"
                                }
                            ],
                            "slug": {
                                "current": "overall-strength",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "overall strength"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "0e278c24e739",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The compass measures magnetic field strength in units called nanoteslas (nT). Readings can be positive or negative, depending on the direction of the magnetic field.",
                                    "_key": "a3587c5bafb0"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": "Magnetic field strength",
                    "slug": {
                        "current": "magnetic-field-strength",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                }
            ],
            "name": "Compass"
        },
        {
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Play music, speech and other sounds",
            "image": {
                "asset": {
                    "_type": "reference",
                    "_ref": "image-312e12b67224075c1cdd717013d8dd5c8e6b784f-144x144-svg"
                },
                "_type": "image"
            },
            "introduction": [
                {
                    "markDefs": [
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "pins"
                            },
                            "targetType": "toolkitTopic",
                            "reference": {
                                "_ref": "fd17d39b-948f-43de-b39d-989dbfd7b6c1",
                                "_type": "reference"
                            },
                            "_type": "toolkitInternalLink",
                            "_key": "ee5c47ebcdc0"
                        }
                    ],
                    "children": [
                        {
                            "text": "The micro:bit can play tunes and even speak. The V2 micro:bit has a built-in speaker, and you can attach headphones or an amplified speaker to any micro:bitâ€™s 0 and GND ",
                            "_key": "a3a35f98a5e0",
                            "_type": "span",
                            "marks": []
                        },
                        {
                            "_key": "12aa32203342",
                            "_type": "span",
                            "marks": [
                                "ee5c47ebcdc0"
                            ],
                            "text": "pins"
                        },
                        {
                            "_type": "span",
                            "marks": [],
                            "text": ". You need to ",
                            "_key": "df1e7f72cb79"
                        },
                        {
                            "_key": "bfcce1d03e1d",
                            "_type": "span",
                            "marks": [
                                "code"
                            ],
                            "text": "import music"
                        },
                        {
                            "_type": "span",
                            "marks": [],
                            "text": " near the start of your program to use the music features.",
                            "_key": "84bcded89c56"
                        }
                    ],
                    "_type": "block",
                    "style": "normal",
                    "_key": "24aeeff8f321"
                }
            ],
            "contents": [
                {
                    "alternatives": [
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.BA_DING)",
                                    "_key": "df6b7ab18806"
                                }
                            ],
                            "slug": {
                                "current": "bading",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "BA_DING",
                            "_key": "c8aaef302be4"
                        },
                        {
                            "_key": "55b91a426e0c",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.BADDY)",
                                    "_key": "828a512e5579"
                                }
                            ],
                            "slug": {
                                "current": "baddy",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "BADDY"
                        },
                        {
                            "_key": "aa046d39f752",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.BIRTHDAY)",
                                    "_key": "63cf86de9974"
                                }
                            ],
                            "slug": {
                                "current": "birthday",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "BIRTHDAY"
                        },
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "blues"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "BLUES",
                            "_key": "45873617d989",
                            "content": [
                                {
                                    "_key": "96202032f518",
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.BLUES)"
                                }
                            ]
                        },
                        {
                            "_key": "6b28ff6d669b",
                            "content": [
                                {
                                    "main": "import music\n\n\nmusic.play(music.CHASE)",
                                    "_key": "2419663e8aaf",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "chase",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "CHASE"
                        },
                        {
                            "_key": "6670f6f87fab",
                            "content": [
                                {
                                    "_key": "3f9abbf20bba",
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.DADADADUM)"
                                }
                            ],
                            "slug": {
                                "current": "dadadadum",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "DADADADUM"
                        },
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "entertainer"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "ENTERTAINER",
                            "_key": "789b4afd081b",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.ENTERTAINER)",
                                    "_key": "49000b92357b"
                                }
                            ]
                        },
                        {
                            "content": [
                                {
                                    "_key": "d22f7c67ecab",
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.FUNERAL)"
                                }
                            ],
                            "slug": {
                                "current": "funeral",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "FUNERAL",
                            "_key": "65df25901e1c"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "FUNK",
                            "_key": "c5805dc7fe00",
                            "content": [
                                {
                                    "main": "import music\n\n\nmusic.play(music.FUNK)",
                                    "_key": "91cb39bf9c0c",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "funk"
                            }
                        },
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.JUMP_DOWN)",
                                    "_key": "5060a10ccfb6"
                                }
                            ],
                            "slug": {
                                "current": "jumpdown",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "JUMP_DOWN",
                            "_key": "50bd115ea593"
                        },
                        {
                            "name": "JUMP_UP",
                            "_key": "b7bc5939c13a",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.JUMP_UP)",
                                    "_key": "31dffa32c67b"
                                }
                            ],
                            "slug": {
                                "current": "jumpup",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "NYAN",
                            "_key": "4fb615d8476c",
                            "content": [
                                {
                                    "_key": "ab9b743c9719",
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.NYAN)"
                                }
                            ],
                            "slug": {
                                "current": "nyan",
                                "_type": "slug"
                            }
                        },
                        {
                            "name": "ODE",
                            "_key": "9355df14aa8c",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.ODE)",
                                    "_key": "b057629b68d1"
                                }
                            ],
                            "slug": {
                                "current": "ode",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "content": [
                                {
                                    "main": "import music\n\n\nmusic.play(music.POWER_DOWN)",
                                    "_key": "91c01730854b",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "powerdown",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "POWER_DOWN",
                            "_key": "57dbd2a69369"
                        },
                        {
                            "name": "POWER_UP",
                            "_key": "af7aabf351e4",
                            "content": [
                                {
                                    "_key": "2215d31872e9",
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.POWER_UP)"
                                }
                            ],
                            "slug": {
                                "current": "powerup",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.PRELUDE)",
                                    "_key": "475a74d2160c"
                                }
                            ],
                            "slug": {
                                "current": "prelude",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "PRELUDE",
                            "_key": "789b344a7dc5"
                        },
                        {
                            "slug": {
                                "current": "punchline",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "PUNCHLINE",
                            "_key": "10058a2ece60",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.PUNCHLINE)",
                                    "_key": "19ff3d0ffaa4"
                                }
                            ]
                        },
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "python"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "PYTHON",
                            "_key": "4b64183411fb",
                            "content": [
                                {
                                    "_key": "f13e11b1dbbf",
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.PYTHON)"
                                }
                            ]
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "RINGTONE",
                            "_key": "e5d4b20d7068",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.RINGTONE)",
                                    "_key": "a6ffbe21d3d4"
                                }
                            ],
                            "slug": {
                                "current": "ringtone",
                                "_type": "slug"
                            }
                        },
                        {
                            "name": "WAWAWAWAA",
                            "_key": "df839602bb2e",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "import music\n\n\nmusic.play(music.WAWAWAWAA)",
                                    "_key": "7156e8e5d145"
                                }
                            ],
                            "slug": {
                                "current": "wawawawaa",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "content": [
                                {
                                    "main": "import music\n\n\nmusic.play(music.WEDDING)",
                                    "_key": "21421e2db774",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "wedding",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "WEDDING",
                            "_key": "c8fe016edd5f"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "a6ecbe1581ce",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The micro:bit will wait until the tune has finished playing before carrying out the next instruction in your code. If you want something to happen while the music is still playing, add ",
                                    "_key": "7c24c182f78e"
                                },
                                {
                                    "text": "wait=False",
                                    "_key": "73c59f8aff5c",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ":",
                                    "_key": "27b61a2490e6"
                                }
                            ]
                        },
                        {
                            "main": "from microbit import *\nimport music\n\n\nmusic.play(music.PYTHON, wait=False)\ndisplay.show(Image.SNAKE)",
                            "_key": "520a5e9605af",
                            "_type": "python"
                        }
                    ],
                    "name": "Built-in music",
                    "slug": {
                        "_type": "slug",
                        "current": "builtin-music"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "alternativesLabel": "Select tune:"
                },
                {
                    "name": "Tempo",
                    "slug": {
                        "current": "tempo",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "8785d57d4654",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can set the tempo, or speed, of music played by the micro:bit: ",
                                    "_key": "b1080f68fdfc"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_key": "d62fee1d9bac",
                            "_type": "python",
                            "main": "import music\n\n\nmusic.set_tempo(bpm=120)"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "fd089de4cc3e",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Tempo is measured in bpm, beats per minute. Numbers lower than 120 are slower than normal, higher than 120 are faster.",
                                    "_key": "6835baf63140"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ]
                },
                {
                    "name": "Play notes",
                    "slug": {
                        "_type": "slug",
                        "current": "play-notes"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "text": "You can use musical notation to play tunes:",
                                    "_key": "036b5d98c35c",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "72b1dfc468e7",
                            "markDefs": []
                        },
                        {
                            "_type": "python",
                            "main": "import music\n\n\nmusic.play(['c', 'd', 'e', 'c'])",
                            "_key": "141853e05e66"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "7cfa833752e1",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "By default it plays notes in the 4th octave. You can specify other octaves.",
                                    "_key": "dd833fe1bdc50",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "902b47e10457",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "8025c1f6b8b00",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example plays the notes C, D, E, C in the 3rd octave:"
                                }
                            ]
                        },
                        {
                            "_key": "2c5aea61455b",
                            "_type": "python",
                            "main": "from microbit import *\nimport music\n \nmusic.play(['c3', 'd3', 'e3', 'c3'])"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "ea94b3689cab",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "fc8baac7d14f",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can choose how long each note plays using a colon and number after the note name. Here the note G4 plays for twice as long as the other notes:"
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "import music\n\n\nmusic.play(['e4:4', 'f4:4', 'g4:8'])",
                            "_key": "18569e13cd03"
                        },
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Rests can be added using the note name 'r' for any duration you specify.",
                                    "_key": "dd0d2bdb920f"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "0e0208dee11e",
                            "markDefs": []
                        },
                        {
                            "_key": "3426dfcd4122",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "00d0490536fd",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can use flat notes by adding â€˜bâ€™ to the note name and sharp notes with â€˜#â€™. This plays A flat, A natural and A sharp:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "main": "import music\n\n\nmusic.play(['ab', 'a', 'a#'])",
                            "_key": "47fa35788956",
                            "_type": "python"
                        }
                    ]
                },
                {
                    "slug": {
                        "current": "pitch",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "c87550f4bd15",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The micro:bit can play sounds defined by frequency or pitch:",
                                    "_key": "513bad8055c2"
                                }
                            ]
                        },
                        {
                            "main": "import music\n\n\nmusic.pitch(440)",
                            "_key": "ca0e1ceb5ae7",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This will play a note at 440Hz (the note A).",
                                    "_key": "385f6ab85580",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "23bd904fb256"
                        },
                        {
                            "style": "normal",
                            "_key": "c16121e1960a",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The sound will continue playing until you change or stop it:",
                                    "_key": "04f62c9b3106"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "d0e3d25283db",
                            "_type": "python",
                            "main": "import music\n\n\nmusic.stop()"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example produces a sound like a siren rising from 100 Hz to 1000 Hz:",
                                    "_key": "e6e7f069458b"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "ad7dcb185611"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\nimport music\n\n\nfor p in range(100,1000):\n    music.pitch(p)\n    sleep(5)\nmusic.stop()",
                            "_key": "6740b42fa83d"
                        }
                    ],
                    "name": "Pitch"
                },
                {
                    "name": "Speech",
                    "slug": {
                        "current": "speech",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "c667622b7740",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "f8c1967b3d34",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can make your micro:bit speak using Python:"
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "import speech\n\n\nspeech.say('Hello, world. How are you?')",
                            "_key": "9dc887ba808e"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Add pauses with a dash (",
                                    "_key": "d1072061b777"
                                },
                                {
                                    "text": "-",
                                    "_key": "0f2c4b8583dd",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "), a longer pause with a comma (",
                                    "_key": "ef98e2e3bd50"
                                },
                                {
                                    "_key": "31ab2ccd12c0",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": ","
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ") and change the inflection using full stops (",
                                    "_key": "4bccb37fc57e"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": ".",
                                    "_key": "a699b6284fad"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ") and question marks (",
                                    "_key": "f59a414bdba3"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "?",
                                    "_key": "4662389e4f8e"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ").",
                                    "_key": "eb47107c900f"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "67777a91b42b",
                            "markDefs": []
                        },
                        {
                            "markDefs": [
                                {
                                    "_type": "toolkitApiLink",
                                    "name": "speech",
                                    "_key": "e8ef0442145c"
                                }
                            ],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [
                                        "e8ef0442145c"
                                    ],
                                    "text": "Read the full documentation",
                                    "_key": "5686052b82cd"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to discover more about how to use speech, create different voices and even make your micro:bit sing.",
                                    "_key": "b0543c2be34d"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "7d364910e15b"
                        }
                    ]
                },
                {
                    "alternatives": [
                        {
                            "slug": {
                                "current": "giggle",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "giggle",
                            "_key": "b48fa910d634",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\naudio.play(Sound.GIGGLE)",
                                    "_key": "e68acd25a2ee"
                                }
                            ]
                        },
                        {
                            "_key": "6805f774376d",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\naudio.play(Sound.HAPPY)",
                                    "_key": "e6bb89dd57ed"
                                }
                            ],
                            "slug": {
                                "current": "happy",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "happy"
                        },
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "hello"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "hello",
                            "_key": "336b85888a1b",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\naudio.play(Sound.HELLO)",
                                    "_key": "a8d97570a6e6"
                                }
                            ]
                        },
                        {
                            "slug": {
                                "current": "mysterious",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "mysterious",
                            "_key": "5fa04d293e6f",
                            "content": [
                                {
                                    "main": "from microbit import *\n\n\naudio.play(Sound.MYSTERIOUS)",
                                    "_key": "896216435f59",
                                    "_type": "python"
                                }
                            ]
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "sad",
                            "_key": "607acf9c2e2c",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\naudio.play(Sound.SAD)",
                                    "_key": "8e7889ba9858"
                                }
                            ],
                            "slug": {
                                "current": "sad",
                                "_type": "slug"
                            }
                        },
                        {
                            "_key": "81e049615bef",
                            "content": [
                                {
                                    "_key": "96d5fe899c24",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\naudio.play(Sound.SLIDE)"
                                }
                            ],
                            "slug": {
                                "current": "slide",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "slide"
                        },
                        {
                            "name": "soaring",
                            "_key": "fdaa6dc078c2",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\naudio.play(Sound.SOARING)",
                                    "_key": "543912ef28c9"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "soaring"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "spring",
                            "_key": "dc3526065225",
                            "content": [
                                {
                                    "main": "from microbit import *\n\n\naudio.play(Sound.SPRING)",
                                    "_key": "4763eeb1d2e5",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "spring",
                                "_type": "slug"
                            }
                        },
                        {
                            "_key": "ad3ef7ea49c1",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\naudio.play(Sound.TWINKLE)",
                                    "_key": "f32a43de7120"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "twinkle"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "twinkle"
                        },
                        {
                            "name": "yawn",
                            "_key": "25b8caa690cd",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\naudio.play(Sound.YAWN)",
                                    "_key": "8bc55bbd7682"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "yawn"
                            },
                            "_type": "toolkitAlternativeContent"
                        }
                    ],
                    "name": "Expressive sounds",
                    "slug": {
                        "current": "expressive-sounds",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "396fd2967318",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The micro:bit V2 with built-in speaker can also make some expressive sounds to add personality to your projects.",
                                    "_key": "c19b104ae14c"
                                }
                            ]
                        }
                    ],
                    "alternativesLabel": "Select sound:"
                },
                {
                    "slug": {
                        "current": "volume",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "bd395f1d8279",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can adjust the volume of the micro:bit V2â€™s audio output using numbers in the range 0 to 255:",
                                    "_key": "6e250f890e75",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "194574bf5a35",
                            "_type": "python",
                            "main": "from microbit import *\n\n\nset_volume(128)"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Adjusting the volume affects both the speaker and audio output from the pins. This feature only works on the micro:bit V2. ",
                                    "_key": "f983e9cd87ae"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "4aa32f508536"
                        }
                    ],
                    "name": "Volume"
                },
                {
                    "slug": {
                        "current": "turn-the-speaker-off",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "59b7d4ead581",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "efe759a41754",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Mute the V2 micro:bitâ€™s built-in speaker, but still have sound available on the pins for headphones:"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "main": "from microbit import *\n\n\nspeaker.off()",
                            "_key": "5f498b67f301",
                            "_type": "python"
                        },
                        {
                            "children": [
                                {
                                    "_key": "1be74c206a27",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Turn the speaker back on:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "f25836a88f96",
                            "markDefs": []
                        },
                        {
                            "main": "from microbit import *\n\n\nspeaker.on()",
                            "_key": "9b9ce9b4976f",
                            "_type": "python"
                        }
                    ],
                    "name": "Turn the speaker off"
                }
            ],
            "name": "Sound",
            "slug": {
                "_type": "slug",
                "current": "sound"
            }
        },
        {
            "contents": [
                {
                    "slug": {
                        "_type": "slug",
                        "current": "sound-events"
                    },
                    "compatibility": [
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The micro:bit can react to quiet or loud sound events:",
                                    "_key": "7ba7fff4842d"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "78c0a1d66821"
                        },
                        {
                            "main": "from microbit import *\n\n\nwhile True:\n    if microphone.current_event() == SoundEvent.LOUD:\n        display.show(Image.HAPPY)\n    elif microphone.current_event() == SoundEvent.QUIET:\n        display.show(Image.ASLEEP)",
                            "_key": "ecc5c6dafdde",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "5149d7e96141",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can set the threshold for loud or quiet events using numbers in the range 0-255.",
                                    "_key": "984332bf2b47"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\nmicrophone.set_threshold(SoundEvent.LOUD, 200)\nmicrophone.set_threshold(SoundEvent.QUIET, 1)",
                            "_key": "b738b853c756"
                        }
                    ],
                    "name": "Sound events"
                },
                {
                    "compatibility": [
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "text": "The microphone can measure sound levels in a range from 0 to 255, with 0 being the quietest and 255 the loudest:",
                                    "_key": "02367814dc6b",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "840eb85bc7f2",
                            "markDefs": []
                        },
                        {
                            "main": "from microbit import *\n\n\ndisplay.scroll(microphone.sound_level())",
                            "_key": "4a5ca804626d",
                            "_type": "python"
                        }
                    ],
                    "name": "Measuring sound levels",
                    "slug": {
                        "_type": "slug",
                        "current": "measuring-sound-levels"
                    }
                }
            ],
            "name": " Microphone",
            "slug": {
                "_type": "slug",
                "current": "microphone"
            },
            "compatibility": [
                "microbitV2"
            ],
            "subtitle": "Measure and react to sound levels",
            "image": {
                "asset": {
                    "_ref": "image-cf32575676628fab956b436797eb94833df5ea42-144x144-svg",
                    "_type": "reference"
                },
                "_type": "image"
            },
            "introduction": [
                {
                    "alt": "Diagram of the microphone on the front and back of the V2 micro:bit.",
                    "halfWidth": false,
                    "_key": "e948591c01ea",
                    "asset": {
                        "_ref": "image-1981683ecc7d260ad5330f36f98807d702150252-1176x512-png",
                        "_type": "reference"
                    },
                    "_type": "simpleImage"
                },
                {
                    "_key": "d135c6427eb2",
                    "markDefs": [],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "The micro:bit V2 has a built-in microphone. It's situated on the back of the micro:bit, and thereâ€™s a hole on the front to the right of the touch logo to let the sound in. Thereâ€™s also a microphone LED on the front that lights up when the microphone is in use.",
                            "_key": "021f50d6c18d"
                        }
                    ],
                    "_type": "block",
                    "style": "normal"
                },
                {
                    "_type": "block",
                    "style": "normal",
                    "_key": "9606c54d193e",
                    "markDefs": [],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "",
                            "_key": "502113fc4c690"
                        }
                    ]
                }
            ]
        },
        {
            "compatibility": [
                "microbitV2"
            ],
            "subtitle": "Use the gold logo as an extra button",
            "image": {
                "asset": {
                    "_ref": "image-89dba1315f0d25502fca43a5928d62f3e63f069e-144x144-svg",
                    "_type": "reference"
                },
                "_type": "image"
            },
            "contents": [
                {
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The micro:bit V2 has a gold logo on the front that you can use as an extra button when you touch it:",
                                    "_key": "6670e3367fe0",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "b37c057b772f"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\nwhile True:\n    if pin_logo.is_touched():\n        display.show(Image.HAPPY)",
                            "_key": "396fdfc2baa6"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "text": "By default the touch logo on the micro:bit V2 uses ",
                                    "_key": "f2adbc3b9710",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "capacitive",
                                    "_key": "ffc8e2440ef0"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " touch. This means that, unlike the default ",
                                    "_key": "063f9682921d"
                                },
                                {
                                    "text": "resistive",
                                    "_key": "65e8c428a585",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " touch behaviour of the pins, you can just touch the button with your finger, you donâ€™t also need to hold the GND pin.",
                                    "_key": "6343dd52dfaa"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "775a1a8e2e4d",
                            "markDefs": []
                        },
                        {
                            "markDefs": [
                                {
                                    "_key": "09abae4162d4",
                                    "_type": "toolkitApiLink",
                                    "name": "microbit.MicroBitTouchPin.set_touch_mode"
                                }
                            ],
                            "children": [
                                {
                                    "_key": "dfe8e82a16bf",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "See "
                                },
                                {
                                    "marks": [
                                        "09abae4162d4"
                                    ],
                                    "text": "set_touch_mode",
                                    "_key": "9bc18c9134c3",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": " ",
                                    "_key": "b817325ca9f8"
                                },
                                {
                                    "marks": [],
                                    "text": "in the API documentation for more information.",
                                    "_key": "09ebc094cfbf",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "be0cad4469cf"
                        }
                    ],
                    "name": "Touch logo",
                    "slug": {
                        "current": "touch-logo",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV2"
                    ]
                }
            ],
            "name": "Touch logo",
            "slug": {
                "current": "touch-logo",
                "_type": "slug"
            }
        },
        {
            "slug": {
                "_type": "slug",
                "current": "data-logging"
            },
            "compatibility": [
                "microbitV2"
            ],
            "subtitle": "Log sensor data on your micro:bit",
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-d771c0c4fb8768db93eb9f6b6b4397146b44b145-144x144-svg",
                    "_type": "reference"
                }
            },
            "introduction": [
                {
                    "style": "normal",
                    "_key": "f0efda0b2f0b",
                    "markDefs": [],
                    "children": [
                        {
                            "marks": [],
                            "text": "The micro:bit V2 can log sensor data to a file on the micro:bit. After logging your data, plug the micro:bit into a computer and open ",
                            "_key": "dfe6f5ef98da",
                            "_type": "span"
                        },
                        {
                            "text": "MY_DATA.HTM",
                            "_key": "1c3077596528",
                            "_type": "span",
                            "marks": [
                                "code"
                            ]
                        },
                        {
                            "text": " on the MICROBIT drive to view your data in a web browser, or download it as a CSV file for use in a spreadsheet.",
                            "_key": "a17149b5303b",
                            "_type": "span",
                            "marks": []
                        }
                    ],
                    "_type": "block"
                }
            ],
            "contents": [
                {
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "8b62e9cc2560",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example will create three column headings titled ",
                                    "_key": "b7194bb46d850"
                                },
                                {
                                    "_key": "18442431aecf",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "temperature"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", ",
                                    "_key": "c674c890d65f"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "sound",
                                    "_key": "42cb5b70ed27",
                                    "_type": "span"
                                },
                                {
                                    "_key": "3396c4382568",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " and "
                                },
                                {
                                    "text": "light",
                                    "_key": "24d603b6b79a",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ".",
                                    "_key": "d9538b86aa3e"
                                }
                            ]
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The first column in your log holds the timestamp and will be added to every row of data. You can set the format of the timestamp when you set your column labels to ",
                                    "_key": "07c6bef73af5"
                                },
                                {
                                    "text": "MILLISECONDS",
                                    "_key": "bb9e7282dcfb",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "text": ", ",
                                    "_key": "2f2d92d7333b",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "SECONDS",
                                    "_key": "4c14007a5ede",
                                    "_type": "span"
                                },
                                {
                                    "_key": "88fc63eab625",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "MINUTES",
                                    "_key": "0862bd89f6e3"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", ",
                                    "_key": "21fef8cb1eaf"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "HOURS",
                                    "_key": "b07e71ca84dc"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", ",
                                    "_key": "134575f8bf47"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "DAYS",
                                    "_key": "17af02c4ad4e"
                                },
                                {
                                    "_key": "d39c11c04cff",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " or "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "NONE",
                                    "_key": "b3e7b9bdf408"
                                },
                                {
                                    "marks": [],
                                    "text": " if you want to disable the timestamp.",
                                    "_key": "73695975db64",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "f2f75e261fc3"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "This example sets the format to record the time in  'hours':",
                                    "_key": "a74f8e2435b3",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "aa14c72bcff4"
                        },
                        {
                            "main": "import log \n\nlog.set_labels('temperature', 'sound', 'light', timestamp=log.HOURS)",
                            "_key": "cc0a770930b7",
                            "_type": "python"
                        }
                    ],
                    "name": "Set column labels",
                    "slug": {
                        "current": "set-column-labels",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "To set up data logging, you need to provide descriptions for your data. These will appear as the column headings:",
                                    "_key": "c79ebc15345d"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "6f3c7c4899d9"
                        },
                        {
                            "_key": "d016523ce57b",
                            "_type": "python",
                            "main": "from microbit import *\nimport log\n\n\nlog.set_labels('temperature', 'sound', 'light')"
                        }
                    ]
                },
                {
                    "slug": {
                        "current": "log-rows-of-data",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can log data from any of the built-in sensors on your micro:bit:",
                                    "_key": "606e8aa8a2f1",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "214d0954f84a"
                        },
                        {
                            "main": "from microbit import *\nimport log\n\n\nlog.add({\n  'temperature': temperature(),\n  'sound': microphone.sound_level(),\n  'light': display.read_light_level()\n})",
                            "_key": "f3d7318dafd3",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "8d6e20fdac32",
                            "markDefs": [
                                {
                                    "_type": "toolkitInternalLink",
                                    "_key": "2c9fae3e6f44",
                                    "slug": {
                                        "_type": "slug",
                                        "current": "temperature"
                                    },
                                    "targetType": "toolkitTopic",
                                    "reference": {
                                        "_type": "reference",
                                        "_ref": "ba3dc421-bf4c-407b-9eb2-9993ec9ed82e"
                                    }
                                },
                                {
                                    "targetType": "toolkitTopic",
                                    "reference": {
                                        "_type": "reference",
                                        "_ref": "93da3d8f-497e-43f3-ae77-c2e1530b4bc0"
                                    },
                                    "_type": "toolkitInternalLink",
                                    "_key": "7bbf65ace6a4",
                                    "slug": {
                                        "current": "microphone",
                                        "_type": "slug"
                                    }
                                },
                                {
                                    "slug": {
                                        "_type": "slug",
                                        "current": "light-level"
                                    },
                                    "targetType": "toolkitTopic",
                                    "reference": {
                                        "_ref": "7a22d94e-fc54-4f05-8c41-1b6f3097041d",
                                        "_type": "reference"
                                    },
                                    "_type": "toolkitInternalLink",
                                    "_key": "577559feec13"
                                }
                            ],
                            "children": [
                                {
                                    "_key": "2c9ddb1e88d9",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The example above adds an entry to the "
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "temperature",
                                    "_key": "29bc910ac6f8",
                                    "_type": "span"
                                },
                                {
                                    "text": ", ",
                                    "_key": "b6325965815f",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_key": "fd046410c047",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "sound"
                                },
                                {
                                    "marks": [],
                                    "text": " and",
                                    "_key": "5de801ee1b1c",
                                    "_type": "span"
                                },
                                {
                                    "_key": "bac27a7eb25e",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": " light"
                                },
                                {
                                    "text": " columns using values from the ",
                                    "_key": "7159186ad2e9",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_key": "3c147e7bbcac",
                                    "_type": "span",
                                    "marks": [
                                        "2c9fae3e6f44"
                                    ],
                                    "text": "temperature sensor"
                                },
                                {
                                    "_key": "53d32e40994d",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", the "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "7bbf65ace6a4"
                                    ],
                                    "text": "microphone",
                                    "_key": "f8dac40b01af"
                                },
                                {
                                    "_key": "bad5151558d6",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " and the "
                                },
                                {
                                    "_key": "c8dc8213e92f",
                                    "_type": "span",
                                    "marks": [
                                        "577559feec13"
                                    ],
                                    "text": "light level sensor"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ".",
                                    "_key": "1d2d917d7b04"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The headings and values are passed to ",
                                    "_key": "70e68ca37f6b",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "log.add()",
                                    "_key": "4d91a717b840"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " using a dictionary.",
                                    "_key": "abf52e62e550"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "f27fe962f398"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "A ",
                                    "_key": "3532f227dac00"
                                },
                                {
                                    "text": "dictionary",
                                    "_key": "71936ab04d93",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ]
                                },
                                {
                                    "text": " is a data structure that consists of key:value pairs inside curly brackets ",
                                    "_key": "c07903869ee0",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "{}",
                                    "_key": "3cac432b3db5"
                                },
                                {
                                    "marks": [],
                                    "text": ". Each entry contains the label and the value associated with it.",
                                    "_key": "eea31a90e29b",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "b3ec1675f6f0"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "ba052ad6a4ef",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Instead of using dictionary values, you can alternatively use ",
                                    "_key": "e6d6c2b02954",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "keyword arguments",
                                    "_key": "0e494a9512b3"
                                },
                                {
                                    "_key": "6fb29cc6cdaf",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " with "
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "log.add()",
                                    "_key": "09a984a7ba6b",
                                    "_type": "span"
                                },
                                {
                                    "_key": "1c22a2e3f017",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ". This example logs the same data:"
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\nimport log\n\n\nlog.add(\n    temperature=temperature(),\n    sound=microphone.sound_level(),\n    light=display.read_light_level()\n)",
                            "_key": "421b987b0339"
                        }
                    ],
                    "name": "Log rows of data"
                },
                {
                    "name": "Schedule log entries",
                    "slug": {
                        "current": "schedule-log-entries",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "04a8e6cda717",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can use a scheduler to log data automatically at regular intervals:",
                                    "_key": "72d5bbf96b63",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "main": "from microbit import *\n\nimport log\n\n@run_every(s=30)\ndef log_data():\n    log.add({\n      'temperature': temperature(),\n      'sound': microphone.sound_level(),\n      'light': display.read_light_level()\n    })\n    \nwhile True:\n    sleep(100000)",
                            "_key": "2b6c55b7548b",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example logs data every 30 seconds.",
                                    "_key": "7ee1055dd8450"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "b88c7f29fc9b",
                            "markDefs": []
                        },
                        {
                            "style": "normal",
                            "_key": "4d856c9e284e",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can use multiple time unit parameters, so for example you could use ",
                                    "_key": "41ec0bf8a344"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "@run_every(h=1, min=20, s=30, ms=50)",
                                    "_key": "086084b6bdc4"
                                },
                                {
                                    "marks": [],
                                    "text": " to log data every 1 hour 20 minutes 30 seconds and 50 ms.",
                                    "_key": "508cf33ad18f",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        }
                    ]
                }
            ],
            "name": "Data logging"
        },
        {
            "subtitle": "Expand your micro:bit",
            "image": {
                "asset": {
                    "_ref": "image-0849928d57a035e9b823d5d3ea6a8891fd44dad0-144x144-svg",
                    "_type": "reference"
                },
                "_type": "image"
            },
            "introduction": [
                {
                    "_type": "block",
                    "style": "normal",
                    "_key": "ac66220bb754",
                    "markDefs": [],
                    "children": [
                        {
                            "marks": [],
                            "text": "The micro:bit has gold pins on its lower edge you can use to connect input and output devices like headphones, LEDs, switches, motors, sensors and other electronic components.",
                            "_key": "6eb4b43ea0bc",
                            "_type": "span"
                        }
                    ]
                },
                {
                    "_type": "block",
                    "style": "normal",
                    "_key": "bd6f7ac15fd9",
                    "markDefs": [
                        {
                            "name": "microbit.pin4",
                            "_key": "2d5eb0317de6",
                            "_type": "toolkitApiLink"
                        }
                    ],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "Pins 0, 1 and 2 are GPIO pins: general purpose input/output. There are ",
                            "_key": "3719efacd18c"
                        },
                        {
                            "_type": "span",
                            "marks": [
                                "2d5eb0317de6"
                            ],
                            "text": "more pins",
                            "_key": "9683feab4e02"
                        },
                        {
                            "_type": "span",
                            "marks": [],
                            "text": " that you can access with an edge-connector or breakout board.",
                            "_key": "1d5b72115f4c"
                        }
                    ]
                }
            ],
            "contents": [
                {
                    "slug": {
                        "current": "sound-on-pins",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "alt": "Diagram showing micro:bit ground pin connected with a crocodile clip lead to the tip of a headphone plug and micro:bit pin 0 connected to the long part of a headphone plug furthest from the tip",
                            "_key": "e8480abee387",
                            "asset": {
                                "_ref": "image-ec82665799acb0b5a79a08039bb5028b8c81ffce-1265x833-png",
                                "_type": "reference"
                            },
                            "_type": "simpleImage"
                        },
                        {
                            "markDefs": [
                                {
                                    "_type": "toolkitInternalLink",
                                    "_key": "b09f5c0f3f73",
                                    "slug": {
                                        "current": "sound",
                                        "_type": "slug"
                                    },
                                    "targetType": "toolkitTopic",
                                    "reference": {
                                        "_type": "reference",
                                        "_ref": "0bdc42c3-7bdd-4291-bc5e-fd4957283578"
                                    }
                                }
                            ],
                            "children": [
                                {
                                    "text": "You can attach headphones or an amplified speaker to hear micro:bit ",
                                    "_key": "22e091647731",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "sound",
                                    "_key": "4b11f84d354e",
                                    "_type": "span",
                                    "marks": [
                                        "b09f5c0f3f73"
                                    ]
                                },
                                {
                                    "text": ". ",
                                    "_key": "e6010d14fca5",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "192bcf7e84cc"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Connect pin 0 to the tip of a normal headphone plug, and connect the GND pin to the long part of the plug to complete the circuit. Sound will come out of just one side of the headphones.",
                                    "_key": "5d2acd4da617"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "f11273a4eb88",
                            "markDefs": []
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "cd0ce6e37384",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "38e75b1583bb",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The sound can be loud, so always test it out with headphones off before wearing them."
                                }
                            ]
                        }
                    ],
                    "name": "Sound on pins"
                },
                {
                    "alternativesLabel": "Select pin:",
                    "alternatives": [
                        {
                            "name": "pin 0",
                            "_key": "1cc31f06db40",
                            "content": [
                                {
                                    "main": "from microbit import *\n\n\nwhile True:\n    if pin0.is_touched():\n        display.show(0)",
                                    "_key": "2f729536e187",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "pin-0",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "pin 1",
                            "_key": "92059dae3d8c",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if pin1.is_touched():\n        display.show(1)",
                                    "_key": "f9795715f89c"
                                }
                            ],
                            "slug": {
                                "current": "pin-1",
                                "_type": "slug"
                            }
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "pin 2",
                            "_key": "c853f866fea3",
                            "content": [
                                {
                                    "_key": "275b316a7ecc",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nwhile True:\n    if pin2.is_touched():\n        display.show(2)"
                                }
                            ],
                            "slug": {
                                "current": "pin-2",
                                "_type": "slug"
                            }
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "c3cb1d3a6317",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "You can connect these pins using crocodile clips to metal foil to make your own switches or game controllers.",
                                    "_key": "37155fca1b7c",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_key": "6535a0675c29",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "By default the pins work in ",
                                    "_key": "3afdc5947b15",
                                    "_type": "span"
                                },
                                {
                                    "text": "resistive",
                                    "_key": "6947d2d9aeef",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ]
                                },
                                {
                                    "text": " touch mode, which means you also need to touch the GND pin as well as pin 0, 1 or 2 to complete a circuit.",
                                    "_key": "7120d952004e",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "style": "normal",
                            "_key": "9dc451b3ebc6",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The pins on the micro:bit V2 can alternatively be made to work in ",
                                    "_key": "853d0424ddd6",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_key": "855585206f56",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "capacitive"
                                },
                                {
                                    "marks": [],
                                    "text": " mode, which means you just need to touch the pin, but not GND as well.",
                                    "_key": "1a71abb8ff00",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "style": "normal",
                            "_key": "ec52799aaeba",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This changes pin 1 to work with capacitive touch:",
                                    "_key": "4d31be8dac3d"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "9b78faca5e59",
                            "_type": "python",
                            "main": "from microbit import *\n\n\npin1.set_touch_mode(pin1.CAPACITIVE)"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "This changes it back to resistive touch:",
                                    "_key": "48a264705b5c",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "4382893c2fd3"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\npin1.set_touch_mode(pin1.RESISTIVE)",
                            "_key": "6aff5dc43594"
                        }
                    ],
                    "name": "Touch pins",
                    "slug": {
                        "_type": "slug",
                        "current": "touch-pins"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "3a7c5ef0805b",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Pins 0, 1 and 2 can work as touch sensors when you also touch the GND pin to complete an electrical circuit:",
                                    "_key": "37155fca1b7c",
                                    "_type": "span"
                                }
                            ]
                        }
                    ]
                },
                {
                    "alternativesLabel": "Select input or output:",
                    "alternatives": [
                        {
                            "content": [
                                {
                                    "_key": "f4b67f490bf8",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "To read the status of digital signals connected to pins 0, 1 or 2:",
                                            "_key": "5cdabb085fee"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_key": "9dc03ed829c2",
                                    "_type": "python",
                                    "main": "pin1.read_digital():"
                                }
                            ],
                            "slug": {
                                "current": "input-read",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "input (read)",
                            "_key": "d548d2f67de6"
                        },
                        {
                            "slug": {
                                "current": "output-write",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "output (write)",
                            "_key": "4aa04b6913b8",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "63afc45837d5",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This will send a digital 1 (on) signal to pin 1:",
                                            "_key": "cbab2b536e7e",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\npin1.write_digital(1)",
                                    "_key": "1518d1685f73"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "This will turn it off:",
                                            "_key": "f2986bd40364",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "1e923354e974"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\npin1.write_digital(0)",
                                    "_key": "2709dcc4a3df"
                                }
                            ]
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "6775da49bf8e",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You could connect a switch or button between the 3v pin and pin 1 and use this to test if the switch is open (0) or closed (1):",
                                    "_key": "66cfcb3b5cfa",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\nwhile True:\n    if pin1.read_digital():\n        display.show(1)\n    else:\n        display.show(0)",
                            "_key": "a89ef48bd080"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "Never connect anything to the pins with a voltage over 3v or you may damage your micro:bit.",
                                    "_key": "22687a5cb951"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "8d8fce4509b2"
                        }
                    ],
                    "name": "Digital input/output",
                    "slug": {
                        "_type": "slug",
                        "current": "digital-input-output"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "06317b5c2bc9",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can use pins 0, 1 and 2 in digital mode. This means they are either on (electricity is flowing through them, represented by the number 1) or off (no electricity is flowing through them, represented by the number 0)."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "403ecf8c45c9"
                        }
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Pins 0, 1 and 2 can work in analogue mode. This means instead of being off or on (0 or 1), they vary in value between 0 and 1023.",
                                    "_key": "7d7d0802feec0",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "b977940c3c1b",
                            "markDefs": []
                        }
                    ],
                    "alternativesLabel": "Select input or output:",
                    "alternatives": [
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "input (read)",
                            "_key": "3261675fbba0",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "680acf1beb33",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "To read the status of analogue signals connected to pins 0, 1 or 2:",
                                            "_key": "e0b3d92601fb0",
                                            "_type": "span"
                                        }
                                    ]
                                },
                                {
                                    "main": "display.scroll(pin1.read_analog())",
                                    "_key": "17b0e5c520da",
                                    "_type": "python"
                                },
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "ea8519aacec9",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "If you attach a wire to the 3V pin and another wire to pin 1 and touch the other ends of the wires across different materials, you can measure how relatively conductive they are. A reading of 1023 would be the most conductive and 0 the least conductive (effectively an insulator).",
                                            "_key": "cbceca8b7577",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ]
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": "Never connect anything to the pins with a voltage over 3v.",
                                            "_key": "95c130d55ba60"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "d0f5ec18c9db"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "input-read"
                            }
                        },
                        {
                            "content": [
                                {
                                    "children": [
                                        {
                                            "text": "This example varies the brightness of an LED connected to pin 1 and GND:",
                                            "_key": "9ef3582450ca",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "2eada49924af",
                                    "markDefs": []
                                },
                                {
                                    "main": "from microbit import *\n\n\nfor i in range(1024):\n    pin1.write_analog(i)\n    sleep(3)",
                                    "_key": "abad3ea888cb",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "output-write",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "output (write)",
                            "_key": "be701276809f"
                        }
                    ],
                    "name": "Analogue input/output",
                    "slug": {
                        "_type": "slug",
                        "current": "analogue-input-output"
                    }
                }
            ],
            "name": "Pins",
            "slug": {
                "current": "pins",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ]
        },
        {
            "introduction": [
                {
                    "_key": "b29d22b7b3bb",
                    "markDefs": [],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "NeoPixels are strips of LEDs that can be programmed individually to change colour and brightness. You can control them in your Python programs by importing the ",
                            "_key": "58f19f7f1be30"
                        },
                        {
                            "marks": [
                                "code"
                            ],
                            "text": "neopixel",
                            "_key": "7b0a46bbfee1",
                            "_type": "span"
                        },
                        {
                            "marks": [],
                            "text": " module.",
                            "_key": "687cfb27a1b8",
                            "_type": "span"
                        }
                    ],
                    "_type": "block",
                    "style": "normal"
                }
            ],
            "contents": [
                {
                    "content": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Initialise NeoPixels with the correct pin and number of pixels (LEDs) for your hardware.",
                                    "_key": "be1e3feae1350"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "d738a65a7061",
                            "markDefs": []
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "If you have a board with a micro:bit edge connector, the documentation for the accessory should tell you which pin the NeoPixel strip is connected to.",
                                    "_key": "f612184c1aba0"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "2c1876414e09"
                        },
                        {
                            "_key": "556bdebc77f3",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "This will set up a strip of 8 NeoPixels controlled from micro:bit pin 0:",
                                    "_key": "4846c1534aee",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\nimport neopixel\n\nnp = neopixel.NeoPixel(pin0, 8)",
                            "_key": "5fcb697e7303"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "6d8faaa3353e",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Note that you can set up and refer to your NeoPixels in your code by a different name. ",
                                    "_key": "7ba1fcdb81e80",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "np",
                                    "_key": "50da0fba0432"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " could be any valid name such as one youâ€™d use for a variable, so not a reserved Python keyword like ",
                                    "_key": "920a0d4d923f"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "if",
                                    "_key": "b85cc3f5f674",
                                    "_type": "span"
                                },
                                {
                                    "_key": "dd5a3a7f6461",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " or "
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "import",
                                    "_key": "04374f79b8cf",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ".",
                                    "_key": "8a1d0ce610df"
                                }
                            ]
                        }
                    ],
                    "name": "Set up your NeoPixels",
                    "slug": {
                        "current": "set-up-your-neopixels",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "To change the colour of an individual NeoPixel, you need to know its position in the strip (starting at 0) and the colour you want as RGB (red, green, blue) values.",
                                    "_key": "117156cd7c770",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "2ef1e481bc9e"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "8d2d05897d92",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "0 means a NeoPixel colour is off, 255 means itâ€™s at its full brightness."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "f6870edc13cc"
                        },
                        {
                            "style": "normal",
                            "_key": "8ad49dc93a9e",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Note that the NeoPixels will not change colour or brightness until you use ",
                                    "_key": "95e7211d230f"
                                },
                                {
                                    "_key": "ba6b19bb0f9e",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "show()"
                                },
                                {
                                    "marks": [],
                                    "text": " in your program.",
                                    "_key": "e5011a6c41bb",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "This code will light the first NeoPixel (0) yellow (mixing red and green light) at 25% brightness (RGB 63, 63, 0):",
                                    "_key": "73c6593173a8",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "b867ed197b0e",
                            "markDefs": []
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\nimport neopixel\n\nnp = neopixel.NeoPixel(pin0, 8)\nnp[0] = (63, 63, 0)\nnp.show()",
                            "_key": "10ad11785c3d"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "NeoPixels can be very bright, so itâ€™s common to use numbers much smaller than 255.Â Also, NeoPixels powered by batteries will appear brighter when the batteries are fresh or fully-charged.",
                                    "_key": "80a618b2624c0",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "da49ffbc78d2"
                        }
                    ],
                    "name": "Light single NeoPixels",
                    "slug": {
                        "_type": "slug",
                        "current": "light-single-neopixels"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "name": "Light all NeoPixels",
                    "slug": {
                        "_type": "slug",
                        "current": "light-all-neopixels"
                    },
                    "compatibility": [
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "be9173fec398",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use ",
                                    "_key": "225ec45f8a780"
                                },
                                {
                                    "text": "fill()",
                                    "_key": "3d42c2101306",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_key": "45f5aca41079",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to light all the NeoPixels with the same colour and brightness."
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "aeeed9f6b317",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "1a7a9fbdda29",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This code lights all 8 NeoPixels blue at 25% brightness (RGB 0, 0, 63):"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\nimport neopixel\n\nnp = neopixel.NeoPixel(pin0, 8)\nnp.fill((0,0,63))\nnp.show()",
                            "_key": "c976743a725d"
                        }
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "7f0472a2ebc7",
                            "markDefs": [
                                {
                                    "targetType": "toolkitTopic",
                                    "slug": {
                                        "_type": "slug",
                                        "current": "loops"
                                    },
                                    "reference": {
                                        "_ref": "c12b474c-848e-4ddd-9d9b-fa3e9b3bbb99",
                                        "_type": "reference"
                                    },
                                    "_type": "toolkitInternalLink",
                                    "_key": "7b8e4461905d"
                                }
                            ],
                            "children": [
                                {
                                    "_key": "9e098693ed0c0",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can use "
                                },
                                {
                                    "text": "loops",
                                    "_key": "448cfc2840f6",
                                    "_type": "span",
                                    "marks": [
                                        "7b8e4461905d"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to light several NeoPixels using the same block of code.",
                                    "_key": "5d743ca356ff"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This code will light 8 pixels one second after another, mixing red and blue to make the colour purple (RGB 127, 0, 127) at 50% brightness:",
                                    "_key": "8e5a92672438"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "0b502ee7968e"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\nimport neopixel\n\nnp = neopixel.NeoPixel(pin0, 8)\nfor pixel_id in range(len(np)):\n    np[pixel_id] = (127, 0, 127)\n    np.show()\n    sleep(1000)",
                            "_key": "73719df43f08"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "c55093dbc963",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Note that ",
                                    "_key": "c59e662e7a5d0"
                                },
                                {
                                    "_key": "99e23e7a94c5",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "len(np)"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " is the length of the NeoPixel strip set when it was initialised with ",
                                    "_key": "acdaaba0c99d"
                                },
                                {
                                    "text": "np = neopixel.NeoPixel(pin0, 8)",
                                    "_key": "b6ec93cd8af0",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "26a8e0ce5d23",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Using ",
                                    "_key": "0d44dffdee2e",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "len(np)",
                                    "_key": "6fc95c8d6e68",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " means you donâ€™t have to remember the length of the NeoPixel strip when writing code, and means your code will also work with NeoPixel strips of different lengths.",
                                    "_key": "90bfa5824e5b"
                                }
                            ]
                        },
                        {
                            "_key": "fd756c72ecd2",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This example repeatedly displays random colours on 8 NeoPixels controlled from pin 0:",
                                    "_key": "897c62a7a83b",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\nimport neopixel\nfrom random import randint\n\n# Setup the Neopixel strip on pin0 with a length of 8 pixels\nnp = neopixel.NeoPixel(pin0, 8)\n\nwhile True:\n    # Iterate over each LED in the strip\n    for pixel_id in range(0, len(np)):\n        red = randint(0, 60)\n        green = randint(0, 60)\n        blue = randint(0, 60)\n\n        # Assign the current LED a random red, green and blue value between 0 and 60\n        np[pixel_id] = (red, green, blue)\n\n        # Display the current pixel data on the Neopixel strip\n        np.show()\n        sleep(100)",
                            "_key": "2188db8c5148"
                        }
                    ],
                    "name": "Light several NeoPixels",
                    "slug": {
                        "current": "light-several-neopixels",
                        "_type": "slug"
                    }
                },
                {
                    "name": "Clear NeoPixels",
                    "slug": {
                        "current": "clear-neopixels",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can turn all the NeoPixels off using ",
                                    "_key": "8cee29b4ab080",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "clear()",
                                    "_key": "54e9fec19323"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "3ffc7dbee869"
                        },
                        {
                            "children": [
                                {
                                    "_key": "c9979d409471",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This code lights the first 5 LEDs green at 25% brightness (RGB 0, 63, 0) and then switches them all off:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "1dbd5da0c40b",
                            "markDefs": []
                        },
                        {
                            "_key": "0de1c41f243c",
                            "_type": "python",
                            "main": "from microbit import *\nimport neopixel\n\nnp = neopixel.NeoPixel(pin0, 8)\nfor pixel_id in range(5):\n    np[pixel_id] = (0, 63, 0)\n    np.show()\n    sleep(1000)\n\nnp.clear()"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "3cb453710757",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can turn individual NeoPixels off by setting their RGB values to 0.",
                                    "_key": "a27209e93cdf0",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This code lights the first 5 NeoPixels, then switches off the middle one at position 2:",
                                    "_key": "feb12198a0d5"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "f2df1721064a",
                            "markDefs": []
                        },
                        {
                            "_key": "e3fcc76d29df",
                            "_type": "python",
                            "main": "from microbit import *\nimport neopixel\n\nnp = neopixel.NeoPixel(pin0, 8)\nfor pixel_id in range(5):\n    np[pixel_id] = (0, 63, 0)\n    np.show()\n    sleep(1000)\n\nnp[2] = (0, 0, 0)\nnp.show()"
                        }
                    ]
                }
            ],
            "name": "NeoPixels",
            "slug": {
                "current": "neopixels",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Colourful LED strips",
            "image": {
                "asset": {
                    "_type": "reference",
                    "_ref": "image-6b7c05790bab8c1f7c9663bfa330dcf71fb22464-144x144-svg"
                },
                "_type": "image"
            }
        },
        {
            "name": "Data types",
            "slug": {
                "current": "data-types",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Ways of storing different data in Python",
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-d93ac281c0a4ee4f205b534f529574fe62a49223-144x144-svg",
                    "_type": "reference"
                }
            },
            "introduction": [
                {
                    "style": "normal",
                    "_key": "9671525123bf",
                    "markDefs": [],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "There are different data types for storing different kinds of information, such as whole numbers, decimals, and text. Sometimes you may need to convert data from one type to another.",
                            "_key": "9bf991f03d60"
                        }
                    ],
                    "_type": "block"
                }
            ],
            "contents": [
                {
                    "slug": {
                        "_type": "slug",
                        "current": "numbers-integers"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "cc30b1e9a9fe",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Integers are whole numbers:",
                                    "_key": "1b1c0d0f48d9",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "a = 23",
                            "_key": "4fb175a36197"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "977fc9c93469",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "d052ce20ca390",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "In Python, you donâ€™t have to declare a variableâ€™s data type when you create it. Python will decide for you. In this example, simply declaring the variable "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "a",
                                    "_key": "21c4c456ace1"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " as a whole number means that ",
                                    "_key": "492a4145bafd"
                                },
                                {
                                    "text": "a",
                                    "_key": "72376b25229f",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "text": " has the ",
                                    "_key": "fd4074eb85f7",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "integer",
                                    "_key": "dc5cb545a643"
                                },
                                {
                                    "marks": [],
                                    "text": " data type.",
                                    "_key": "6803ef726f48",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": "Numbers: integers"
                },
                {
                    "slug": {
                        "current": "numbers-floats",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Floats are floating point numbers, numbers that have decimal places:",
                                    "_key": "f25ece6324f8"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "3931d40c2d61",
                            "markDefs": []
                        },
                        {
                            "_type": "python",
                            "main": "a = 17.42",
                            "_key": "aaaf229a7773"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "d71d976bb0ae",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "In Python, you donâ€™t have to declare a variableâ€™s data type when you create it. Python will decide for you. In this example, simply declaring the variable ",
                                    "_key": "332b32d3736e0",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "a",
                                    "_key": "9944da370a7a"
                                },
                                {
                                    "_key": "a7905e45d843",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " as a  number with decimal places means that it has the "
                                },
                                {
                                    "text": "float",
                                    "_key": "ac3306f2be31",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " data type.",
                                    "_key": "8f1a540450df"
                                }
                            ]
                        }
                    ],
                    "name": " Numbers: floats"
                },
                {
                    "name": "Text data: strings",
                    "slug": {
                        "current": "text-data-strings",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "100abf621172",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Text or symbol data is stored in data types called strings. The content of a string must have quotation marks around it:",
                                    "_key": "4f49eb4dbf28"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\na = 'micro:bit'\ndisplay.scroll(a)",
                            "_key": "a6d55b42094a"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "text": "In Python, you donâ€™t have to declare a variableâ€™s data type when you create it. Python will decide for you. In this example, simply declaring the variable ",
                                    "_key": "63a0a9ddc6df0",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "a",
                                    "_key": "ee65e67c3291",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_key": "5615522ddb5b",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " as characters inside quotation marks means that it has the "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "string",
                                    "_key": "92391191a239"
                                },
                                {
                                    "text": " data type.",
                                    "_key": "0d0499cbce73",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "6f67329567cf",
                            "markDefs": []
                        }
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [
                                        "1d013eda1289"
                                    ],
                                    "text": "Booleans",
                                    "_key": "116be4e0d8fe"
                                },
                                {
                                    "_key": "fb938dfb1ed4",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " can only have two values, "
                                },
                                {
                                    "_key": "49cb87018184",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " or ",
                                    "_key": "bb5dd98c05c9"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "False",
                                    "_key": "fcd5a6a52c08",
                                    "_type": "span"
                                },
                                {
                                    "marks": [],
                                    "text": ":",
                                    "_key": "14351db77659",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "45b9a6d683fd",
                            "markDefs": [
                                {
                                    "_type": "toolkitInternalLink",
                                    "_key": "1d013eda1289",
                                    "reference": {
                                        "_ref": "adc59424-433f-4785-afba-8898be01d1e4",
                                        "_type": "reference"
                                    },
                                    "slug": {
                                        "current": "boolean-variables",
                                        "_type": "slug"
                                    },
                                    "targetType": "toolkitTopicEntry"
                                }
                            ]
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\nlove = True\ndisplay.scroll(love)",
                            "_key": "2bbc70923d64"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "In Python, you donâ€™t have to declare a variableâ€™s data type when you create it. Python will decide for you. In this example, simply declaring the variable ",
                                    "_key": "f7391ffb30620"
                                },
                                {
                                    "_key": "0840652b98be",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "love"
                                },
                                {
                                    "_key": "2067cf6f2a1f",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " as "
                                },
                                {
                                    "_key": "89ff6d82ca2d",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "True"
                                },
                                {
                                    "_key": "018836fd6555",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " means that it has the "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "Boolean",
                                    "_key": "f9900c848071"
                                },
                                {
                                    "text": " data type. Note that True and False must start with capital letters.",
                                    "_key": "f0f21d03a69c",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "3ae29155358b",
                            "markDefs": []
                        }
                    ],
                    "name": "Booleans",
                    "slug": {
                        "_type": "slug",
                        "current": "booleans"
                    }
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "9390c710f7d9",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Sometimes you need to convert data from one type to another. This is also called casting.",
                                    "_key": "b58e7ec839b0",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "alternativesLabel": "Select conversion:",
                    "alternatives": [
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "number-to-string"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "number to string",
                            "_key": "1625eb288781",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "7d8c8b8c587c",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "4302def06a77",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Convert a number (integer or float) to a string using "
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "str()",
                                            "_key": "6bb504f899fa"
                                        },
                                        {
                                            "_key": "8a06078f7dbe",
                                            "_type": "span",
                                            "marks": [],
                                            "text": ":"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\nscore = 17\ndisplay.scroll('Score: ' + str(score))",
                                    "_key": "eee850b12b1a"
                                },
                                {
                                    "style": "normal",
                                    "_key": "5443592a96a3",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "This example converts the integer variable ",
                                            "_key": "e4499dbbe875",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "text": "score",
                                            "_key": "09a83bc176f0",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "marks": [],
                                            "text": " to a string so it can be joined to another string.",
                                            "_key": "ee54f180051d",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block"
                                }
                            ]
                        },
                        {
                            "name": "string to integer",
                            "_key": "2ac5bb87fc6e",
                            "content": [
                                {
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "5bdbebb54cc9",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "int()",
                                            "_key": "c41d1c90abe3"
                                        },
                                        {
                                            "_key": "e1cf70de2917",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to convert strings to integers:"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "fffeb798684a",
                                    "markDefs": []
                                },
                                {
                                    "_key": "cddd19365d85",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\na = '6'\nb = int(a) * 7\ndisplay.scroll(b)"
                                },
                                {
                                    "style": "normal",
                                    "_key": "d914fac42996",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This example turns the string ",
                                            "_key": "465082912905"
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "a",
                                            "_key": "87b95b5a06cb",
                                            "_type": "span"
                                        },
                                        {
                                            "text": " containing â€™6â€™ into an integer so you can perform a mathematical operation on it.",
                                            "_key": "cba6d1c4f5d6",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block"
                                }
                            ],
                            "slug": {
                                "current": "string-to-integer",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "content": [
                                {
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "7bda0f37e5f9",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "float()",
                                            "_key": "0e9602cf68ef"
                                        },
                                        {
                                            "text": " to convert a string to a floating point number with decimals:",
                                            "_key": "9e3c0bd640f9",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "2b078b046e00",
                                    "markDefs": []
                                },
                                {
                                    "main": "a = '6.5'\ndisplay.scroll(float(a) * 2)",
                                    "_key": "c84e9be8ebc3",
                                    "_type": "python"
                                },
                                {
                                    "style": "normal",
                                    "_key": "6893ae235ab1",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This example shows 13.0 on the display.",
                                            "_key": "1319a79d3a1c"
                                        }
                                    ],
                                    "_type": "block"
                                }
                            ],
                            "slug": {
                                "current": "string-to-float",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "string to float",
                            "_key": "7d58bbc89e16"
                        },
                        {
                            "_key": "59da85763834",
                            "content": [
                                {
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "721338d4871d"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "float()",
                                            "_key": "72b4f76aa7cd"
                                        },
                                        {
                                            "text": " to convert an integer to a floating point number:",
                                            "_key": "92ae8690e797",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "e314d014af53",
                                    "markDefs": []
                                },
                                {
                                    "_key": "9b655a36ee1c",
                                    "_type": "python",
                                    "main": "from microbit import *\n\nscore = 17\ndisplay.scroll(float(score))"
                                },
                                {
                                    "_key": "cecd20df5434",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This will show 17.0 on the display.",
                                            "_key": "36355f1501d3",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                }
                            ],
                            "slug": {
                                "current": "integer-to-float",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "integer to float"
                        },
                        {
                            "name": "Boolean to string",
                            "_key": "d47d5fcbabad",
                            "content": [
                                {
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "You can convert a Boolean variable to a text string â€˜Trueâ€™ or â€˜Falseâ€™ using ",
                                            "_key": "d85d00e62181"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "str()",
                                            "_key": "258a76e0b261"
                                        },
                                        {
                                            "text": ":",
                                            "_key": "1a531fd1eaf5",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "93408f93b536",
                                    "markDefs": []
                                },
                                {
                                    "_type": "python",
                                    "main": "running = False\nstatus = str(running)",
                                    "_key": "53655c2d3fb2"
                                },
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "923019cead0f",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "ba490e026cfd",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "The string variable "
                                        },
                                        {
                                            "text": "status",
                                            "_key": "731d86d3bd8a",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "marks": [],
                                            "text": " now contains 'False'.",
                                            "_key": "7e2512b8f30f",
                                            "_type": "span"
                                        }
                                    ]
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "boolean-to-string"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "Boolean to integer",
                            "_key": "947c20e29af6",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "c0bf21f89dcb",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "You can convert Booleans to integers using ",
                                            "_key": "0539fa7cc7e7",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "int()",
                                            "_key": "6dfc5170bae6",
                                            "_type": "span"
                                        },
                                        {
                                            "text": ":",
                                            "_key": "f6519b308c31",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nrunning = True\nstatus = int(running)\ndisplay.scroll(status)",
                                    "_key": "bd865443fbdb"
                                },
                                {
                                    "children": [
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "False",
                                            "_key": "40809027359c",
                                            "_type": "span"
                                        },
                                        {
                                            "text": " becomes 0 and ",
                                            "_key": "8d46c7f4bce8",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "True",
                                            "_key": "2b4a883dafae"
                                        },
                                        {
                                            "marks": [],
                                            "text": " becomes 1. In this example, 1 is displayed.",
                                            "_key": "c8fae97cab17",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "496de4b0e54a",
                                    "markDefs": []
                                }
                            ],
                            "slug": {
                                "current": "boolean-to-integer",
                                "_type": "slug"
                            }
                        }
                    ],
                    "name": " Converting data types",
                    "slug": {
                        "_type": "slug",
                        "current": "converting-data-types"
                    }
                },
                {
                    "name": " Testing data types",
                    "slug": {
                        "_type": "slug",
                        "current": "testing-data-types"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "_key": "0881670e2e98",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can test what data type a variable is with "
                                },
                                {
                                    "text": "type().",
                                    "_key": "3b93943be3c2",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "1cecea4cf382",
                            "markDefs": []
                        }
                    ],
                    "alternativesLabel": "Select data type:",
                    "alternatives": [
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "integer",
                            "_key": "236ca7cdef55",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\na = 23\nif type(a) is int:\n    display.scroll('a is an integer')",
                                    "_key": "d461677a54e7"
                                }
                            ],
                            "slug": {
                                "current": "integer",
                                "_type": "slug"
                            }
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "float",
                            "_key": "eff9582b4d5b",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nb = 17.42\nif type(b) is float:\n    display.scroll('b is a floating point number')",
                                    "_key": "8b2c81cca7c4"
                                }
                            ],
                            "slug": {
                                "current": "float",
                                "_type": "slug"
                            }
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "string",
                            "_key": "282dac65bc21",
                            "content": [
                                {
                                    "_key": "d550ab020ad8",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nc = 'micro:bit'\nif type(c) is str:\n    display.scroll('c is a string')"
                                }
                            ],
                            "slug": {
                                "current": "string",
                                "_type": "slug"
                            }
                        },
                        {
                            "slug": {
                                "current": "boolean",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "Boolean",
                            "_key": "e43cae0acd67",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "84d3827d7be8",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "",
                                            "_key": "cb9920a145dc"
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nd = False\nif type(d) is bool:\n    display.scroll('d is a Boolean')",
                                    "_key": "c131c65c1f5f"
                                }
                            ]
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "7afe5678c00b",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can also display a variableâ€™s data type. This will scroll <class 'int'> on the LED display:",
                                    "_key": "3d62a05d835b",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "_key": "88c98be28018",
                            "_type": "python",
                            "main": "a = 23\ndisplay.scroll(str(type(a)))"
                        }
                    ]
                }
            ]
        },
        {
            "name": " String manipulation",
            "slug": {
                "current": "string-manipulation",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Working with text in Python",
            "image": {
                "_type": "image",
                "asset": {
                    "_type": "reference",
                    "_ref": "image-6fd6b41ab4dc9dcae1d7a45c3c487c774f530ad5-144x144-svg"
                }
            },
            "contents": [
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Join, or concatenate, strings with the + sign:",
                                    "_key": "8b75543676d1"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "f51a4247d2d5",
                            "markDefs": []
                        },
                        {
                            "main": "from microbit import *\n\ndisplay.scroll('hello ' + 'world')",
                            "_key": "21ef3cda1348",
                            "_type": "python"
                        }
                    ],
                    "name": "Joining strings",
                    "slug": {
                        "current": "joining-strings",
                        "_type": "slug"
                    }
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can slice strings using the numerical position of characters, counting from 0.",
                                    "_key": "52ecfd960208"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "14c566b12155"
                        }
                    ],
                    "alternativesLabel": "Slice type:",
                    "alternatives": [
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "range",
                            "_key": "0529072bdbe4",
                            "content": [
                                {
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This prints from character 1 to 3, so â€˜elâ€™ is displayed:",
                                            "_key": "0573002cc392"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "a9e2230e9748",
                                    "markDefs": []
                                },
                                {
                                    "main": "from microbit import *\ndisplay.scroll('hello'[1:3])",
                                    "_key": "de2900fc22b2",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "range",
                                "_type": "slug"
                            }
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "single character",
                            "_key": "966d2de88221",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "42ff4b022c4a",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This will display â€˜hâ€™ because it is the first character in the string, counting from 0:",
                                            "_key": "a2a2223c2a63",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_key": "a987107f77b6",
                                    "_type": "python",
                                    "main": "from microbit import *\n\ndisplay.scroll('hello'[0])"
                                }
                            ],
                            "slug": {
                                "current": "single-character",
                                "_type": "slug"
                            }
                        },
                        {
                            "slug": {
                                "current": "after",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "after",
                            "_key": "761f544e0312",
                            "content": [
                                {
                                    "_key": "39c34f76ae5d",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "This will display everything from character 2 onwards, so â€˜lloâ€™ is shown:",
                                            "_key": "3e75911fa596",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\ndisplay.scroll('hello'[2:])",
                                    "_key": "6262664ba831"
                                }
                            ]
                        },
                        {
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "1fe268c46456",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "2a6a860ecc8f",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This displays everything before character 2, so â€˜heâ€™ is shown:"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\ndisplay.scroll('hello'[:2])",
                                    "_key": "a13c99be8a3d"
                                }
                            ],
                            "slug": {
                                "current": "before",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "before",
                            "_key": "62626c9aa8f1"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_key": "fb20f0f308e30",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can slice string "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "variables",
                                    "_key": "fb20f0f308e31"
                                },
                                {
                                    "_key": "fb20f0f308e32",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " in the same way. This slices the string from character position 1 to 3 and shows â€˜elâ€™:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "bd8d3b11dbab",
                            "markDefs": []
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\nword = 'hello'\ndisplay.scroll(word[1:3])",
                            "_key": "d47a024ea5d3"
                        }
                    ],
                    "name": "Slicing strings",
                    "slug": {
                        "_type": "slug",
                        "current": "slicing-strings"
                    }
                },
                {
                    "content": [
                        {
                            "children": [
                                {
                                    "text": "You can repeat strings by multiplying them:",
                                    "_key": "fdd137fed2c8",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "a84e75b64f8b",
                            "markDefs": []
                        },
                        {
                            "main": "from microbit import *\n\ndisplay.scroll('hello' * 3)",
                            "_key": "2285c4e5c7c0",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "4ac9191bbc2d",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The example above scrolls â€˜helloâ€™ on the LED display 3 times with no spaces.",
                                    "_key": "1698e2ef0d42",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "markDefs": [
                                {
                                    "_type": "toolkitInternalLink",
                                    "_key": "c1e9f23a4d9c",
                                    "slug": {
                                        "current": "open-the-serial-console",
                                        "_type": "slug"
                                    },
                                    "targetType": "toolkitTopicEntry",
                                    "reference": {
                                        "_type": "reference",
                                        "_ref": "ac316d5a-cd2f-455b-af69-6f2107d52828"
                                    }
                                }
                            ],
                            "children": [
                                {
                                    "_key": "c15d971eac9d",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Multiplying strings like this can be useful for printing simple bar charts in the "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "c1e9f23a4d9c"
                                    ],
                                    "text": "serial console",
                                    "_key": "c03bee27ccac"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ":",
                                    "_key": "3bef598d5fc4"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "52c4131faab1"
                        },
                        {
                            "_key": "ab86670d3613",
                            "_type": "python",
                            "main": "from microbit import *\n\n\nwhile True:\n    print('X' * temperature())\n    sleep(1000)"
                        }
                    ],
                    "name": "Multiplying strings",
                    "slug": {
                        "current": "multiplying-strings",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "name": "Replacing parts of strings",
                    "slug": {
                        "current": "replacing-parts-of-strings",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "c765c0f47e51",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Use ",
                                    "_key": "f22d6f68f108",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "replace()",
                                    "_key": "dc8da7d170e7",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to swap out sections of a string by their contents:",
                                    "_key": "5e0ed866e75e"
                                }
                            ]
                        },
                        {
                            "main": "from microbit import *\n\ndisplay.scroll('Hello world'.replace('Hello', 'Hola'))",
                            "_key": "3d9a62bcde83",
                            "_type": "python"
                        },
                        {
                            "style": "normal",
                            "_key": "a76baa82691a",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This shows â€˜Hola worldâ€™.",
                                    "_key": "da2ad34e0338"
                                }
                            ],
                            "_type": "block"
                        }
                    ]
                },
                {
                    "name": "Trimming strings",
                    "slug": {
                        "current": "trimming-strings",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use ",
                                    "_key": "f00b829ea8fe"
                                },
                                {
                                    "_key": "1155edab3a9f",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "strip()"
                                },
                                {
                                    "marks": [],
                                    "text": " to trim characters from the start or end of a string:",
                                    "_key": "e5ecadb2e39b",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "ffbf413d4a0b"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\ndisplay.scroll('wowow'.strip('w'))",
                            "_key": "a116828be64f"
                        },
                        {
                            "style": "normal",
                            "_key": "5928df447c67",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "b3fe380f5cc6",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This removes â€˜wâ€™ from the start and end of the string, so â€˜owoâ€™ is shown."
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "5498fa39b324",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can also use this function to strip out spaces at the start or end of a string. "
                                },
                                {
                                    "_key": "8ce59d48d0a1",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "lstrip()"
                                },
                                {
                                    "text": " and ",
                                    "_key": "cfbd59d73b18",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_key": "528eeb31c4b6",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "rstrip()"
                                },
                                {
                                    "marks": [],
                                    "text": " will also trim spaces from the left or right of a string.",
                                    "_key": "bf6706d90f9a",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "e09837007107"
                        }
                    ]
                },
                {
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "96069b180708",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "len()",
                                    "_key": "d7a6910c7707"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to find the length of a string:",
                                    "_key": "3a167fd26c38"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "323f107e4f8d"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\ndisplay.scroll(len('hello'))",
                            "_key": "30299809b954"
                        },
                        {
                            "_key": "2e41cc76f4c0",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "This shows 5 because the string is 5 characters long.",
                                    "_key": "c8ae31efa12a",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": " Length of a string",
                    "slug": {
                        "current": "length-of-a-string",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "alternativesLabel": "Select conversion:",
                    "alternatives": [
                        {
                            "_key": "bd81abd032cd",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "52e4c83555aa",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This shows â€˜HELLOâ€™:",
                                            "_key": "b4d147572ce6"
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "display.scroll('hello'.upper())",
                                    "_key": "2aba04ed746a"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "upper-case"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "upper case"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "lower case",
                            "_key": "52e80a8e48e9",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "302c4f9d9bc8",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "f79833cd58b2",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "This shows 'hello':"
                                        }
                                    ]
                                },
                                {
                                    "_key": "8fd3932caacb",
                                    "_type": "python",
                                    "main": "from microbit import *\n\ndisplay.scroll('HELLO'.lower())"
                                }
                            ],
                            "slug": {
                                "current": "lower-case",
                                "_type": "slug"
                            }
                        }
                    ],
                    "name": "Convert case",
                    "slug": {
                        "_type": "slug",
                        "current": "convert-case"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "ba17c4d738fb",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can convert strings to upper or lower case."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "4fb198db212d"
                        }
                    ]
                },
                {
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can find where the first and last occurrences of a character (or characters) are.",
                                    "_key": "62a4ca089ddc"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "6bd8658a38b8"
                        }
                    ],
                    "alternativesLabel": "Select location:",
                    "alternatives": [
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "first occurrence",
                            "_key": "295b4e1d28a9",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "61594e2515f7",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "You can locate the position of the first occurrence of a character or set of characters with ",
                                            "_key": "6988261268fc"
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "find()",
                                            "_key": "bdba0059f365",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": ".",
                                            "_key": "c98774401f61"
                                        }
                                    ]
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "1eab3370daa1",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Here 1 is shown, because the first â€˜i' is at character position 1."
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "fb0789f93df9"
                                },
                                {
                                    "_key": "5db8d67632b0",
                                    "_type": "python",
                                    "main": "from microbit import *\n\ndisplay.scroll('micro:bit'.find('i'))"
                                }
                            ],
                            "slug": {
                                "current": "first-occurrence",
                                "_type": "slug"
                            }
                        },
                        {
                            "name": "last occurrence",
                            "_key": "91ce4426ce61",
                            "content": [
                                {
                                    "_key": "f60dd926adf1",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "Use ",
                                            "_key": "a528fc69e056",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "text": "rfind()",
                                            "_key": "d3c72e1522df",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " to find the last occurrence of a character or set of characters.",
                                            "_key": "2e56f4d54e08"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_key": "ddc20ce01d8d",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_key": "6ad19940e034",
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Here 7 is shown, because the last occurrence â€˜iâ€™ is at character position 7:"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_key": "382e78d960b0",
                                    "_type": "python",
                                    "main": "from microbit import *\n\ndisplay.scroll('micro:bit'.rfind('i'))"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "last-occurrence"
                            },
                            "_type": "toolkitAlternativeContent"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "05a272c3773b",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "If nothing is found using ",
                                    "_key": "eb9de4844ce40"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "find()",
                                    "_key": "0868e16fed74"
                                },
                                {
                                    "text": " or ",
                                    "_key": "03eff3792f8b",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "rfind()",
                                    "_key": "74e804f8e7ee",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "text": ", -1 is returned.",
                                    "_key": "c6cdc587dcfc",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "name": "Searching strings",
                    "slug": {
                        "current": "searching-strings",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Use ",
                                    "_key": "51279a11a2970",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": "count()",
                                    "_key": "cca1af8a2e32",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_key": "1ff1d2e3d86e",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to count the number of times a character or set of characters appear in a string:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "8069aee6c9e4"
                        },
                        {
                            "_key": "289186b0879e",
                            "_type": "python",
                            "main": "from microbit import *\n\ndisplay.scroll('micro:bit'.count('i'))\n"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "15447a81222d",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This will show 2 because the letter 'i' occurs twice in 'micro:bit.'",
                                    "_key": "1dd0f967092b"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can also use ",
                                    "_key": "5e9008e5ca8e0",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "count()",
                                    "_key": "d03782edb4fa",
                                    "_type": "span"
                                },
                                {
                                    "_key": "65ec3039d296",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to count the number of times a word appears in a string. This will show 2:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "b7e659f7dd7d"
                        },
                        {
                            "main": "from microbit import *\n\ndisplay.scroll('The rain it raineth every day'.count('rain'))",
                            "_key": "6f6d1051600b",
                            "_type": "python"
                        }
                    ],
                    "name": " Counting occurrences",
                    "slug": {
                        "_type": "slug",
                        "current": "counting-occurrences"
                    }
                },
                {
                    "slug": {
                        "current": "testing-strings",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "d14faac69e90",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can test strings to discover what kind of characters they contain, or if they contain certain characters.",
                                    "_key": "4f1d677be5b8",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "alternativesLabel": "Select test",
                    "alternatives": [
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\nif 'hello'.islower():\n    display.scroll('lower case')",
                                    "_key": "2e6165fb6b36"
                                },
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "",
                                            "_key": "5fb3e10de977"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "5bb3ca8df3b0"
                                }
                            ],
                            "slug": {
                                "current": "lower-case",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "lower case",
                            "_key": "e90f90d9d06b"
                        },
                        {
                            "_key": "a471c8c55e07",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \nif 'HELLO'.isupper():\n    display.scroll('upper case')",
                                    "_key": "b4557ccdd26e"
                                }
                            ],
                            "slug": {
                                "current": "upper-case",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "upper case"
                        },
                        {
                            "content": [
                                {
                                    "main": "from microbit import *\n \nif 'hello'.isalpha():\n    display.scroll('alphabetical')",
                                    "_key": "fb56a941aa74",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "alphabetical",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "alphabetical",
                            "_key": "f92b35337cf5"
                        },
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \nif '42'.isdigit():\n    display.scroll('digits')",
                                    "_key": "9ebdb736ded6"
                                }
                            ],
                            "slug": {
                                "current": "digits",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "digits",
                            "_key": "a6ce41ebe76b"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "space",
                            "_key": "fec61a9e38a4",
                            "content": [
                                {
                                    "_key": "b96e803498b2",
                                    "_type": "python",
                                    "main": "from microbit import *\n \nif ' '.isspace():\n    display.scroll('space')"
                                }
                            ],
                            "slug": {
                                "current": "space",
                                "_type": "slug"
                            }
                        },
                        {
                            "name": "contains",
                            "_key": "c3f44dc2d11a",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \nif 'lo' in 'hello':\n    display.scroll('contains lo')",
                                    "_key": "8f83e2f23859"
                                }
                            ],
                            "slug": {
                                "current": "contains",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "slug": {
                                "current": "starts-with",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "starts with",
                            "_key": "8d6877f3f639",
                            "content": [
                                {
                                    "main": "from microbit import *\n \nif 'hello'.startswith('h'):\n    display.scroll('starts with h')",
                                    "_key": "d39fe8a3b730",
                                    "_type": "python"
                                }
                            ]
                        },
                        {
                            "_key": "31544ed1e82a",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n \nif 'hello'.endswith('o'):\n    display.scroll('ends with o')",
                                    "_key": "6721c56f0fe5"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "ends-with"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "ends with"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "89c24021934c0",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can test string variables the same way:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "837a65fcdbe1"
                        },
                        {
                            "main": "from microbit import *\n \nmyString = 'hello'\nif myString.islower():\n    display.scroll('lower case')",
                            "_key": "b394ba55f711",
                            "_type": "python"
                        }
                    ],
                    "name": " Testing strings"
                },
                {
                    "slug": {
                        "current": "placeholders",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "befdaffb6d85",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can put placeholders in strings that are then replaced with the values of variables:",
                                    "_key": "853394930cb0"
                                }
                            ]
                        },
                        {
                            "main": "from microbit import *\n\nname = 'Hana'\nscore = 17\ntime = 23.67\ndisplay.scroll('Hi %s you scored %i points in %1.2f seconds' % (name, score, time))",
                            "_key": "2d6343065f34",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "2df402cb6dd3",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "The output in this example is â€˜Hi Hana you scored 17 points in 23.67 secondsâ€™",
                                    "_key": "1b82bc4c0192",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        },
                        {
                            "style": "normal",
                            "_key": "7b95d1897685",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "It uses ",
                                    "_key": "6348cbfcd519"
                                },
                                {
                                    "text": "%1.2f",
                                    "_key": "97454790da37",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "marks": [],
                                    "text": " to specify that two decimal places should be displayed.",
                                    "_key": "1d3929c1fd35",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "a2d28e11b4f5",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Use ",
                                    "_key": "30a043fed2ef",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "%s",
                                    "_key": "c4aeac301251",
                                    "_type": "span"
                                },
                                {
                                    "text": " for strings, ",
                                    "_key": "12daccae8ee0",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "%i",
                                    "_key": "11d433f16757"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " for integers and ",
                                    "_key": "3762a8ec4f4d"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "%f",
                                    "_key": "c831393efad0",
                                    "_type": "span"
                                },
                                {
                                    "marks": [],
                                    "text": " for floating point numbers. ",
                                    "_key": "1ca5f14faa63",
                                    "_type": "span"
                                }
                            ]
                        }
                    ],
                    "name": "Placeholders"
                },
                {
                    "name": " ASCII value of character",
                    "slug": {
                        "current": "ascii-value-of-character",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "c4de63e600d4",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "609d1f64d88a",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "ASCII is a system used for encoding letters and symbols as numbers when theyâ€™re stored in a computer system."
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "style": "normal",
                            "_key": "b60672b6c300",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "e9f9331b2a45",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use "
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "ord()",
                                    "_key": "13432fb3a6fc"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to discover the ASCII value of a character:",
                                    "_key": "08ce8a773cc4"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\ndisplay.scroll(ord('a'))",
                            "_key": "333869a47cee"
                        }
                    ],
                    "detailContent": [
                        {
                            "_key": "f52c9504725c",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "2f578ed3dbc9",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "In this example 97 is shown because the letter â€˜aâ€™ is encoded in ASCII with the number 97."
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "712bd97680b3",
                            "markDefs": [
                                {
                                    "_key": "077a4155134d",
                                    "_type": "link",
                                    "href": "https://www.bbc.co.uk/bitesize/guides/zscvxfr/revision/4"
                                }
                            ],
                            "children": [
                                {
                                    "text": "Read more about ASCII",
                                    "_key": "deeb3800d815",
                                    "_type": "span",
                                    "marks": [
                                        "077a4155134d"
                                    ]
                                },
                                {
                                    "text": ".  ",
                                    "_key": "9288bd174f02",
                                    "_type": "span",
                                    "marks": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Print character from ASCII value",
                    "slug": {
                        "_type": "slug",
                        "current": "print-character-from-ascii-value"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "872a215deb3a",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use ",
                                    "_key": "2fdfe1dc4abe"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "chr()",
                                    "_key": "2c7b27984bc1",
                                    "_type": "span"
                                },
                                {
                                    "marks": [],
                                    "text": " to convert a numerical ASCII value to a character string:",
                                    "_key": "44db5ec508a8",
                                    "_type": "span"
                                }
                            ]
                        },
                        {
                            "_key": "933ceb8c0139",
                            "_type": "python",
                            "main": "from microbit import *\n\ndisplay.scroll(chr(98))"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "In this example the letter â€˜bâ€™ is shown.",
                                    "_key": "b81dcf787020",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "5f98590d67fb"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Using ",
                                    "_key": "b33ec269d22c",
                                    "_type": "span"
                                },
                                {
                                    "text": "chr()",
                                    "_key": "bbcbaca9173f",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "marks": [],
                                    "text": " and ",
                                    "_key": "cb866bcc1d69",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "ord()",
                                    "_key": "447ddf62d7f7"
                                },
                                {
                                    "text": " in Python programs can be useful when making codes like Caesar ciphers.",
                                    "_key": "b4a845af588f",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "bfd23060afaf"
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "This example shifts the letter â€˜aâ€™ along 5 places in the alphabet so it becomes â€˜fâ€™:",
                                    "_key": "417b5b972df1",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "02cf1d6ed5bc"
                        },
                        {
                            "_key": "cc8e0bc294a4",
                            "_type": "python",
                            "main": "from microbit import *\n\ndisplay.scroll(chr(ord('a') + 5))"
                        },
                        {
                            "style": "normal",
                            "_key": "6415ad8feddc",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "The following example encodes the string â€˜helloâ€™ with an offset of 13. This kind of Caesar cipher is also known as ROT13. You can use the same code to encode and decode messages:",
                                    "_key": "a427ed735c770",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "main": "from microbit import *\n\nplaintext = 'hello'\n \nfor letter in plaintext:\n    if ord(letter) > 109:\n        offset = -13\n    else:\n        offset = 13\n    display.scroll(chr(ord(letter) + offset))",
                            "_key": "3e3fb5c75403",
                            "_type": "python"
                        }
                    ]
                }
            ]
        },
        {
            "subtitle": "Use your computerâ€™s keyboard & screen in micro:bit programs",
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-f418e2293bd1a2c4e0f57fe8d7fea4d40929f1de-144x144-svg",
                    "_type": "reference"
                }
            },
            "introduction": [
                {
                    "_type": "block",
                    "style": "normal",
                    "_key": "71e6a9652cf8",
                    "markDefs": [],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "If youâ€™re using a Chrome or Edge web browser, you can access a serial console here in the editor. A serial console allows you to print information from your micro:bit on your computer screen, and use your computerâ€™s keyboard to input information into your Python programs.",
                            "_key": "4eb20e73ac94"
                        }
                    ]
                }
            ],
            "contents": [
                {
                    "content": [
                        {
                            "alt": "Screen shot locating the 'show serial' button in the editor.",
                            "_key": "06f50ccb4d19",
                            "asset": {
                                "_ref": "image-c25d478692de44fb8ec6c71b9e5d1f9e20e2e674-826x146-png",
                                "_type": "reference"
                            },
                            "_type": "simpleImage"
                        },
                        {
                            "children": [
                                {
                                    "_key": "349dbc9e4eb50",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Plug your micro:bit into your computerâ€™s USB socket, click on â€˜connectâ€™ then pair your micro:bit. When you flash a Python program to your micro:bit, you can access the serial console by clicking â€˜Show serialâ€™."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "09421cb8e343",
                            "markDefs": []
                        }
                    ],
                    "name": "Open the serial console",
                    "slug": {
                        "current": "open-the-serial-console",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "name": " Print output to the serial console",
                    "slug": {
                        "current": "print-output-to-the-serial-console",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "46c977d67eed",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "You can output text or numbers to the serial console using the ",
                                    "_key": "50fa88f8bce4",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "print()",
                                    "_key": "02b29ad6694e"
                                },
                                {
                                    "_key": "aea0e5a05ac6",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " function:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_key": "d2716b172e92",
                            "_type": "python",
                            "main": "from microbit import *\n\n\nwhile True:\n    print(display.read_light_level())\n    sleep(1000)"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example prints the current light level once a second.",
                                    "_key": "feceba018e8a"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "0e1754b0808f"
                        },
                        {
                            "style": "normal",
                            "_key": "2aafea1f49a0",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "This can be really useful when debugging a program, or if you want to discover what ranges of sensor readings you get in a particular situation.",
                                    "_key": "66de4201526a",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        }
                    ]
                },
                {
                    "content": [
                        {
                            "children": [
                                {
                                    "_key": "02bfa5faeae7",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "You can interact with Python micro:bit programs by entering text on your computer keyboard:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "17046d0441f2",
                            "markDefs": []
                        },
                        {
                            "main": "name = input('What is your name? ')\nprint('Hello', name)",
                            "_key": "145d11d814a9",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "a25a6b381e0b",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This example asks your name. When you click in the serial console, type your name and press enter, it will greet you.",
                                    "_key": "626b99464a27"
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "name": " Keyboard input",
                    "slug": {
                        "_type": "slug",
                        "current": "keyboard-input"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "children": [
                                {
                                    "marks": [],
                                    "text": "You can use the serial console to type and execute Python commands directly on your micro:bit.",
                                    "_key": "e8fee8a59b640",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "4053ce501d34",
                            "markDefs": []
                        },
                        {
                            "_key": "85b11fcaddab",
                            "asset": {
                                "_ref": "image-dca073d9bb995d67c74194bad9a50ba70f34eaf4-843x253-png",
                                "_type": "reference"
                            },
                            "_type": "simpleImage",
                            "alt": "Screenshot of the REPL being used in the serial console."
                        },
                        {
                            "style": "normal",
                            "_key": "28184319b940",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "",
                                    "_key": "e4adecbab5da",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "8e26ef902de9",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "REPL stands for Read Evaluate Print Loop: the micro:bit reads your instruction, evaluates it, then prints the result in the serial console.",
                                    "_key": "58f2927ba5c7"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "children": [
                                {
                                    "text": "Having connected your micro:bit and flashed a Python program to it, break out of the program by pressing crtl+C to access the command prompt ",
                                    "_key": "91b1191c0b0c",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "text": ">>>",
                                    "_key": "e4adecbab5da",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "faf36155661d",
                            "markDefs": []
                        },
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Type ",
                                    "_key": "4a9fcdc11104",
                                    "_type": "span",
                                    "marks": []
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "help()",
                                    "_key": "9e37e46d6ea0"
                                },
                                {
                                    "marks": [],
                                    "text": " to get some ideas about what you can do.",
                                    "_key": "c6d5d35cb465",
                                    "_type": "span"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "fefab1a42bc8"
                        }
                    ],
                    "name": "REPL",
                    "slug": {
                        "current": "repl",
                        "_type": "slug"
                    }
                }
            ],
            "name": "Text input and output",
            "slug": {
                "current": "text-input-and-output",
                "_type": "slug"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ]
        },
        {
            "image": {
                "_type": "image",
                "asset": {
                    "_ref": "image-e41ddb530173e3a6ab5ade0b6b0f7a51504e1f76-144x144-svg",
                    "_type": "reference"
                }
            },
            "introduction": [
                {
                    "_key": "bd52ae031b84",
                    "markDefs": [],
                    "children": [
                        {
                            "text": "Using ",
                            "_key": "3956abe72aad",
                            "_type": "span",
                            "marks": []
                        },
                        {
                            "_type": "span",
                            "marks": [
                                "code"
                            ],
                            "text": "from math import *",
                            "_key": "75ab558b0839"
                        },
                        {
                            "_type": "span",
                            "marks": [],
                            "text": " at the start of your program gives you access to some advanced mathematical functions.",
                            "_key": "7a55acb50727"
                        }
                    ],
                    "_type": "block",
                    "style": "normal"
                },
                {
                    "markDefs": [],
                    "children": [
                        {
                            "_type": "span",
                            "marks": [],
                            "text": "",
                            "_key": "16ccd4005c820"
                        }
                    ],
                    "_type": "block",
                    "style": "normal",
                    "_key": "d033261821e1"
                }
            ],
            "contents": [
                {
                    "content": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Mathematical constants ",
                                    "_key": "72d5cebd2dfa"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "Ï€",
                                    "_key": "0f22419884db"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " (pi) and ",
                                    "_key": "f730122187d4"
                                },
                                {
                                    "_key": "841c78a1f2ef",
                                    "_type": "span",
                                    "marks": [
                                        "strong"
                                    ],
                                    "text": "e"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " can be used.",
                                    "_key": "21008d62fe62"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "d7daffb7010d"
                        }
                    ],
                    "alternativesLabel": "Select constant:",
                    "alternatives": [
                        {
                            "name": "Ï€ (pi)",
                            "_key": "690196fbb997",
                            "content": [
                                {
                                    "_key": "712a16a034e8",
                                    "_type": "python",
                                    "main": "from microbit import *\nfrom math import *\n\ndisplay.scroll(pi)"
                                },
                                {
                                    "style": "normal",
                                    "_key": "0beab25a24da",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "Pi will be shown as 3.141593",
                                            "_key": "46f638aab3020",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block"
                                }
                            ],
                            "slug": {
                                "current": "Ï€-pi",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\nfrom math import *\n\ndisplay.scroll(e)",
                                    "_key": "aa6d384c3175"
                                },
                                {
                                    "_key": "bc8037fae499",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": "e",
                                            "_key": "5c3e24051dc90",
                                            "_type": "span"
                                        },
                                        {
                                            "text": " will be shown as 2.718282",
                                            "_key": "a2b1895200ac",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                }
                            ],
                            "slug": {
                                "current": "e",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "e",
                            "_key": "8acc9979a393"
                        }
                    ],
                    "name": " Constants",
                    "slug": {
                        "current": "constants",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "name": "Square root",
                    "slug": {
                        "current": "square-root",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_type": "block",
                            "style": "normal",
                            "_key": "ed95855b11c1",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use ",
                                    "_key": "1e027e7b1915"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "sqrt()",
                                    "_key": "bd7f2400de50"
                                },
                                {
                                    "marks": [],
                                    "text": " to calculate the square root of a number.",
                                    "_key": "798225a11125",
                                    "_type": "span"
                                }
                            ]
                        },
                        {
                            "_key": "9ea5bcf908b7",
                            "_type": "python",
                            "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(sqrt(25))"
                        }
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "alternativesLabel": "Select function:",
                    "alternatives": [
                        {
                            "slug": {
                                "_type": "slug",
                                "current": "cos"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "cos",
                            "_key": "d4d31dea1947",
                            "content": [
                                {
                                    "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(cos(1))",
                                    "_key": "105ac8066dc1",
                                    "_type": "python"
                                }
                            ]
                        },
                        {
                            "name": "sin",
                            "_key": "32d959038a5e",
                            "content": [
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(sin(1))",
                                    "_key": "68ced0ba1d7d"
                                }
                            ],
                            "slug": {
                                "current": "sin",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_key": "34ebf94afb96",
                            "content": [
                                {
                                    "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(tan(1))",
                                    "_key": "92125cc77418",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "tan",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "tan"
                        },
                        {
                            "name": "acos",
                            "_key": "57902ac632b7",
                            "content": [
                                {
                                    "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(acos(1))",
                                    "_key": "9c5157e2d354",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "acos",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        },
                        {
                            "_type": "toolkitAlternativeContent",
                            "name": "asin",
                            "_key": "f1b4c2d28df7",
                            "content": [
                                {
                                    "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(asin(1))",
                                    "_key": "81079dfa9e52",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "asin",
                                "_type": "slug"
                            }
                        },
                        {
                            "slug": {
                                "current": "atan",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "atan",
                            "_key": "b9efbaba6072",
                            "content": [
                                {
                                    "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(atan(1))",
                                    "_key": "df3d640b2328",
                                    "_type": "python"
                                }
                            ]
                        },
                        {
                            "name": "atan2",
                            "_key": "d7340a092918",
                            "content": [
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "188800471c64",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "",
                                            "_key": "2eb7e23c73b3",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\nfrom math import *\n\ndisplay.scroll(atan2(1,1))",
                                    "_key": "6cf894beb359"
                                }
                            ],
                            "slug": {
                                "current": "atan2",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent"
                        }
                    ],
                    "detailContent": [
                        {
                            "style": "normal",
                            "_key": "2a4a8a7c2421",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Sine (",
                                    "_key": "baf266e9175e0"
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "sin",
                                    "_key": "5fb7d13f4dfd",
                                    "_type": "span"
                                },
                                {
                                    "_key": "1d1de7cfd207",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "), cosine ("
                                },
                                {
                                    "_key": "b6d1520d3885",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "cos"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ") and tangent (",
                                    "_key": "32882e26a543"
                                },
                                {
                                    "_key": "3fddbbff35d8",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "tan"
                                },
                                {
                                    "_key": "e8c87d6588c9",
                                    "_type": "span",
                                    "marks": [],
                                    "text": ") are trigonometric functions that represent ratios of pairs of sides of a right-angled triangle. The functions accept values in radians so if your angle is in degrees, it will need converting first using the "
                                },
                                {
                                    "_key": "bc2986788351",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "math.radians()"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " function.",
                                    "_key": "a76a482237e7"
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "name": " Trigonometric functions",
                    "slug": {
                        "current": "trigonometric-functions",
                        "_type": "slug"
                    }
                },
                {
                    "alternativesLabel": "Select conversion:",
                    "alternatives": [
                        {
                            "slug": {
                                "current": "degrees-to-radians",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "degrees to radians",
                            "_key": "84f1dbbf8298",
                            "content": [
                                {
                                    "children": [
                                        {
                                            "text": "To convert 180 degrees to radians:",
                                            "_key": "8dd42bf7626e",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "f0a7693ee104",
                                    "markDefs": []
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(radians(180))",
                                    "_key": "78d342d541ec"
                                }
                            ]
                        },
                        {
                            "_key": "ec66cb47a573",
                            "content": [
                                {
                                    "_key": "26e9f2531c89",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "To convert 3 radians to degrees:",
                                            "_key": "c004fb935e3d",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(degrees(3))",
                                    "_key": "51821cdf5a9f",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "_type": "slug",
                                "current": "radians-to-degrees"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "radians to degrees"
                        }
                    ],
                    "name": "Convert degrees and radians",
                    "slug": {
                        "_type": "slug",
                        "current": "convert-degrees-and-radians"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "content": [
                        {
                            "style": "normal",
                            "_key": "cec4b05b4a66",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "63c2659bca68",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "To show 10 to base 2:"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(log(10, 2))",
                            "_key": "6d7a7b0875fc"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "text": "To show log 2 to base 10:",
                                    "_key": "84c58fcdcef7",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "b8fe2b8ce663",
                            "markDefs": []
                        },
                        {
                            "_key": "edef0ff6aa82",
                            "_type": "python",
                            "main": "from microbit import *\nfrom math import *\n\n\ndisplay.scroll(log(2,10))\n"
                        }
                    ],
                    "name": "Logarithms",
                    "slug": {
                        "current": "logarithms",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ]
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "e0868399fa96",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Python has some useful ways of representing and converting binary and hexadecimal numbers. These do not need ",
                                    "_key": "01240393c029"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "import math",
                                    "_key": "3f02623b9d44"
                                }
                            ],
                            "_type": "block"
                        },
                        {
                            "_key": "aac66dbdd729",
                            "markDefs": [],
                            "children": [
                                {
                                    "marks": [],
                                    "text": "Binary numbers are represented with ",
                                    "_key": "dd4b93f96c00",
                                    "_type": "span"
                                },
                                {
                                    "_key": "cb983b1f435c",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "0b"
                                },
                                {
                                    "_key": "7e097106de6b",
                                    "_type": "span",
                                    "marks": [],
                                    "text": " at the start:"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "main": "from microbit import *\n\n\nnumber = 0b11111111\ndisplay.scroll(number)",
                            "_key": "ba5ef0e7c24a",
                            "_type": "python"
                        }
                    ],
                    "detailContent": [
                        {
                            "children": [
                                {
                                    "_key": "dd61df65f050",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "The example above displays 255, the base 10 (denary) equivalent of binary 11111111."
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "04827773c556",
                            "markDefs": []
                        },
                        {
                            "children": [
                                {
                                    "_key": "5a4564913ee1",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use "
                                },
                                {
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "bin()",
                                    "_key": "5ea18e6fe64d",
                                    "_type": "span"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to convert a number to a binary string representation:",
                                    "_key": "8c44787effd8"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "e2efaf3836f3",
                            "markDefs": []
                        },
                        {
                            "_key": "d04ed4900945",
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.scroll(bin(255))"
                        },
                        {
                            "children": [
                                {
                                    "text": "This shows base 10 (denary) 255 as a binary string '0b11111111'.",
                                    "_key": "bf1e36221bdd",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "cebce990671d",
                            "markDefs": []
                        }
                    ],
                    "name": "Binary numbers",
                    "slug": {
                        "current": "binary-numbers",
                        "_type": "slug"
                    }
                },
                {
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "_key": "0f5a0f271c8d",
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Hexadecimal numbers are represented with ",
                                    "_key": "9251b6858dc0"
                                },
                                {
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "0x",
                                    "_key": "852f4e24899f"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " at the start:",
                                    "_key": "1e9da88faa6a"
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        },
                        {
                            "_type": "python",
                            "main": "from microbit import *\n\n\nnumber = 0xFF\ndisplay.scroll(number)",
                            "_key": "191b5099f1c8"
                        }
                    ],
                    "detailContent": [
                        {
                            "markDefs": [],
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This assigns hexadecimal number FF to the variable ",
                                    "_key": "4b2e401dd125"
                                },
                                {
                                    "_key": "53b1f402f5e8",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ],
                                    "text": "number"
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": ", and displays it as base 10 (denary) 255.",
                                    "_key": "f1d89565c6d6"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "164937954792"
                        },
                        {
                            "children": [
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": "Use ",
                                    "_key": "d2dee7fcebad"
                                },
                                {
                                    "text": "hex()",
                                    "_key": "0a1f3567e5a5",
                                    "_type": "span",
                                    "marks": [
                                        "code"
                                    ]
                                },
                                {
                                    "_type": "span",
                                    "marks": [],
                                    "text": " to convert a number to a hexadecimal string representation:",
                                    "_key": "75d768c8022b"
                                }
                            ],
                            "_type": "block",
                            "style": "normal",
                            "_key": "fc980575f8e4",
                            "markDefs": []
                        },
                        {
                            "_key": "cdac1da1d8ca",
                            "_type": "python",
                            "main": "from microbit import *\n\n\ndisplay.scroll(hex(255))"
                        },
                        {
                            "_key": "5f578e06bd98",
                            "markDefs": [],
                            "children": [
                                {
                                    "_key": "6e4144591cf1",
                                    "_type": "span",
                                    "marks": [],
                                    "text": "This shows base 10 (denary) 255 as hexadecimal 0xFF."
                                }
                            ],
                            "_type": "block",
                            "style": "normal"
                        }
                    ],
                    "name": " Hexadecimal numbers",
                    "slug": {
                        "current": "hexadecimal-numbers",
                        "_type": "slug"
                    }
                },
                {
                    "name": "Bitwise operators",
                    "slug": {
                        "current": "bitwise-operators",
                        "_type": "slug"
                    },
                    "compatibility": [
                        "microbitV1",
                        "microbitV2"
                    ],
                    "content": [
                        {
                            "style": "normal",
                            "_key": "0bd45c71cbe4",
                            "markDefs": [],
                            "children": [
                                {
                                    "text": "Bitwise operators allow you to perform operations on numbers at the bit, or binary, level.",
                                    "_key": "46e1d733fa03",
                                    "_type": "span",
                                    "marks": []
                                }
                            ],
                            "_type": "block"
                        }
                    ],
                    "alternativesLabel": "Select operator:",
                    "alternatives": [
                        {
                            "_key": "1ab4cb947a8a",
                            "content": [
                                {
                                    "_key": "49621e416124",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "The â€˜andâ€™ operator ",
                                            "_key": "1c6e24d7a4bc"
                                        },
                                        {
                                            "text": "&",
                                            "_key": "b8a1fc9f3564",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "text": " output of any given digit will be 1 if both digits are 1. This example will mask out the the last (least significant) 4 bits and only keep the first (most significant) 4 bits of y. It will display 0b1010000.",
                                            "_key": "23b0f0abe1d6",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nx = 0b11110000\ny = 0b10101010\ndisplay.scroll(bin(x & y))",
                                    "_key": "51205b1c4c25"
                                }
                            ],
                            "slug": {
                                "current": "bitwise-and",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "bitwise and"
                        },
                        {
                            "_key": "7553ce592123",
                            "content": [
                                {
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "The 'or' operator ",
                                            "_key": "7271282aa17e"
                                        },
                                        {
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "|",
                                            "_key": "74b137b3afd4",
                                            "_type": "span"
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " will output a 1 if either digit is 1.",
                                            "_key": "9cd24ca35aff"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "73c7c109b3c3"
                                },
                                {
                                    "main": "from microbit import *\n\n\nx = 0b11110000\ny = 0b10101010\ndisplay.scroll(bin(x | y))",
                                    "_key": "2d2fda578789",
                                    "_type": "python"
                                }
                            ],
                            "slug": {
                                "current": "bitwise-or",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "bitwise or"
                        },
                        {
                            "content": [
                                {
                                    "_key": "b8e887a653d5",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "The â€˜exclusive orâ€™ operator ",
                                            "_key": "caa0e0579158"
                                        },
                                        {
                                            "text": "^",
                                            "_key": "9cff7fe14076",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ]
                                        },
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": " will output a 1 if either digit is 1 ",
                                            "_key": "3f07e1cf7e31"
                                        },
                                        {
                                            "marks": [
                                                "strong"
                                            ],
                                            "text": "but not both.",
                                            "_key": "11b22ab1f1fe",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_type": "block",
                                    "style": "normal",
                                    "_key": "a6056f5d4851",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "marks": [],
                                            "text": "This displays 0b11101111",
                                            "_key": "81213b059bd2",
                                            "_type": "span"
                                        }
                                    ]
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nx = 0b11110000\ny = 0b00011111\ndisplay.scroll(bin(x ^ y))",
                                    "_key": "525851b282b3"
                                }
                            ],
                            "slug": {
                                "current": "bitwise-exclusive-or",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "bitwise exclusive or",
                            "_key": "d7d3e8a5879f"
                        },
                        {
                            "_key": "453ac90c5f6e",
                            "content": [
                                {
                                    "style": "normal",
                                    "_key": "1db2f7ce2a29",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "text": "Use ",
                                            "_key": "c2354bbafbac",
                                            "_type": "span",
                                            "marks": []
                                        },
                                        {
                                            "_key": "fb50c599f2e1",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "<<"
                                        },
                                        {
                                            "text": " to shift binary digits left. Each shift to the left multiplies the number by 2. This shifts the number left by 4 digits. The result here is 0b11110000. Note that spaces are filled with zeroes.",
                                            "_key": "29450d04db16",
                                            "_type": "span",
                                            "marks": []
                                        }
                                    ],
                                    "_type": "block"
                                },
                                {
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nx = 0b00001111\ndisplay.scroll(bin(x << 4))",
                                    "_key": "501982337a25"
                                }
                            ],
                            "slug": {
                                "current": "bitwise-shift-left",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "bitwise shift left"
                        },
                        {
                            "_key": "aaf7247f2d2a",
                            "content": [
                                {
                                    "_key": "85960c2c282d",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "Use ",
                                            "_key": "c650699e8bdc"
                                        },
                                        {
                                            "_key": "f569ab02219d",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": ">>"
                                        },
                                        {
                                            "marks": [],
                                            "text": " to shift right. Each shift to the right divides the number by 2. This example shifts the digits 2 digits to the right. The result here is 0b11. Digits are lost as they move beyond the least significant digit.",
                                            "_key": "ae9adb191be2",
                                            "_type": "span"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_key": "c1858ae7f935",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nx = 0b00001111\ndisplay.scroll(bin(x >> 2))"
                                }
                            ],
                            "slug": {
                                "current": "bitwise-shift-right",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "bitwise shift right"
                        },
                        {
                            "slug": {
                                "current": "bitwise-complement",
                                "_type": "slug"
                            },
                            "_type": "toolkitAlternativeContent",
                            "name": "bitwise complement",
                            "_key": "558ec072be89",
                            "content": [
                                {
                                    "_key": "b485a6494c92",
                                    "markDefs": [],
                                    "children": [
                                        {
                                            "_type": "span",
                                            "marks": [],
                                            "text": "The bitwise complement operator ",
                                            "_key": "49439a850815"
                                        },
                                        {
                                            "_key": "ac3a13c9b390",
                                            "_type": "span",
                                            "marks": [
                                                "code"
                                            ],
                                            "text": "~"
                                        },
                                        {
                                            "_key": "cda7f8a1708b",
                                            "_type": "span",
                                            "marks": [],
                                            "text": " performs a binary oneâ€™s complement operation on a number. In base 10 this has the effect of changing the numberâ€™s sign and subtracting one. This displays -0b1001 (-9 in denary / base 10):"
                                        }
                                    ],
                                    "_type": "block",
                                    "style": "normal"
                                },
                                {
                                    "_key": "176288afec35",
                                    "_type": "python",
                                    "main": "from microbit import *\n\n\nx = 0b1000\ndisplay.scroll(bin(~x))"
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "Advanced maths",
            "slug": {
                "_type": "slug",
                "current": "advanced-maths"
            },
            "compatibility": [
                "microbitV1",
                "microbitV2"
            ],
            "subtitle": "Add more maths functions to Python"
        }
    ],
    "name": "Reference"
}